


Gadgets
=======


0x00006e18: aad 0x31; or al, 0; ret; 
0x0007fc27: aad 0x76; cli; inc dword ptr [ebx + 0x5f5b10c4]; ret; 
0x000a1713: aad 0x81; ret 0x465; 
0x0005acae: aad 0x83; ret 0x3901; 
0x000a3f59: aad 0x83; ret 0x8301; 
0x000f77ed: aad 0x83; ret 0xf01; 
0x00074ea7: aad 0xe8; ret; 
0x000e83a9: aad 0xf3; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00143b2e: aad 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129235: aad 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00138c3f: aam 0x11; add ah, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x0014304b: aam 0x80; add al, 3; mov esi, 0x140e0a01; inc ecx; ret; 
0x000909cd: aam 0xb7; add byte ptr [eax], al; ret; 
0x0014a51b: aam 1; add al, cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0006acad: aam 1; add byte ptr [eax], al; pop ebx; ret; 
0x0014bdcf: aam 1; add ch, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x001302af: aam 1; add ebx, dword ptr [0x140e0a01]; inc ecx; ret; 
0x001455cd: aam 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012f97b: aam 8; add dh, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x0012d067: aam 8; add dh, byte ptr [ecx + 0x41140e0a]; ret; 
0x000f4de1: adc al, 0; add byte ptr [eax], al; int 0x80; ret; 
0x00059b89: adc al, 0; add byte ptr [ebx + 0x5e5b0cc4], al; ret; 
0x000315a8: adc al, 0x13; add byte ptr [eax], al; and eax, 0x7fffffff; ret; 
0x000315c3: adc al, 0x13; add byte ptr [eax], al; ret; 
0x00021181: adc al, 0x15; add byte ptr [edi], al; ret 2; 
0x00064eb4: adc al, 0x24; call 0x25370; add esp, 0x1c; pop ebx; ret; 
0x00035b63: adc al, 0x24; call dword ptr [eax + 4]; add esp, 0xc; ret; 
0x000c9010: adc al, 0x24; call eax; add esp, 0xc; pop ebx; ret; 
0x0005fb2e: adc al, 0x24; call ecx; add esp, 0x20; ret; 
0x0004e5d0: adc al, 0x24; fldcw word ptr [esp]; add esp, 4; ret; 
0x0004e10f: adc al, 0x24; test edx, edx; sete al; leave; ret; 
0x0004e0d7: adc al, 0x24; test edx, edx; setne al; leave; ret; 
0x0010b701: adc al, 0x24; ret; 
0x000eb552: adc al, 0x29; ret 0x5489; 
0x000b46c7: adc al, 0x29; ret; 
0x000eb938: adc al, 0x32; add dword ptr [eax], eax; pop ebx; ret; 
0x0005bc90: adc al, 0x39; ret 0x1872; 
0x0005bde0: adc al, 0x39; ret 0x187c; 
0x0008ef36: adc al, 0x39; ret 0x8d0f; 
0x0007ee96: adc al, 0x39; ror dword ptr [edi], -0x7c; ret; 
0x0008f815: adc al, 0x3c; cmp dh, byte ptr [eax + edx - 0x7d]; ret 0x8801; 
0x001252e1: adc al, 0x41; ret; 
0x0012d169: adc al, 0x5b; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x000fd9bc: adc al, 0x5b; pop ebp; ret; 
0x000ea04e: adc al, 0x5b; pop esi; pop ebp; ret; 
0x0002cf21: adc al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00029b38: adc al, 0x5b; pop esi; pop edi; ret; 
0x0002bc73: adc al, 0x5b; pop esi; ret; 
0x00029f1f: adc al, 0x5b; ret; 
0x0014ce49: adc al, 0x5e; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x000ab843: adc al, 0x5e; pop edi; pop ebp; ret; 
0x00144efd: adc al, 0x60; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013b27d: adc al, 0x63; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00139359: adc al, 0x67; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013ad5d: adc al, 0x68; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012b695: adc al, 0x6a; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00144721: adc al, 0x6c; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00129009: adc al, 0x6d; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012cc25: adc al, 0x6e; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00147a0d: adc al, 0x6e; push cs; or al, 0x41; ret; 
0x0012de65: adc al, 0x6f; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00141ecd: adc al, 0x73; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00134f4d: adc al, 0x74; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013c23d: adc al, 0x76; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0006053b: adc al, 0x77; ret 0xf631; 
0x00141981: adc al, 0x78; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012552d: adc al, 0x78; push cs; or al, 0x41; ret; 
0x00134db9: adc al, 0x7a; push cs; or al, 0x41; ret; 
0x001290c9: adc al, 0x7b; push cs; or al, 0x41; ret; 
0x00149d45: adc al, 0x7c; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001431b5: adc al, 0x7d; push cs; or al, 0x41; ret; 
0x00124664: adc al, 0x80; add al, byte ptr [eax]; dec eax; ret; 
0x000b2d20: adc al, 0x83; add byte ptr [ebx + ebx*2], al; pop esi; pop edi; ret; 
0x00144e72: adc al, 0x83; add eax, 0x10a80e46; add dl, byte ptr [eax + 0x41140e0a]; ret; 
0x0012a252: adc al, 0x83; add eax, 0x10e00e46; add bl, byte ptr [ebp + 0x41140e0a]; ret; 
0x00142c06: adc al, 0x83; add eax, 0x1840e43; add dh, byte ptr [ebx + 0x41140e0a]; ret; 
0x00133c06: adc al, 0x83; add eax, 0x1880e43; add cl, byte ptr [eax + 0x41140e0a]; ret; 
0x0013376e: adc al, 0x83; add eax, 0x1880e43; add cl, byte ptr [ebx + 0x41140e0a]; ret; 
0x00131b4a: adc al, 0x83; add eax, 0x18c0e43; add cl, byte ptr [ebx + 0x41140e0a]; ret; 
0x00148606: adc al, 0x83; add eax, 0x18c40e46; add al, byte ptr [ebp + 0x41140e0a]; ret; 
0x00131696: adc al, 0x83; add eax, 0x1a80e46; add cl, byte ptr [esi + 0x41140e0a]; ret; 
0x00141472: adc al, 0x83; add eax, 0x1b40e46; add bh, byte ptr [esi + 0x41140e0a]; ret; 
0x0014aada: adc al, 0x83; add eax, 0x1c80e46; add esi, dword ptr [edi + 0x140e0a01]; inc ecx; ret; 
0x001348c6: adc al, 0x83; add eax, 0x1e00e46; add dh, byte ptr [ebp + 0x41140e0a]; ret; 
0x0012b7be: adc al, 0x83; add eax, 0x1f80e46; add dh, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0013c72a: adc al, 0x83; add eax, 0x2200e43; mov eax, dword ptr [0x41140e0a]; ret; 
0x0012ff4e: adc al, 0x83; add eax, 0x2200e43; or cl, byte ptr [0x4114]; ret; 
0x0012b452: adc al, 0x83; add eax, 0x2200e43; push 0x41140e0a; ret; 
0x0012c00e: adc al, 0x83; add eax, 0x2200e43; ret 0xe0a; 
0x0014b512: adc al, 0x83; add eax, 0x2240e43; mov al, byte ptr [0x41140e0a]; ret; 
0x001431e6: adc al, 0x83; add eax, 0x2240e43; mov eax, dword ptr [0x41140e0a]; ret; 
0x0013ebd2: adc al, 0x83; add eax, 0x2240e43; mov ebx, 0x41140e0a; ret; 
0x001468be: adc al, 0x83; add eax, 0x2240e43; mov ecx, 0x41140e0a; ret; 
0x0014a93a: adc al, 0x83; add eax, 0x2240e43; mov edx, 0x41140e0a; ret; 
0x0014918a: adc al, 0x83; add eax, 0x2240e43; or cl, byte ptr [0x4114]; ret; 
0x00138626: adc al, 0x83; add eax, 0x2280e43; mov byte ptr [0x41140e0a], al; ret; 
0x00134412: adc al, 0x83; add eax, 0x2280e43; mov dword ptr [0x41140e0a], eax; ret; 
0x00142c46: adc al, 0x83; add eax, 0x2280e43; mov ebp, 0x41140e0a; ret; 
0x00131746: adc al, 0x83; add eax, 0x2280e43; mov edi, 0x41140e0a; ret; 
0x0013ae1a: adc al, 0x83; add eax, 0x2280e43; or cl, byte ptr [0x4114]; ret; 
0x00144a06: adc al, 0x83; add eax, 0x2280e43; push 0x41140e0a; ret; 
0x0013b402: adc al, 0x83; add eax, 0x2280e43; ret 0xe0a; 
0x0013cf82: adc al, 0x83; add eax, 0x22c0e43; mov esi, 0x41140e0a; ret; 
0x001279e6: adc al, 0x83; add eax, 0x22c0e43; mov esp, 0x41140e0a; ret; 
0x001496d2: adc al, 0x83; add eax, 0x22d80e46; add bh, byte ptr [eax + 0x41140e0a]; ret; 
0x0014bc26: adc al, 0x83; add eax, 0x2300e43; mov edi, 0x41140e0a; ret; 
0x00134ce2: adc al, 0x83; add eax, 0x2300e43; mov esi, 0x41140e0a; ret; 
0x0012d992: adc al, 0x83; add eax, 0x2300e43; ret 0xe0a; 
0x001451ce: adc al, 0x83; add eax, 0x2380e43; mov al, byte ptr [0x41140e0a]; ret; 
0x0014cbca: adc al, 0x83; add eax, 0x2380e43; mov byte ptr [0x41140e0a], al; ret; 
0x001292ae: adc al, 0x83; add eax, 0x23c0e43; mov ebp, 0x41140e0a; ret; 
0x00127aba: adc al, 0x83; add eax, 0x23c0e43; ret 0xe0a; 
0x00136a56: adc al, 0x83; add eax, 0x2400e43; mov edx, 0x41140e0a; ret; 
0x0013f5de: adc al, 0x83; add eax, 0x2440e43; mov esi, 0x41140e0a; ret; 
0x00145586: adc al, 0x83; add eax, 0x2440e43; mov esp, 0x41140e0a; ret; 
0x0014c036: adc al, 0x83; add eax, 0x2440e43; or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x00136b96: adc al, 0x83; add eax, 0x2440e43; ret 0xe0a; 
0x00125afa: adc al, 0x83; add eax, 0x2480e43; mov edi, 0x41140e0a; ret; 
0x0012a53e: adc al, 0x83; add eax, 0x2500e43; ret; 
0x00137ffe: adc al, 0x83; add eax, 0x2580e43; ret 0xe0a; 
0x0013e45e: adc al, 0x83; add eax, 0x2740e43; test byte ptr [edx], 0xe; adc al, 0x41; ret; 
0x0014c172: adc al, 0x83; add eax, 0x2780e43; mov eax, dword ptr [0x41140e0a]; ret; 
0x0014a8fa: adc al, 0x83; add eax, 0x2900e46; add al, byte ptr [edx + 0x41140e0a]; ret; 
0x001483fa: adc al, 0x83; add eax, 0x2ac0e46; add eax, dword ptr [edx + 0x140e0a02]; inc ecx; ret; 
0x00146d9e: adc al, 0x83; add eax, 0x2b00e46; add dl, byte ptr [ebx + 0x41140e0a]; ret; 
0x0012736a: adc al, 0x83; add eax, 0x2c40e46; add bh, byte ptr [esi + 0x41140e0a]; ret; 
0x0014c48e: adc al, 0x83; add eax, 0x3300e43; imul eax, dword ptr [ecx], 0x41140e0a; ret; 
0x00139f96: adc al, 0x83; add eax, 0x3300e43; test dword ptr [ecx], 0x41140e0a; ret; 
0x0013cb0a: adc al, 0x83; add eax, 0x3340e43; mov dword ptr [ecx], 0x41140e0a; ret; 
0x001303ae: adc al, 0x83; add eax, 0x3480e43; ret 0xa02; 
0x0014c4ce: adc al, 0x83; add eax, 0x3780e43; cmp eax, 0x140e0a04; inc ecx; ret; 
0x00132236: adc al, 0x83; add eax, 0x4a40e46; add bh, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0012e2ca: adc al, 0x83; add eax, 0x4c80e46; add al, byte ptr [ebx + 0x41140e0a]; ret; 
0x001425ce: adc al, 0x83; add eax, 0x4c80e46; add dl, byte ptr [edx + 0x41140e0a]; ret; 
0x001346d6: adc al, 0x83; add eax, 0x4f00e46; add ebp, dword ptr [eax + 0x140e0a01]; inc ecx; ret; 
0x0012e98e: adc al, 0x83; add eax, 0x74480e43; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014914a: adc al, 0x83; add eax, 0x755c0e43; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012e9ce: adc al, 0x83; add eax, 0x76180e43; push cs; adc al, 0x41; ret; 
0x0012f93a: adc al, 0x83; add eax, 0x77180e43; push cs; adc al, 0x41; ret; 
0x0012df52: adc al, 0x83; add eax, 0x77480e43; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013c63a: adc al, 0x83; add eax, 0x77500e43; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00137f0e: adc al, 0x83; add eax, 0x78440e43; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001400ee: adc al, 0x83; add eax, 0x7c500e43; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00143eb2: adc al, 0x83; add eax, 0x8b00e46; add al, byte ptr [eax + 0x41140e0a]; ret; 
0x00143dfe: adc al, 0x83; add eax, 0x8b40e46; add dl, byte ptr [ebp + 0x41140e0a]; ret; 
0x0014277a: adc al, 0x83; add eax, 0x8c80e46; add ch, byte ptr [ecx + 0x41140e0a]; ret; 
0x0012d062: adc al, 0x83; add eax, 0x8d40e46; add dh, byte ptr [ecx + 0x41140e0a]; ret; 
0x001487f6: adc al, 0x83; add eax, 0x8e00e46; add al, byte ptr [edi + 0x41140e0a]; ret; 
0x0014856e: adc al, 0x83; add eax, 0x8e00e46; add cl, byte ptr [ecx + 0x41140e0a]; ret; 
0x00132bd6: adc al, 0x83; add eax, 0x9c80e46; add ecx, dword ptr [ebx + 0x140e0a03]; inc ecx; ret; 
0x00143c6e: adc al, 0x83; add eax, 0xa028d03; ret; 
0x001452aa: adc al, 0x83; add eax, 0xadc0e46; add dh, byte ptr [edx + 0x41140e0a]; ret; 
0x0003e2d4: adc al, 0x83; ret 0x3104; 
0x000c5b9a: adc al, 0x83; ret 0x8301; 
0x000f974b: adc al, 0x83; ret 0x8501; 
0x0004e4c0: adc al, 0x85; sal byte ptr [ebp + 1], 0x40; mov dword ptr [esp], ecx; ret; 
0x0002a282: adc al, 0x86; xor eax, eax; pop ebx; pop esi; ret; 
0x000f39bc: adc al, 0x89; adc dword ptr [esi + 0x5f], ebx; pop ebp; ret; 
0x000643d7: adc al, 0x89; add al, 0x24; call 0x64068; add esp, 0x10; ret; 
0x000a2b52: adc al, 0x89; add al, 0x24; call 0xa2598; add esp, 0x10; ret; 
0x000370bf: adc al, 0x89; add dword ptr [eax + 1], edi; add esp, 0xc; ret; 
0x0008638d: adc al, 0x89; inc ebp; add al, 0x89; ret 0xc085; 
0x0005165a: adc al, 0x89; inc ecx; adc byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x00091566: adc al, 0x89; inc ecx; or al, 0x5e; pop edi; ret; 
0x000c53cc: adc al, 0x89; or dh, dh; ret 0x7503; 
0x000a6626: adc al, 0x89; ret 0x448b; 
0x000a6706: adc al, 0x89; ret 0x838d; 
0x0005574f: adc al, 0x89; ret 0xc889; 
0x00108d1f: adc al, 0x89; ret 0xf039; 
0x00044c4a: adc al, 0x89; ret 0xf089; 
0x000e323d: adc al, 0x8b; inc eax; or byte ptr [ebp + 0x390874c0], al; ret 0x850f; 
0x000a6a6c: adc al, 0x8b; inc esi; adc al, ch; ret 0xfffa; 
0x0005473d: adc al, 0x8b; inc esi; or al, 0x89; ret 0xce80; 
0x00051beb: adc al, 0x8b; inc esi; or al, 0x89; ret 0xeac1; 
0x0010b5e5: adc al, 0x8b; push 0x830e0310; shl byte ptr [eax], 0x39; ret 0xe977; 
0x0003bd44: adc al, 0x8d; stosd dword ptr es:[edi], eax; ret; 
0x00036d00: adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000b4832: adc al, 0xb8; add eax, dword ptr [eax]; add byte ptr [eax], al; leave; ret; 
0x00098791: adc al, 0xba; imul eax, dword ptr [eax], 0; add byte ptr [ecx], ch; ret 0xd285; 
0x0003f641: adc al, 0xc1; call 0x8805224b; inc edx; add dword ptr [eax + 2], edi; ret; 
0x00088f89: adc al, 0xc7; add byte ptr [ecx], al; add byte ptr [eax], al; add bl, ch; ret; 
0x000f84c2: adc al, 0xcc; cld; inc dword ptr [ecx + ecx*8 + 0x5e5be975]; pop edi; ret; 
0x000e7898: adc al, 0xd8; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0012520c: adc al, 0xdc; add dword ptr [eax], eax; ret; 
0x000d8ddd: adc al, 0xe8; adc eax, 0x81000329; ret; 
0x000bf4ed: adc al, 0xe8; add eax, 0x810004c2; ret; 
0x000b23cd: adc al, 0xe8; and eax, 0x81000593; ret; 
0x000e74b5: adc al, 0xe8; cmp eax, 0x81000242; ret; 
0x0008b252: adc al, 0xe8; mov al, byte ptr [0x81000804]; ret; 
0x000dad50: adc al, 0xe8; mov byte ptr [0x81000309], al; ret; 
0x0008e350: adc al, 0xe8; mov byte ptr [0x810007d3], al; ret; 
0x000e2f3a: adc al, 0xe8; mov eax, 0x81000287; ret; 
0x0002d151: adc al, 0xe8; mov eax, dword ptr [0x81000de5]; ret; 
0x00084035: adc al, 0xe8; mov ebp, 0x81000876; ret; 
0x00065337: adc al, 0xe8; mov ebx, 0x81000a63; ret; 
0x00098533: adc al, 0xe8; mov edi, 0x81000731; ret; 
0x00074633: adc al, 0xe8; mov edi, 0x81000970; ret; 
0x000d0838: adc al, 0xe8; mov edx, 0x810003ae; ret; 
0x000bae38: adc al, 0xe8; mov edx, 0x81000508; ret; 
0x000a3836: adc al, 0xe8; mov esp, 0x8100067e; ret; 
0x00075ac5: adc al, 0xe8; sub eax, 0x8100095c; ret; 
0x000dab2f: adc al, 0xe8; ret; 
0x000311ad: adc al, 0xe9; ret 0xfffd; 
0x000aabbf: adc al, 0xe9; ret 0xfffe; 
0x000f163c: adc al, 0xe9; ret; 
0x00051b5a: adc al, 0xeb; ret 0x688b; 
0x000cea5e: adc al, 0xf; mov dh, 0x4f; or byte ptr [eax - 0x7bf00107], al; ret 0; 
0x000f5379: adc al, 0xf; xchg eax, ebp; ret 0xb60f; 
0x000c59b7: adc al, 0xf6; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x00104975: adc al, 0xf6; ret 0x7501; 
0x001056b1: adc al, 0xf7; shl byte ptr [esi + 1], 1; ret 0x2a74; 
0x00095a11: adc al, 0xf9; inc dword ptr [ebx + 0x5e5b04c4]; pop edi; ret; 
0x00062b70: adc al, 1; add byte ptr [eax], al; add byte ptr [ecx - 0x7cff728c], cl; ret 0x8301; 
0x0005f9af: adc al, 1; add byte ptr [eax], al; ret; 
0x00144bdd: adc al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0008222f: adc al, 1; ret 0x5439; 
0x0004ba84: adc al, 1; ret 0x5489; 
0x00067b0f: adc al, 1; ret 0x7a8d; 
0x00031960: adc al, 1; ret 0xb60f; 
0x0013b245: adc al, 2; dec eax; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00130401: adc al, 2; dec ebx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001419ed: adc al, 2; dec ecx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00147cd1: adc al, 2; dec esp; push cs; or al, 0x41; ret; 
0x001484d9: adc al, 2; inc ebx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001258bd: adc al, 2; pop ecx; push cs; or al, 0x41; ret; 
0x0012fc99: adc al, 2; pushal; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00036cee: adc al, 4; mov eax, 1; ret; 
0x00094599: adc al, 9; inc esi; sbb byte ptr [ebx + 0x5e5b08c4], al; ret; 
0x000ced4e: adc al, byte ptr [eax]; add byte ptr [ebx - 0x7bf0fd1b], al; ret; 
0x000bc488: adc al, byte ptr [eax]; add byte ptr [ecx], ch; ret 0xd089; 
0x0002a1d5: adc al, byte ptr [eax]; mov eax, dword ptr [ecx + 0x35d0]; ret; 
0x0002bb1a: adc al, byte ptr [eax]; mov eax, dword ptr [esp + 4]; lea eax, dword ptr [eax + eax*2]; mov eax, dword ptr [ecx + eax*4 + 0x367c]; ret; 
0x00010fa0: adc al, byte ptr [eax]; or byte ptr [eax], al; divps xmm0, xmmword ptr [eax]; add dh, dh; ret; 
0x00006580: adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0; 
0x00009a20: adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x26; 
0x00007d30: adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x2b; 
0x00009ce0: adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x2d; 
0x0000bb30: adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x46; 
0x000139b0: adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x47; 
0x0000da20: adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x48; 
0x00007c20: adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x49; 
0x0000be40: adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x6a; 
0x0000c220: adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x6c; 
0x000147b0: adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x75; 
0x00006b90: adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x78; 
0x00006b70: adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x86; 
0x0000dc10: adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0xb; 
0x00012a30: adc al, byte ptr [eax]; or byte ptr [eax], al; sub al, 0x3e; add byte ptr [eax], al; ret; 
0x00006c10: adc al, byte ptr [eax]; or byte ptr [eax], al; ret; 
0x0012930d: adc al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0004b558: adc al, byte ptr [ecx]; ret 0xcfc1; 
0x00132fd5: adc al, byte ptr [edx + ecx]; push cs; adc al, 0x41; ret; 
0x00034edd: adc al, ch; adc eax, 0x81000d68; ret; 
0x001068ed: adc al, ch; add eax, 0x8100004e; ret; 
0x000e57ed: adc al, ch; add eax, 0x8100025f; ret; 
0x000ba3ed: adc al, ch; add eax, 0x81000513; ret; 
0x000427ed: adc al, ch; add eax, 0x81000c8f; ret; 
0x000ee1cd: adc al, ch; and eax, 0x810001d5; ret; 
0x0007e2cd: adc al, ch; and eax, 0x810008d4; ret; 
0x0003ea0a: adc al, ch; call 0x8103f6dd; ret; 
0x0005660a: adc al, ch; call 0x81057161; ret; 
0x00034ab5: adc al, ch; cmp eax, 0x81000d6c; ret; 
0x000e4da6: adc al, ch; dec esp; imul eax, dword ptr [edx], 0xd8c38100; ret 6; 
0x0002f752: adc al, ch; mov al, byte ptr [0x81000dbf]; ret; 
0x000d6950: adc al, ch; mov byte ptr [0x8100034d], al; ret; 
0x000bd450: adc al, ch; mov byte ptr [0x810004e2], al; ret; 
0x00036450: adc al, ch; mov byte ptr [0x81000d52], al; ret; 
0x000e4e3a: adc al, ch; mov eax, 0x81000268; ret; 
0x000bd93a: adc al, ch; mov eax, 0x810004dd; ret; 
0x0008fa3a: adc al, ch; mov eax, 0x810007bc; ret; 
0x0006013a: adc al, ch; mov eax, 0x81000ab5; ret; 
0x000e4b51: adc al, ch; mov eax, dword ptr [0x8100026b]; ret; 
0x00077351: adc al, ch; mov eax, dword ptr [0x81000943]; ret; 
0x000cf935: adc al, ch; mov ebp, 0x810003bd; ret; 
0x000aae35: adc al, ch; mov ebp, 0x81000608; ret; 
0x00081839: adc al, ch; mov ecx, 0x8100089e; ret; 
0x000f4e33: adc al, ch; mov edi, 0x81000168; ret; 
0x0004ac33: adc al, ch; mov edi, 0x81000c0a; ret; 
0x000d8338: adc al, ch; mov edx, 0x81000333; ret; 
0x00031534: adc al, ch; mov esi, 0x81000da1; ret; 
0x0002c034: adc al, ch; mov esi, 0x81000df6; ret; 
0x000b1c36: adc al, ch; mov esp, 0x8100059a; ret; 
0x000a4236: adc al, ch; mov esp, 0x81000674; ret; 
0x00036536: adc al, ch; mov esp, 0x81000d51; ret; 
0x0002c736: adc al, ch; mov esp, 0x81000def; ret; 
0x00065ee5: adc al, ch; or eax, 0x81000a58; ret; 
0x00056de5: adc al, ch; or eax, 0x81000b49; ret; 
0x000fb78a: adc al, ch; push 0x810000ff; ret; 
0x0003c09f: adc al, ch; push ebx; test byte ptr [eax + eax], 0x81; ret; 
0x000b6330: adc al, ch; ret 0x553; 
0x00095930: adc al, ch; ret 0x75d; 
0x000579d8: adc al, ch; ret 0xfff9; 
0x000a6a6f: adc al, ch; ret 0xfffa; 
0x000e4ed5: adc al, ch; sbb eax, 0x81000268; ret; 
0x0008b0d5: adc al, ch; sbb eax, 0x81000806; ret; 
0x00082ad5: adc al, ch; sbb eax, 0x8100088c; ret; 
0x00077fd5: adc al, ch; sbb eax, 0x81000937; ret; 
0x0004cfd5: adc al, ch; sbb eax, 0x81000be7; ret; 
0x000ea5c5: adc al, ch; sub eax, 0x81000211; ret; 
0x000d21c5: adc al, ch; sub eax, 0x81000395; ret; 
0x000c96c5: adc al, ch; sub eax, 0x81000420; ret; 
0x000bf6c5: adc al, ch; sub eax, 0x810004c0; ret; 
0x00082dc5: adc al, ch; sub eax, 0x81000889; ret; 
0x0005d4c5: adc al, ch; sub eax, 0x81000ae2; ret; 
0x000597c5: adc al, ch; sub eax, 0x81000b1f; ret; 
0x0003eb49: adc al, ch; test eax, 0x81000ccb; ret; 
0x00035060: adc al, ch; xchg eax, edx; or ax, 0x8100; ret; 
0x000a2fbd: adc al, ch; xor eax, 0x81000687; ret; 
0x0003f4fa: adc al, ch; clc; ror dword ptr [eax + eax], -0x7f; ret; 
0x0003522f: adc al, ch; ret; 
0x0003f3f7: adc al, ch; sti; ret 0xc; 
0x0004ac64: adc al, dh; loope 0x4ac3a; ret; 
0x0004b39b: adc al, dh; loope 0x4b371; ret; 
0x0004b398: adc bh, al; inc eax; adc al, dh; loope 0x4b371; ret; 
0x0004ac61: adc bh, al; inc esi; adc al, dh; loope 0x4ac3a; ret; 
0x0005c989: adc bh, byte ptr [ecx]; ret 0x3f74; 
0x00053801: adc bh, ch; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000e3ecc: adc bl, ch; or al, 0x89; ret 0xfad1; 
0x000e6550: adc bl, ch; or cl, byte ptr [ecx + 0xfc138f1]; test byte ptr [eax - 0x7d000000], ch; ret 0x8301; 
0x00051e43: adc byte ptr [0x7fff], ah; mov ecx, dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x000f886a: adc byte ptr [eax + 0x20], bh; ret; 
0x0012d0d9: adc byte ptr [eax + 0xa], bh; push cs; or al, 0x41; ret; 
0x0013e255: adc byte ptr [eax + 0xe], bh; or al, 0x41; ret; 
0x00058233: adc byte ptr [eax + 0xe], bh; ret; 
0x001438b5: adc byte ptr [eax + 0xe], ch; or al, 0x41; ret; 
0x000c2874: adc byte ptr [eax + 1], bh; pop esi; ret; 
0x000385f1: adc byte ptr [eax - 0x17000000], al; ret 0xfffe; 
0x00103420: adc byte ptr [eax - 0x76bedbac], cl; ret 0xc166; 
0x001033f8: adc byte ptr [eax - 0x76c2dbac], cl; ret 0xc166; 
0x001033d4: adc byte ptr [eax - 0x76c6dbac], cl; ret 0xc166; 
0x001033b0: adc byte ptr [eax - 0x76cadbac], cl; ret 0xc166; 
0x0010338c: adc byte ptr [eax - 0x76cedbac], cl; ret 0xc166; 
0x00103368: adc byte ptr [eax - 0x76d2dbac], cl; ret 0xc166; 
0x00141580: adc byte ptr [eax], al; add byte ptr [eax], al; dec esp; ret; 
0x00044085: adc byte ptr [eax], al; mov eax, dword ptr [ecx + 0x6400]; ret; 
0x00005d2a: adc byte ptr [eax], al; ret 0; 
0x000636b6: adc byte ptr [ebp + 0x1342444], cl; ret 0xc6; 
0x000a1b40: adc byte ptr [ebp + 0x1382444], cl; ret 0xc6; 
0x00129035: adc byte ptr [ebp + 0xa], ah; push cs; or al, 0x41; ret; 
0x00141f79: adc byte ptr [ebp + 0xa], ch; push cs; or al, 0x41; ret; 
0x0012c501: adc byte ptr [ebp + 0xe], ch; or al, 0x41; ret; 
0x00130fd5: adc byte ptr [ebp + 0xe], dh; or al, 0x41; ret; 
0x00074a41: adc byte ptr [ebp - 0x399656d], cl; dec dword ptr [ecx - 0x72f3dbac]; xchg eax, ebx; ret 0xfc0b; 
0x0013f575: adc byte ptr [ebx + 0x140e4304], al; add al, byte ptr [edi + 0x41100e0a]; ret; 
0x0012b299: adc byte ptr [ebx + 0x140e4304], al; imul ecx, dword ptr [esi], 0x10; inc ecx; ret; 
0x00128601: adc byte ptr [ebx + 0x140e4304], al; push 0x41100e0a; ret; 
0x00144509: adc byte ptr [ebx + 0x180e4304], al; add al, byte ptr [ebp + 0x41100e0a]; ret; 
0x00147635: adc byte ptr [ebx + 0x180e4304], al; add ch, byte ptr [eax + 0x41100e0a]; ret; 
0x0012e599: adc byte ptr [ebx + 0x200e4304], al; add ah, byte ptr [esi + 0x41100e0a]; ret; 
0x0012ca6d: adc byte ptr [ebx + 0x200e4304], al; add al, byte ptr [ebp + 0x41100e0a]; ret; 
0x0014ca75: adc byte ptr [ebx + 0x200e4304], al; add al, byte ptr [ecx + 0x41100e0a]; ret; 
0x0013e09d: adc byte ptr [ebx + 0x200e4304], al; add bh, byte ptr [eax + 0x41100e0a]; ret; 
0x0012e751: adc byte ptr [ebx + 0x200e4304], al; add bl, byte ptr [edi + 0x41100e0a]; ret; 
0x0014b259: adc byte ptr [ebx + 0x200e4304], al; add ch, byte ptr [edi + 0x41100e0a]; ret; 
0x0013ed69: adc byte ptr [ebx + 0x200e4304], al; add cl, byte ptr [edx + 0x41100e0a]; ret; 
0x0013e4f5: adc byte ptr [ebx + 0x240e4304], al; add al, byte ptr [edi + 0x41100e0a]; ret; 
0x00128799: adc byte ptr [ebx + 0x240e4304], al; add al, byte ptr [esi + 0x41100e0a]; ret; 
0x00142609: adc byte ptr [ebx + 0x240e4304], al; add bl, byte ptr [esi + ecx + 0x10]; inc ecx; ret; 
0x0014c97d: adc byte ptr [ebx + 0x240e4304], al; add dl, byte ptr [edi + 0x41100e0a]; ret; 
0x00140e45: adc byte ptr [ebx + 0x240e4304], al; or cl, byte ptr [0x4110]; ret; 
0x00125821: adc byte ptr [ebx + 0x280e4304], al; add ah, byte ptr [esi + ecx + 0x10]; inc ecx; ret; 
0x000b46c3: adc byte ptr [ebx + 0x2914244c], cl; ret; 
0x0012f9b1: adc byte ptr [ebx + 0x2c0e4304], al; add bl, byte ptr [esi + ecx + 0x10]; inc ecx; ret; 
0x0006a0b9: adc byte ptr [ebx + 0x33102444], cl; inc ebp; or al, 9; ret 0x840f; 
0x001355f5: adc byte ptr [ebx + 0x340e4304], al; add ah, byte ptr [esi + 0x41100e0a]; ret; 
0x00128fb1: adc byte ptr [ebx + 0x340e4304], al; add bh, byte ptr [edx + 0x41100e0a]; ret; 
0x00147e15: adc byte ptr [ebx + 0x380e4304], al; add al, byte ptr [ebp + 0x41100e0a]; ret; 
0x0005bc8c: adc byte ptr [ebx + 0x39142444], cl; ret 0x1872; 
0x0005bddc: adc byte ptr [ebx + 0x39142444], cl; ret 0x187c; 
0x00138081: adc byte ptr [ebx + 0x3c0e4304], al; add dl, byte ptr [eax + 0x41100e0a]; ret; 
0x001253d1: adc byte ptr [ebx + 0x440e4304], al; add bl, byte ptr [esi + 0x41100e0a]; ret; 
0x00130bad: adc byte ptr [ebx + 0x4c0e4304], al; add al, byte ptr [ebx + 0x41100e0a]; ret; 
0x00130cb1: adc byte ptr [ebx + 0x500e4304], al; add cl, byte ptr [ebx + 0x41100e0a]; ret; 
0x00064375: adc byte ptr [ebx + 0x5e5b04c4], al; pop edi; ret; 
0x000d2af2: adc byte ptr [ebx + 0x5e5b08c4], al; ret; 
0x000501e3: adc byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x00032c59: adc byte ptr [ebx + 0x5e5b10c4], al; ret; 
0x00029b35: adc byte ptr [ebx + 0x5e5b14c4], al; pop edi; ret; 
0x0002bd80: adc byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000bb126: adc byte ptr [ebx + 0x5e5b24c4], al; pop edi; ret; 
0x000656cf: adc byte ptr [ebx + 0x5e5b64c4], al; pop edi; ret; 
0x000a2e5f: adc byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x0002a58a: adc byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0002c0bb: adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00027bc4: adc byte ptr [ebx + 0x5e], bl; ret; 
0x0007fc2d: adc byte ptr [ebx + 0x5f], bl; ret; 
0x00052436: adc byte ptr [ebx + 0x66082444], cl; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0002bdf4: adc byte ptr [ebx + 0x674fff8], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0014bcf1: adc byte ptr [ebx + 0xa500204], al; ret; 
0x00143bcd: adc byte ptr [ebx + 0xa590204], al; ret; 
0x00146e49: adc byte ptr [ebx + 0xa5d0204], al; ret; 
0x0013875d: adc byte ptr [ebx + 0xa8f0204], al; ret; 
0x0013df4d: adc byte ptr [ebx + 0xa], bh; push cs; or al, 0x41; ret; 
0x00142081: adc byte ptr [ebx + 0xaa00204], al; ret; 
0x00142221: adc byte ptr [ebx + 0xaf60204], al; ret; 
0x000ab0ab: adc byte ptr [ebx + 0xc0a883], cl; add byte ptr [ecx], bh; ret 0x2474; 
0x00128e09: adc byte ptr [ebx + 0xe], bh; or al, 0x41; ret; 
0x001304e1: adc byte ptr [ebx + 0xe], ch; or al, 0x41; ret; 
0x00140799: adc byte ptr [ebx + 0xe], dh; or al, 0x41; ret; 
0x000f8d8b: adc byte ptr [ebx - 0x74cfdbbc], cl; inc eax; or byte ptr [ecx], bh; sar dword ptr [esi + 9], -0x7d; ret 0x101; 
0x0012a298: adc byte ptr [ebx], al; int 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00138518: adc byte ptr [ebx], al; or byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0006a0bd: adc byte ptr [ebx], dh; inc ebp; or al, 9; ret 0x840f; 
0x00063d07: adc byte ptr [ebx], dh; xchg dword ptr [eax], ebp; cmp dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x4975; 
0x0009c709: adc byte ptr [ecx + 0x4ee82404], cl; cmp eax, 0x8c483ff; pop ebx; ret; 
0x000c6ce3: adc byte ptr [ecx + 0x64e82434], cl; add esi, esi; dec dword ptr [ebp + 0xe08c83]; add bl, ch; ret 0x6c7; 
0x0002a3c4: adc byte ptr [ecx + 0x72], 1; ret; 
0x0009c9bb: adc byte ptr [ecx + 0x7ce82404], cl; lcall 0x5b08:0xc483fff8; ret; 
0x00143851: adc byte ptr [ecx + 0xa], bh; push cs; or al, 0x41; ret; 
0x0004842b: adc byte ptr [ecx + 0xce8243c], cl; ret; 
0x001275ad: adc byte ptr [ecx + 0xe], ch; or al, 0x41; ret; 
0x0008024b: adc byte ptr [ecx - 0x165a0c2a], cl; ret; 
0x000653b5: adc byte ptr [ecx - 0x3b7cfbaa], cl; adc al, 0x5b; pop esi; ret; 
0x000611fe: adc byte ptr [ecx - 0x3fceeb87], cl; ret; 
0x0004e4e4: adc byte ptr [ecx - 0x3fceeb88], cl; ret; 
0x0003bbb6: adc byte ptr [ecx - 0x3fcefbb0], cl; add esp, 0x18; pop ebx; ret; 
0x0003bd40: adc byte ptr [ecx - 0x72ebdbb4], cl; stosd dword ptr es:[edi], eax; ret; 
0x00030fcd: adc byte ptr [ecx - 0x72f3db84], cl; cmp dword ptr [edx - 0x16000449], 0x3f; add dword ptr [eax], eax; add byte ptr [ebx - 0x7cc7dbac], cl; ret 0x8b01; 
0x000b491d: adc byte ptr [ecx - 0x7cb7dbb4], cl; ret 0x8b04; 
0x0013227e: adc byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000e0b34: adc byte ptr [ecx], al; ret 0xf929; 
0x000fe981: adc byte ptr [ecx], bh; ret 0x3273; 
0x00044bdf: adc byte ptr [ecx], bh; ret 0x3c77; 
0x000b4d3d: adc byte ptr [ecx], bh; ret 0x8e0f; 
0x00067ecf: adc byte ptr [ecx], ch; ret 0x5489; 
0x000ff916: adc byte ptr [ecx], ch; ret 0x8966; 
0x000c8e62: adc byte ptr [ecx], ch; ret; 
0x000a7720: adc byte ptr [ecx], cl; ret 0x428d; 
0x00071887: adc byte ptr [ecx], cl; ret 0x7a8d; 
0x000d7e50: adc byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0005c8a4: adc byte ptr [ecx], dh; ret 0xd089; 
0x000d80b6: adc byte ptr [ecx], dh; ret 0xf089; 
0x0013d3fd: adc byte ptr [edi + 0xa], ah; push cs; or al, 0x41; ret; 
0x00141409: adc byte ptr [edi + 0xa], ch; push cs; or al, 0x41; ret; 
0x00148bdd: adc byte ptr [edi + 0xe], ah; or al, 0x41; ret; 
0x001276b1: adc byte ptr [edi + 0xe], ch; or al, 0x41; ret; 
0x00141b51: adc byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x0010b055: adc byte ptr [edi - 0x17], al; ret 0xfff7; 
0x000c25b1: adc byte ptr [edi - 0xf], dh; mov dword ptr [edx + 0xc], ecx; pop esi; pop edi; ret; 
0x000eabaa: adc byte ptr [edi], cl; mov bh, 0xc0; ret; 
0x000feca7: adc byte ptr [edi], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x0005fdb6: adc byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret 0x6c8b; 
0x00055199: adc byte ptr [edi], cl; test dword ptr [ecx - 0x18000000], ebx; ret; 
0x00057a2c: adc byte ptr [edi], cl; test dword ptr [esi - 0x16000006], esp; mov eax, dword ptr [0x89fffff9]; ret 0x9ae9; 
0x0013cf05: adc byte ptr [edx + 0xa], bh; push cs; or al, 0x41; ret; 
0x00134de5: adc byte ptr [edx + 0xe], dh; or al, 0x41; ret; 
0x00147a99: adc byte ptr [edx + ecx + 0xe], bh; or al, 0x41; ret; 
0x00129155: adc byte ptr [edx + ecx + 0xe], bl; or al, 0x41; ret; 
0x000f3d4c: adc byte ptr [edx + edx*8 - 0x57ffa8c], al; and byte ptr [ebp - 0x24], dh; ret; 
0x0014c5a5: adc byte ptr [edx], al; dec ecx; push cs; or al, 0x41; ret; 
0x0012d008: adc byte ptr [edx], al; fimul word ptr [edx]; push cs; adc al, 0x41; ret; 
0x00145ad4: adc byte ptr [edx], al; in al, dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00139be1: adc byte ptr [edx], al; inc ebp; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012eb41: adc byte ptr [edx], al; inc ebp; push cs; or al, 0x41; ret; 
0x00146a25: adc byte ptr [edx], al; inc edi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001397b5: adc byte ptr [edx], al; inc esp; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012ee35: adc byte ptr [edx], al; insb byte ptr es:[edi], dx; push cs; or al, 0x41; ret; 
0x0013c190: adc byte ptr [edx], al; jo 0x13c19e; push cs; adc al, 0x41; ret; 
0x00142dcd: adc byte ptr [edx], al; mov byte ptr [esi], cl; or al, 0x41; ret; 
0x001438e1: adc byte ptr [edx], al; pop esi; push cs; or al, 0x41; ret; 
0x0013ccf1: adc byte ptr [edx], al; push cs; or al, 0x41; ret; 
0x0014cb01: adc byte ptr [edx], al; push edi; push cs; or al, 0x41; ret; 
0x001388ad: adc byte ptr [edx], al; push edx; push cs; or al, 0x41; ret; 
0x0013b340: adc byte ptr [edx], al; xchg eax, ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012d894: adc byte ptr [edx], al; cld; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00144e78: adc byte ptr [edx], al; nop; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012a258: adc byte ptr [edx], al; popfd; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00139391: adc byte ptr [edx], al; pushal; push cs; or al, 0x41; ret; 
0x00129419: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x1880e43], 0x78; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00147975: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2180e43], 0x7c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00147a39: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2180e43], 0x7e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00138359: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x21c0e43], -0x3b; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013b2f5: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x21c0e43], 0x69; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00142311: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x21c0e43], 0x75; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012c009: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2200e43], -0x3e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00139549: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2200e43], 0x75; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00140129: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2200e43], 0x7f; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014043d: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2240e43], -0x7e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126715: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2240e43], -0x7f; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013a1e9: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2240e43], 0x69; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001345f9: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2240e43], 0x73; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012cd01: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2240e43], 0x75; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001408ed: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2240e43], 0x76; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012630d: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2240e43], 0x78; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00149ef1: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2240e43], 0x7d; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127b7d: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2240e43], 0x7e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129f99: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2240e43], 0x7f; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014b38d: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2280e43], -0x1e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00131925: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2280e43], -0x34; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001335ad: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2280e43], -0x35; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00144ccd: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2280e43], -0x38; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00133381: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2280e43], -0x3a; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00132f31: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2280e43], -0x3b; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013b3fd: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2280e43], -0x3e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013f911: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2280e43], 0x73; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012683d: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2280e43], 0x76; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013f951: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2280e43], 0x77; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013d7f9: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2280e43], 0x7f; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00134c11: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x22c0e43], -0x27; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00131dd9: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x22c0e43], -0x36; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00131081: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x22c0e43], -0x3c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129539: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x22c0e43], -0x71; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001312b9: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x22c0e43], 0x72; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012bc0d: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x22c0e43], 0x77; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012ae89: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2300e43], -0x27; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b539: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2300e43], -0x35; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014b6c5: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2300e43], -0x39; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012d98d: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2300e43], -0x3e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126ac9: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2300e43], 0x77; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013d94d: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2340e43], -0x10; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014b8d1: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2340e43], -0x27; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013b3bd: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2340e43], 0x73; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00135e51: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2340e43], 0x77; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00139981: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2340e43], 0x78; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014add1: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2380e43], -0x3c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00144201: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2380e43], -0x7e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012da69: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x23c0e43], -0x36; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127ab5: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x23c0e43], -0x3e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00146c9d: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x23c0e43], 0x7e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b9c9: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2440e43], -0x7e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00145601: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2480e43], -0x71; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b8e1: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2480e43], -0x7e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012c665: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2500e43], -0x66; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b7f9: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2580e43], -0x7e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001441c1: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x25c0e43], -0x7e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012d519: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2700e43], 0x78; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012c88d: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2700e43], 0x7d; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013c8a5: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x2740e43], -0x7f; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00139cc1: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x32b40e46], 0x7c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00146c5d: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x3380e43], 0x69; add dword ptr [esi], ecx; adc al, 0x41; ret; 
0x0012a379: adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x9a40e46], 3; ret 0xa02; 
0x0003f9ec: adc byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x0012e1fd: adc byte ptr [esi + 0xa], bh; push cs; or al, 0x41; ret; 
0x00144f55: adc byte ptr [esi + 0xe], ah; or al, 0x41; ret; 
0x0013efb5: adc byte ptr [esi + 0xe], ch; or al, 0x41; ret; 
0x00128b75: adc byte ptr [esi + 0xe], dh; or al, 0x41; ret; 
0x001274a0: adc byte ptr [esi + ecx + 8], ah; inc ecx; ret; 
0x000ffd41: adc ch, byte ptr [ecx]; ret 0x5489; 
0x001068a4: adc ch, byte ptr [ecx]; ret 0x8966; 
0x00034202: adc cl, ch; ret 0xfffc; 
0x000406dd: adc cl, ch; ret 0xfffe; 
0x001097fc: adc dh, dh; ret 0x7402; 
0x000f450b: adc dh, dh; ret 0x7422; 
0x000519c3: adc dh, dh; ret 0xf01; 
0x000fb629: adc dh, dh; ret; 
0x0007fecd: adc dword ptr [0x24748b00], ecx; and al, 0x85; test byte ptr [edi], 0x84; add dword ptr [eax], 0x3d8d0000; ret 0x8b; 
0x000f8887: adc dword ptr [eax + 1], edi; ret; 
0x000f8834: adc dword ptr [eax + 2], edi; ret; 
0x0005b034: adc dword ptr [eax + 4], 0; ret; 
0x0004e469: adc dword ptr [eax - 0x3b7c0003], 0xc; pop ebx; xor eax, eax; ret; 
0x000ebaaa: adc dword ptr [eax], 0x8bffffff; push esp; and al, 4; mov dword ptr [eax], edx; ret; 
0x000f412d: adc dword ptr [eax], eax; add al, ch; ret; 
0x000315bb: adc dword ptr [eax], eax; mov eax, dword ptr [esp + 4]; mov dword ptr [ecx + 0x1314], eax; ret; 
0x000ab217: adc dword ptr [ebx + 0x5e5b08c4], eax; pop edi; ret; 
0x0006f79e: adc dword ptr [ebx + eax*4], 0; add bl, ch; ret 0x44c7; 
0x000c5376: adc dword ptr [ebx - 0x47fbf3c0], eax; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x00104969: adc dword ptr [ebx - 0x7acbdbac], ecx; sal byte ptr [ecx + ecx + 0xf], cl; mov dh, 0x57; adc al, 0xf6; ret 0x7501; 
0x00138fa4: adc dword ptr [ebx], eax; and al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012a500: adc dword ptr [ebx], eax; cmp al, 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013830c: adc dword ptr [ebx], eax; mov eax, dword ptr [0x140e0a02]; inc ecx; ret; 
0x00140a5d: adc dword ptr [ecx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000f9a0d: adc dword ptr [edx - 1], edi; mov eax, 0x55; mov ecx, dword ptr [esp + 0x10]; mov dword ptr [ecx], edx; ret; 
0x000a2eeb: adc dword ptr [edx - 8], eax; inc dword ptr [ebx + 0x5d5b04c4]; ret; 
0x00138c40: adc dword ptr [edx], eax; arpl word ptr [edx], cx; push cs; adc al, 0x41; ret; 
0x0012c704: adc dword ptr [edx], eax; xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012c6c4: adc dword ptr [edx], eax; cld; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000f39be: adc dword ptr [esi + 0x5f], ebx; pop ebp; ret; 
0x0005cf46: adc dword ptr [esp + 4], eax; fadd qword ptr [esp + 4]; ret; 
0x0005cfec: adc dword ptr [esp + 4], eax; fld qword ptr [esp + 4]; ret; 
0x00144092: adc eax, 0x140e0a02; inc ecx; ret; 
0x00020352: adc eax, 0x1b70600; add byte ptr [eax + 0x600150d], al; ret 1; 
0x000f6eab: adc eax, 0x29000000; ret 0x84dd; 
0x000213da: adc eax, 0x3ba0700; add byte ptr [ebp + edx + 0x15], dl; add byte ptr [edi], al; ret 3; 
0x000a32dd: adc eax, 0x4589fff8; or byte ptr [ecx + 0x34890c55], cl; and al, 0xe8; ret 0xf816; 
0x000ea0a6: adc eax, 0x7501f883; int1; xor eax, eax; nop; ret; 
0x000d8ddf: adc eax, 0x81000329; ret; 
0x000bd5df: adc eax, 0x810004e1; ret; 
0x000969df: adc eax, 0x8100074d; ret; 
0x00034edf: adc eax, 0x81000d68; ret; 
0x000206ca: adc eax, 0x8ba0600; add byte ptr [eax], ch; unpckhps xmm0, xmmword ptr [eax]; push es; ret 8; 
0x0010f624: adc eax, 0x943f07b2; ret 0x8910; 
0x0002a1ce: adc eax, 0xc181000e; mov bl, 0x6e; adc al, byte ptr [eax]; mov eax, dword ptr [ecx + 0x35d0]; ret; 
0x000f20df: adc eax, 0xc483fff3; adc byte ptr [ebx + 0x5e], bl; ret; 
0x00012585: adc eax, 0xf9700000; add al, byte ptr [eax]; ret 0; 
0x0000bba5: adc eax, dword ptr [eax]; add al, dl; ret 2; 
0x000315a9: adc eax, dword ptr [eax]; add byte ptr [0x7fffffff], ah; ret; 
0x00033b10: adc eax, dword ptr [eax]; add byte ptr [ecx], al; ret 0x932b; 
0x00137b29: adc eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00130251: adc eax, dword ptr [edx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001190cc: adc ecx, dword ptr [0x73545338]; or ah, byte ptr [ebp - 0x45]; or ch, byte ptr [edx + 0x76]; leave; ret 0x8581; 
0x0012bba7: adc ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x000326dd: adc edx, 0; neg edx; pop ebp; ret; 
0x0002e53e: adc edx, 0; neg edx; ret; 
0x000b474f: adc edx, esi; xor eax, esi; xor edx, esi; pop esi; ret; 
0x000f8820: adc esi, esi; ret 0x7407; 
0x0013693d: add ah, ah; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013ef9f: add ah, ah; ret 0xfff7; 
0x001359ff: add ah, ah; ret; 
0x00128098: add ah, al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0011faff: add ah, al; ret; 
0x00064054: add ah, bh; dec dword ptr [ecx - 0x3b7cd7b0]; or byte ptr [ebx + 0x5e], bl; ret; 
0x0012d734: add ah, bh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00124d77: add ah, bl; mov edi, 0xb064fffd; add al, byte ptr [eax]; pushfd; ret; 
0x00143630: add ah, bl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00121827: add ah, bl; sal esp, -1; mov al, byte ptr [0x4e00012d]; ret 0xfff4; 
0x0012b170: add ah, byte ptr [eax + 0x41140e0a]; ret; 
0x0012d38c: add ah, byte ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0012fc9a: add ah, byte ptr [eax + 0xa]; push cs; or al, 0x41; ret; 
0x0012c2ce: add ah, byte ptr [eax + 0xa]; ret; 
0x00139392: add ah, byte ptr [eax + 0xe]; or al, 0x41; ret; 
0x00129968: add ah, byte ptr [ebp + 0x41140e0a]; ret; 
0x00129cac: add ah, byte ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x0012de89: add ah, byte ptr [ebp + 0xa]; ret; 
0x0012ab0e: add ah, byte ptr [ebx + 0x410c0e0a]; ret; 
0x001328fc: add ah, byte ptr [ebx + 0x41140e0a]; ret; 
0x001294c8: add ah, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x0013c730: add ah, byte ptr [ecx + 0x41140e0a]; ret; 
0x00126dfc: add ah, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x00127cea: add ah, byte ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x0012ff54: add ah, byte ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0012aade: add ah, byte ptr [edi + 0xa]; push cs; or al, 0x41; ret; 
0x001324f1: add ah, byte ptr [edi + 0xa]; ret; 
0x00134e50: add ah, byte ptr [edi + 0xe]; adc al, 0x41; ret; 
0x0012b4c4: add ah, byte ptr [edx + 0x41140e0a]; ret; 
0x00128534: add ah, byte ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x0014794b: add ah, byte ptr [edx + 0xa]; ret; 
0x00126928: add ah, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0013fafa: add ah, byte ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x000eacb5: add ah, byte ptr [esi + 0x25]; add byte ptr [eax], 0xf; mov bh, 0xc0; ret; 
0x000eacfa: add ah, byte ptr [esi + 0x25]; add byte ptr [ecx], al; movzx eax, ax; ret; 
0x000eabea: add ah, byte ptr [esi + 0x25]; add byte ptr [edi + ecx], al; mov bh, 0xc0; ret; 
0x000eaa99: add ah, byte ptr [esi + 0x25]; add byte ptr [edx], al; movzx eax, ax; ret; 
0x0012e59f: add ah, byte ptr [esi + 0x41100e0a]; ret; 
0x001291b4: add ah, byte ptr [esi + 0x41140e0a]; ret; 
0x00125ac0: add ah, byte ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x0012e7f2: add ah, byte ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x00125827: add ah, byte ptr [esi + ecx + 0x10]; inc ecx; ret; 
0x0013ccf2: add ah, byte ptr [esi + ecx + 0xc]; inc ecx; ret; 
0x00012583: add ah, ch; adc eax, 0xf9700000; add al, byte ptr [eax]; ret 0; 
0x00126458: add ah, ch; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012aa41: add ah, cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00123537: add ah, cl; or eax, 0x858fffa; add al, byte ptr [eax]; ret 0xfa0e; 
0x00141503: add ah, cl; ret 1; 
0x00008dd7: add ah, cl; ret; 
0x00140584: add ah, dh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014b398: add ah, dl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013150b: add ah, dl; ret 0; 
0x00053933: add al, 0; add al, ch; mov ebp, 0x81000b7d; ret; 
0x00090131: add al, 0; add al, ch; mov edi, 0x810007b5; ret; 
0x000f0a47: add al, 0; add al, ch; test eax, 0x810001ac; ret; 
0x00040747: add al, 0; add al, ch; test eax, 0x81000caf; ret; 
0x0010b46c: add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x235483], cl; add byte ptr [ecx + 0x21e82404], cl; ret 0xfff1; 
0x0009b21f: add al, 0; add byte ptr [eax], al; add byte ptr [ecx + 0x24e82434], cl; ret; 
0x000a78b7: add al, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x5317dbcc], cl; ret; 
0x000ea098: add al, 0; add byte ptr [eax], al; ret; 
0x000ecd74: add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0005d282: add al, 0; add byte ptr [ecx + 0xffa89f0], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x001097d6: add al, 0; add byte ptr [ecx + ebp*2 + 0xf], dh; mov bh, 0x56; or al, 0xf6; ret 0x7408; 
0x0005d346: add al, 0; add byte ptr [edi], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x000041d9: add al, 0; add dl, bl; pop es; add byte ptr [eax], al; ret; 
0x0010a669: add al, 0; mov eax, dword ptr [ecx - 0x2ec]; mov eax, dword ptr [eax]; ret; 
0x000216ae: add al, 0; mov esp, 0x7001516; ret 4; 
0x000216b6: add al, 0; rcl byte ptr [esi], 0x15; add byte ptr [edi], al; ret; 
0x0005b036: add al, 0; ret; 
0x0003ba90: add al, 0x10; pop ebx; ret; 
0x000780e3: add al, 0x24; add byte ptr [eax], 0; add al, ch; ret 0xfabd; 
0x0005c918: add al, 0x24; add esp, 4; ret; 
0x0004e697: add al, 0x24; and eax, 0x3f; add esp, 4; ret; 
0x000e2073: add al, 0x24; and eax, 0xe8000000; ret 0xf458; 
0x0009c77e: add al, 0x24; call 0x22fe0; add esp, 8; pop ebx; ret; 
0x00036b72: add al, 0x24; call 0x23000; add esp, 0xc; pop ebx; ret; 
0x000ea658: add al, 0x24; call 0x23020; add esp, 0xc; pop ebx; ret; 
0x00058cfc: add al, 0x24; call 0x23060; add esp, 0xc; pop ebx; ret; 
0x00041286: add al, 0x24; call 0x23080; add esp, 0x1c; pop ebx; ret; 
0x00048349: add al, 0x24; call 0x23130; add esp, 8; pop ebx; ret; 
0x00032504: add al, 0x24; call 0x23160; add esp, 0xc; pop ebx; ret; 
0x000b1f92: add al, 0x24; call 0x23230; add esp, 8; pop ebx; ret; 
0x0009cb13: add al, 0x24; call 0x232c0; add esp, 0xc; pop ebx; ret; 
0x0009ce70: add al, 0x24; call 0x23300; add esp, 0x10; pop ebx; ret; 
0x0009cd95: add al, 0x24; call 0x23310; add esp, 0x10; pop ebx; ret; 
0x000ebbb0: add al, 0x24; call 0x23370; add esp, 8; pop ebx; ret; 
0x000e48ec: add al, 0x24; call 0x233e0; add esp, 0x18; pop ebx; ret; 
0x000db418: add al, 0x24; call 0x23410; add esp, 8; pop ebx; ret; 
0x0009c636: add al, 0x24; call 0x234a0; add esp, 8; pop ebx; ret; 
0x0004932b: add al, 0x24; call 0x23520; add esp, 0x18; pop ebx; ret; 
0x00090b9e: add al, 0x24; call 0x23540; add esp, 0x14; pop ebx; ret; 
0x0009d181: add al, 0x24; call 0x23590; add esp, 0xc; pop ebx; ret; 
0x000c99c9: add al, 0x24; call 0x235a0; add esp, 0xc; pop ebx; ret; 
0x0006472c: add al, 0x24; call 0x235c0; add esp, 8; pop ebx; ret; 
0x00041538: add al, 0x24; call 0x23620; add esp, 0x1c; pop ebx; ret; 
0x00064f14: add al, 0x24; call 0x23680; add esp, 0x20; pop ebx; ret; 
0x0009c8c2: add al, 0x24; call 0x23800; add esp, 8; pop ebx; ret; 
0x0009c388: add al, 0x24; call 0x23880; add esp, 8; pop ebx; ret; 
0x0006458b: add al, 0x24; call 0x23970; add esp, 4; pop ebx; ret; 
0x00065807: add al, 0x24; call 0x23a20; add esp, 0x20; pop ebx; ret; 
0x0009c572: add al, 0x24; call 0x23a30; add esp, 8; pop ebx; ret; 
0x00094914: add al, 0x24; call 0x23a40; add esp, 0x10; pop ebx; ret; 
0x0006b127: add al, 0x24; call 0x23a60; add esp, 0xc; pop ebx; ret; 
0x0009c3ea: add al, 0x24; call 0x23a70; add esp, 8; pop ebx; ret; 
0x000a2c69: add al, 0x24; call 0x23b30; add esp, 8; pop ebx; ret; 
0x000815bf: add al, 0x24; call 0x23bd0; add esp, 0x10; pop ebx; ret; 
0x0002a207: add al, 0x24; call 0x23c70; add esp, 0xc; pop ebx; ret; 
0x000fd9ec: add al, 0x24; call 0x23c90; add esp, 0x10; pop ebx; ret; 
0x000d69a9: add al, 0x24; call 0x23ca0; add esp, 0xc; pop ebx; ret; 
0x000b9213: add al, 0x24; call 0x23d90; add esp, 0x24; pop ebx; ret; 
0x0003fae0: add al, 0x24; call 0x23da0; add esp, 0x18; pop ebx; ret; 
0x000a9aac: add al, 0x24; call 0x23df0; add esp, 4; pop ebx; ret; 
0x000f4afe: add al, 0x24; call 0x23e40; add esp, 0x18; pop ebx; ret; 
0x000ebb26: add al, 0x24; call 0x23eb0; add esp, 4; pop ebx; ret; 
0x0002a170: add al, 0x24; call 0x23ec0; add esp, 0xc; pop ebx; ret; 
0x000a356e: add al, 0x24; call 0x23f60; add esp, 0xc; pop ebx; ret; 
0x0003508e: add al, 0x24; call 0x23fa0; add esp, 0x10; pop ebx; ret; 
0x0009c1fd: add al, 0x24; call 0x23fb0; add esp, 8; pop ebx; ret; 
0x000645cb: add al, 0x24; call 0x24010; add esp, 0x34; pop ebx; ret; 
0x00064613: add al, 0x24; call 0x24010; add esp, 0x38; pop ebx; ret; 
0x000a3536: add al, 0x24; call 0x24010; add esp, 8; pop ebx; ret; 
0x000a3bed: add al, 0x24; call 0x24020; add esp, 0x10; pop ebx; ret; 
0x00036e9e: add al, 0x24; call 0x24030; add esp, 4; pop ebx; ret; 
0x00049718: add al, 0x24; call 0x240c0; add esp, 0x18; pop ebx; ret; 
0x000e866e: add al, 0x24; call 0x240e0; add esp, 0x14; pop ebx; ret; 
0x000655f6: add al, 0x24; call 0x24130; add esp, 0xc; pop ebx; ret; 
0x00077d36: add al, 0x24; call 0x24170; add esp, 4; pop ebx; ret; 
0x000c51ca: add al, 0x24; call 0x241a0; add esp, 8; pop ebx; ret; 
0x000c5158: add al, 0x24; call 0x24250; add esp, 8; pop ebx; ret; 
0x0009cbdf: add al, 0x24; call 0x24300; add esp, 0xc; pop ebx; ret; 
0x00109075: add al, 0x24; call 0x24320; add esp, 0xc; pop ebx; ret; 
0x000edcf9: add al, 0x24; call 0x24370; add esp, 0xc; pop ebx; ret; 
0x0009c6e1: add al, 0x24; call 0x243f0; add esp, 8; pop ebx; ret; 
0x000b5eca: add al, 0x24; call 0x24410; add esp, 4; pop ebx; ret; 
0x000b8f30: add al, 0x24; call 0x24440; add esp, 0x24; pop ebx; ret; 
0x000bb072: add al, 0x24; call 0x24440; add esp, 0x28; pop ebx; ret; 
0x000644ee: add al, 0x24; call 0x24450; add esp, 8; pop ebx; ret; 
0x000d1f20: add al, 0x24; call 0x24460; add esp, 8; pop ebx; ret; 
0x000ca87a: add al, 0x24; call 0x244f0; add esp, 0xc; pop ebx; ret; 
0x0005a1dc: add al, 0x24; call 0x24540; add esp, 8; pop ebx; ret; 
0x000b902e: add al, 0x24; call 0x24550; add esp, 0xc; pop ebx; ret; 
0x00034e5d: add al, 0x24; call 0x24570; add esp, 0xc; pop ebx; ret; 
0x00065074: add al, 0x24; call 0x245f0; add esp, 0x18; pop ebx; ret; 
0x0009a84a: add al, 0x24; call 0x246a0; add esp, 0xc; pop ebx; ret; 
0x00034fae: add al, 0x24; call 0x24700; add esp, 0xc; pop ebx; ret; 
0x00032626: add al, 0x24; call 0x24750; add esp, 8; pop ebx; ret; 
0x000db586: add al, 0x24; call 0x247a0; add esp, 8; pop ebx; ret; 
0x000f4070: add al, 0x24; call 0x247b0; add esp, 0x10; pop ebx; ret; 
0x00046003: add al, 0x24; call 0x24800; add esp, 8; pop ebx; ret; 
0x00044fdb: add al, 0x24; call 0x24840; add esp, 0x14; pop ebx; ret; 
0x0009c70b: add al, 0x24; call 0x24860; add esp, 8; pop ebx; ret; 
0x0008cbfb: add al, 0x24; call 0x248d0; add esp, 0x14; pop ebx; ret; 
0x00035051: add al, 0x24; call 0x24a00; add esp, 0xc; pop ebx; ret; 
0x0009252c: add al, 0x24; call 0x24a40; add esp, 0xc; pop ebx; ret; 
0x000db732: add al, 0x24; call 0x24a50; add esp, 0x14; pop ebx; ret; 
0x000db3eb: add al, 0x24; call 0x24a90; add esp, 0xc; pop ebx; ret; 
0x0005d653: add al, 0x24; call 0x24ac0; add esp, 8; pop ebx; ret; 
0x0004ef68: add al, 0x24; call 0x24b30; add esp, 0xc; pop ebx; ret; 
0x00029d24: add al, 0x24; call 0x24b40; add esp, 0x18; pop ebx; ret; 
0x00077168: add al, 0x24; call 0x24b60; add esp, 8; pop ebx; ret; 
0x0010a011: add al, 0x24; call 0x24ba0; add esp, 0x10; pop ebx; ret; 
0x00035220: add al, 0x24; call 0x24bf0; add esp, 0x10; pop ebx; ret; 
0x000647c3: add al, 0x24; call 0x24c30; add esp, 8; pop ebx; ret; 
0x000651ac: add al, 0x24; call 0x24c50; add esp, 0x20; pop ebx; ret; 
0x000db5fc: add al, 0x24; call 0x24c80; add esp, 4; pop ebx; ret; 
0x0009c5d4: add al, 0x24; call 0x24d10; add esp, 8; pop ebx; ret; 
0x000b2c18: add al, 0x24; call 0x24d60; add esp, 8; pop ebx; ret; 
0x0002cfbd: add al, 0x24; call 0x24d70; add esp, 0x10; pop ebx; ret; 
0x00034e9a: add al, 0x24; call 0x24dc0; add esp, 0x10; pop ebx; ret; 
0x00045054: add al, 0x24; call 0x24de0; add esp, 0x10; pop ebx; ret; 
0x0008beba: add al, 0x24; call 0x24e10; add esp, 4; pop ebx; ret; 
0x00064f74: add al, 0x24; call 0x24e90; add esp, 0x20; pop ebx; ret; 
0x0002d140: add al, 0x24; call 0x24ec0; add esp, 0xc; pop ebx; ret; 
0x000e88c4: add al, 0x24; call 0x24f40; add esp, 4; pop ebx; ret; 
0x000e36b1: add al, 0x24; call 0x24fc0; add esp, 0x14; pop ebx; ret; 
0x000e885b: add al, 0x24; call 0x24ff0; add esp, 8; pop ebx; ret; 
0x00036ef9: add al, 0x24; call 0x25080; add esp, 4; pop ebx; ret; 
0x000c4fc5: add al, 0x24; call 0x25090; add esp, 8; pop ebx; ret; 
0x000e9661: add al, 0x24; call 0x250c0; add esp, 0x18; pop ebx; ret; 
0x00029d84: add al, 0x24; call 0x250e0; add esp, 0xc; pop ebx; ret; 
0x00035545: add al, 0x24; call 0x25110; add esp, 8; pop ebx; ret; 
0x0009ccba: add al, 0x24; call 0x25140; add esp, 0x10; pop ebx; ret; 
0x000bca62: add al, 0x24; call 0x25160; add esp, 0x2c; pop ebx; ret; 
0x00064fb0: add al, 0x24; call 0x25170; add esp, 0x10; pop ebx; ret; 
0x00064e5c: add al, 0x24; call 0x25190; add esp, 0x14; pop ebx; ret; 
0x000f4dc7: add al, 0x24; call 0x25260; add esp, 8; pop ebx; ret; 
0x000ea5f0: add al, 0x24; call 0x252b0; add esp, 0x10; pop ebx; ret; 
0x0004cf18: add al, 0x24; call 0x25360; add esp, 0x18; pop ebx; ret; 
0x000333c7: add al, 0x24; call 0x25410; add esp, 0x10; pop ebx; ret; 
0x0005d568: add al, 0x24; call 0x25420; add esp, 8; pop ebx; ret; 
0x0008b1a8: add al, 0x24; call 0x25480; add esp, 4; pop ebx; ret; 
0x000d69e2: add al, 0x24; call 0x254c0; add esp, 0xc; pop ebx; ret; 
0x00029ae4: add al, 0x24; call 0x25510; add esp, 0x18; pop ebx; ret; 
0x000369c0: add al, 0x24; call 0x25580; add esp, 0xc; pop ebx; ret; 
0x000369f8: add al, 0x24; call 0x255c0; add esp, 0x10; pop ebx; ret; 
0x00101504: add al, 0x24; call 0x25620; add esp, 0x14; pop ebx; ret; 
0x000d6941: add al, 0x24; call 0x25660; add esp, 0x10; pop ebx; ret; 
0x000671f3: add al, 0x24; call 0x25670; add esp, 0x18; pop ebx; ret; 
0x0007d254: add al, 0x24; call 0x256a0; add esp, 0xc; pop ebx; ret; 
0x00029bbc: add al, 0x24; call 0x256b0; add esp, 0x10; pop ebx; ret; 
0x0002a1c0: add al, 0x24; call 0x25760; add esp, 0x1c; pop ebx; ret; 
0x000a9a8c: add al, 0x24; call 0x25790; add esp, 0xc; pop ebx; ret; 
0x000fa1a3: add al, 0x24; call 0x25870; add esp, 4; pop ebx; ret; 
0x000e8443: add al, 0x24; call 0x25900; add esp, 0xc; pop ebx; ret; 
0x00055660: add al, 0x24; call 0x25940; add esp, 4; pop ebx; ret; 
0x000e36fe: add al, 0x24; call 0x25950; add esp, 0x18; pop ebx; ret; 
0x00029cdc: add al, 0x24; call 0x259b0; add esp, 0x18; pop ebx; ret; 
0x00034dee: add al, 0x24; call 0x25a10; add esp, 0xc; pop ebx; ret; 
0x0004507c: add al, 0x24; call 0x25a40; add esp, 8; pop ebx; ret; 
0x0006615b: add al, 0x24; call 0x25ac0; add esp, 0x3c; pop ebx; ret; 
0x0009efe7: add al, 0x24; call 0x25ae0; add esp, 0x18; pop ebx; ret; 
0x000ecae0: add al, 0x24; call 0x25af0; add esp, 8; pop ebx; ret; 
0x000d6a68: add al, 0x24; call 0x25bb0; add esp, 0xc; pop ebx; ret; 
0x0009c802: add al, 0x24; call 0x25be0; add esp, 8; pop ebx; ret; 
0x0009ca31: add al, 0x24; call 0x25c60; add esp, 8; pop ebx; ret; 
0x000eaf37: add al, 0x24; call 0x25c80; add esp, 8; pop ebx; ret; 
0x00065570: add al, 0x24; call 0x25cf0; add esp, 0x14; pop ebx; ret; 
0x0008be1e: add al, 0x24; call 0x25d70; add esp, 4; pop ebx; ret; 
0x000c8016: add al, 0x24; call 0x25d80; add esp, 4; pop ebx; ret; 
0x000928c3: add al, 0x24; call 0x25dc0; add esp, 0x10; pop ebx; ret; 
0x00033489: add al, 0x24; call 0x25e40; add esp, 0x10; pop ebx; ret; 
0x0003350d: add al, 0x24; call 0x25e40; add esp, 0xc; pop ebx; ret; 
0x0009c262: add al, 0x24; call 0x25e50; add esp, 8; pop ebx; ret; 
0x0005bfd6: add al, 0x24; call 0x25e60; add esp, 4; pop ebx; ret; 
0x00034e28: add al, 0x24; call 0x25e70; add esp, 0x10; pop ebx; ret; 
0x00040734: add al, 0x24; call 0x25ea0; add esp, 0xc; pop ebx; ret; 
0x000d8fab: add al, 0x24; call 0x25ec0; add esp, 0xc; pop ebx; ret; 
0x000e366c: add al, 0x24; call 0x25ed0; add esp, 0x1c; pop ebx; ret; 
0x0005657c: add al, 0x24; call 0x25ee0; add esp, 0x18; pop ebx; ret; 
0x0002b0d5: add al, 0x24; call 0x25f40; add esp, 0x10; pop ebx; ret; 
0x000f4cd2: add al, 0x24; call 0x25f50; add esp, 0xc; pop ebx; ret; 
0x0006574d: add al, 0x24; call 0x25fb0; add esp, 0x20; pop ebx; ret; 
0x00048f3b: add al, 0x24; call 0x25fd0; add esp, 0x18; pop ebx; ret; 
0x0009c4ae: add al, 0x24; call 0x26010; add esp, 8; pop ebx; ret; 
0x0002dbea: add al, 0x24; call 0x26040; add esp, 0xc; pop ebx; ret; 
0x0010a651: add al, 0x24; call 0x26100; add esp, 8; pop ebx; ret; 
0x0004b2b8: add al, 0x24; call 0x26160; add esp, 0x18; pop ebx; ret; 
0x000e92ff: add al, 0x24; call 0x261c0; add esp, 0x10; pop ebx; ret; 
0x000f3ec4: add al, 0x24; call 0x262f0; add esp, 0x20; pop ebx; ret; 
0x0006514c: add al, 0x24; call 0x26310; add esp, 0x1c; pop ebx; ret; 
0x000f4b3e: add al, 0x24; call 0x26320; add esp, 0x14; pop ebx; ret; 
0x00029e34: add al, 0x24; call 0x26340; add esp, 0x18; pop ebx; ret; 
0x00029c94: add al, 0x24; call 0x26360; add esp, 0x18; pop ebx; ret; 
0x0010a4a8: add al, 0x24; call 0x26370; add esp, 8; pop ebx; ret; 
0x00035298: add al, 0x24; call 0x263c0; add esp, 0x14; pop ebx; ret; 
0x000b2b60: add al, 0x24; call 0x26430; add esp, 8; pop ebx; ret; 
0x0009c9bd: add al, 0x24; call 0x26440; add esp, 8; pop ebx; ret; 
0x0006aae8: add al, 0x24; call 0x26490; add esp, 0x10; pop ebx; ret; 
0x000351e8: add al, 0x24; call 0x26510; add esp, 0xc; pop ebx; ret; 
0x000450ae: add al, 0x24; call 0x26570; add esp, 0xc; pop ebx; ret; 
0x00035258: add al, 0x24; call 0x265c0; add esp, 0x10; pop ebx; ret; 
0x00048b3b: add al, 0x24; call 0x26620; add esp, 0x18; pop ebx; ret; 
0x0006ba3c: add al, 0x24; call 0x26660; add esp, 8; pop ebx; ret; 
0x00076274: add al, 0x24; call 0x266a0; add esp, 8; pop ebx; ret; 
0x000f1da0: add al, 0x24; call 0x266d0; add esp, 4; pop ebx; ret; 
0x000f411a: add al, 0x24; call 0x26720; add esp, 4; pop ebx; ret; 
0x000764c2: add al, 0x24; call 0x26750; add esp, 0x14; pop ebx; ret; 
0x0009c698: add al, 0x24; call 0x267a0; add esp, 8; pop ebx; ret; 
0x000ea000: add al, 0x24; call 0x26810; add esp, 8; pop ebx; ret; 
0x00059cd4: add al, 0x24; call 0x268d0; add esp, 8; pop ebx; ret; 
0x0004fdf8: add al, 0x24; call 0x268f0; add esp, 0x24; pop ebx; ret; 
0x0002dbb6: add al, 0x24; call 0x26970; add esp, 0xc; pop ebx; ret; 
0x00065c30: add al, 0x24; call 0x26980; add esp, 0xc; pop ebx; ret; 
0x0009c44c: add al, 0x24; call 0x26990; add esp, 8; pop ebx; ret; 
0x00036aae: add al, 0x24; call 0x26b00; add esp, 0x10; pop ebx; ret; 
0x0005d5b8: add al, 0x24; call 0x26b40; add esp, 8; pop ebx; ret; 
0x0010a57f: add al, 0x24; call 0x26b60; add esp, 8; pop ebx; ret; 
0x000657aa: add al, 0x24; call 0x26b70; add esp, 0x20; pop ebx; ret; 
0x0005a79b: add al, 0x24; call 0x26bb0; add esp, 4; pop ebx; ret; 
0x0009c2c4: add al, 0x24; call 0x26bc0; add esp, 8; pop ebx; ret; 
0x0009255c: add al, 0x24; call 0x26cb0; add esp, 0xc; pop ebx; ret; 
0x0008b240: add al, 0x24; call 0x26cd0; add esp, 4; pop ebx; ret; 
0x000672c9: add al, 0x24; call 0x26d80; add esp, 0x10; pop ebx; ret; 
0x0008a6bf: add al, 0x24; call 0x26d90; add esp, 4; pop ebx; ret; 
0x0002a13f: add al, 0x24; call 0x26da0; add esp, 0x10; pop ebx; ret; 
0x000e8788: add al, 0x24; call 0x26dd0; add esp, 4; pop ebx; ret; 
0x000f4ea4: add al, 0x24; call 0x26e00; add esp, 0x18; pop ebx; ret; 
0x0002a396: add al, 0x24; call 0x26e50; add esp, 4; pop ebx; ret; 
0x00077151: add al, 0x24; call 0x26e50; add esp, 8; pop ebx; ret; 
0x0008a62e: add al, 0x24; call 0x26ec0; add esp, 4; pop ebx; ret; 
0x001014ce: add al, 0x24; call 0x26ee0; add esp, 0x14; pop ebx; ret; 
0x0010b62b: add al, 0x24; call 0x26ef0; add esp, 8; pop ebx; ret; 
0x0005d590: add al, 0x24; call 0x26f90; add esp, 8; pop ebx; ret; 
0x00051f77: add al, 0x24; call 0x26fb0; add esp, 8; pop ebx; ret; 
0x000e07d0: add al, 0x24; call 0x27010; add esp, 4; pop ebx; ret; 
0x00064757: add al, 0x24; call 0x270b0; add esp, 4; pop ebx; ret; 
0x00064e14: add al, 0x24; call 0x270c0; add esp, 0x24; pop ebx; ret; 
0x000f4ca2: add al, 0x24; call 0x27170; add esp, 0x10; pop ebx; ret; 
0x0009c238: add al, 0x24; call 0x27180; add esp, 0xc; pop ebx; ret; 
0x0009c940: add al, 0x24; call 0x27190; add esp, 0xc; pop ebx; ret; 
0x000b2400: add al, 0x24; call 0x27220; add esp, 0x14; pop ebx; ret; 
0x00029f16: add al, 0x24; call 0x27250; add esp, 0x14; pop ebx; ret; 
0x00029a9c: add al, 0x24; call 0x27260; add esp, 0x18; pop ebx; ret; 
0x00029f4e: add al, 0x24; call 0x27270; add esp, 0x10; pop ebx; ret; 
0x0009d0b6: add al, 0x24; call 0x27290; add esp, 0x18; pop ebx; ret; 
0x00080ae6: add al, 0x24; call 0x27300; add esp, 0x10; pop ebx; ret; 
0x0002db84: add al, 0x24; call 0x27350; add esp, 0x10; pop ebx; ret; 
0x000a3bb5: add al, 0x24; call 0x27370; add esp, 0x14; pop ebx; ret; 
0x000f4e5c: add al, 0x24; call 0x273e0; add esp, 0x10; pop ebx; ret; 
0x000e0780: add al, 0x24; call 0x27430; add esp, 4; pop ebx; ret; 
0x00067230: add al, 0x24; call 0x27470; add esp, 0x10; pop ebx; ret; 
0x00029c4c: add al, 0x24; call 0x274a0; add esp, 0x18; pop ebx; ret; 
0x00029c04: add al, 0x24; call 0x274d0; add esp, 0x18; pop ebx; ret; 
0x0002bba2: add al, 0x24; call 0x274f0; add esp, 0xc; pop ebx; ret; 
0x000345cc: add al, 0x24; call 0x27540; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000e88a4: add al, 0x24; call 0x27570; add esp, 4; pop ebx; ret; 
0x0003590c: add al, 0x24; call 0x27590; add esp, 0x10; pop ebx; ret; 
0x0008ccd6: add al, 0x24; call 0x275e0; add esp, 0x14; pop ebx; ret; 
0x0002a107: add al, 0x24; call 0x27610; add esp, 0x10; pop ebx; ret; 
0x000d6a1e: add al, 0x24; call 0x27630; add esp, 0xc; pop ebx; ret; 
0x000c99f1: add al, 0x24; call 0x27650; add esp, 8; pop ebx; ret; 
0x0010154c: add al, 0x24; call 0x27660; add esp, 0x14; pop ebx; ret; 
0x000e8884: add al, 0x24; call 0x27680; add esp, 8; pop ebx; ret; 
0x0009c510: add al, 0x24; call 0x27690; add esp, 8; pop ebx; ret; 
0x000b8cd5: add al, 0x24; call 0x276a0; add esp, 8; pop ebx; ret; 
0x00065214: add al, 0x24; call 0x276b0; add esp, 0x24; pop ebx; ret; 
0x00035ed4: add al, 0x24; call 0x276c0; add esp, 0x10; pop ebx; ret; 
0x00048734: add al, 0x24; call 0x27720; add esp, 0x18; pop ebx; ret; 
0x000ca8a2: add al, 0x24; call 0x27740; add esp, 8; pop ebx; ret; 
0x0006591c: add al, 0x24; call 0x277c0; add esp, 0xc; pop ebx; ret; 
0x000f81b8: add al, 0x24; call 0x27840; add esp, 4; pop ebx; ret; 
0x00035836: add al, 0x24; call 0x278a0; add esp, 4; pop ebx; ret; 
0x00065890: add al, 0x24; call 0x278c0; add esp, 0x10; pop ebx; ret; 
0x0006536c: add al, 0x24; call 0x279a0; add esp, 0x14; pop ebx; ret; 
0x0006452f: add al, 0x24; call 0x63ffe; add esp, 0x10; pop ebx; ret; 
0x000643d9: add al, 0x24; call 0x64068; add esp, 0x10; ret; 
0x000658ec: add al, 0x24; call 0x91465; add esp, 0xc; ret; 
0x000a2caa: add al, 0x24; call 0xa2529; add esp, 0x10; pop ebx; ret; 
0x000a2b54: add al, 0x24; call 0xa2598; add esp, 0x10; ret; 
0x000a398e: add al, 0x24; call 0xa3830; add esp, 0x10; pop ebx; ret; 
0x000f9841: add al, 0x24; call 0xf972c; add esp, 0x1c; ret; 
0x000f99ef: add al, 0x24; call 0xf9881; add esp, 0x1c; ret; 
0x000f2355: add al, 0x24; call dword ptr [eax + 0x2c]; add esp, 0xc; ret; 
0x000f2376: add al, 0x24; call dword ptr [eax + 0x30]; add esp, 0xc; ret; 
0x000f2387: add al, 0x24; call dword ptr [eax + 0x34]; add esp, 4; ret; 
0x0005f97b: add al, 0x24; call dword ptr [eax + 4]; add esp, 4; ret; 
0x00035bf1: add al, 0x24; call dword ptr [ecx + 0xc]; leave; ret; 
0x000370e1: add al, 0x24; call dword ptr [edx + 4]; add esp, 0xc; ret; 
0x000ba3dc: add al, 0x24; call dword ptr [esp + 0x10]; add esp, 8; ret; 
0x000e6978: add al, 0x24; call dword ptr [esp + 0x24]; add esp, 0x20; ret; 
0x0005c915: add al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x0009d3af: add al, 0x24; fld qword ptr [esp]; leave; ret; 
0x000611a7: add al, 0x24; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0004e6b7: add al, 0x24; not eax; and eax, 0x3f; add esp, 4; ret; 
0x0004e5e7: add al, 0x24; ror eax, 8; and eax, 3; add esp, 4; ret; 
0x0005c93c: add al, 0x24; leave; ret; 
0x0013ef97: add al, 0x28; add byte ptr [eax], al; add byte ptr [ebp + ebx*4 + 1], ah; add ah, ah; ret 0xfff7; 
0x000df09e: add al, 0x29; ret 0x5489; 
0x00061347: add al, 0x29; ret 0xd089; 
0x000626c1: add al, 0x29; ret 0xe2c1; 
0x000980dd: add al, 0x2f; add byte ptr [eax], al; add byte ptr [ecx + 0x6e8243c], cl; ret 0xfff8; 
0x0009f3c4: add al, 0x31; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x000c9448: add al, 0x31; ret 0x748b; 
0x000c9454: add al, 0x31; ret 0xf089; 
0x000fb689: add al, 0x38; ret 0xf274; 
0x00060538: add al, 0x39; inc edi; adc al, 0x77; ret 0xf631; 
0x0003d9cf: add al, 0x39; ret 0x1073; 
0x000d6a52: add al, 0x39; ret 0x1d72; 
0x000fb65b: add al, 0x39; ret 0x2075; 
0x0003dc8c: add al, 0x39; ret 0x820f; 
0x0003c4e0: add al, 0x39; ret 0x870f; 
0x0003d8cc: add al, 0x39; ret 0x973; 
0x000f8a9c: add al, 0x39; ret 0xf377; 
0x0003bcfb: add al, 0x39; sal dword ptr [ebx + 0x1e], -0x73; push ecx; add dword ptr [ecx], edi; ret 0x1373; 
0x000e9c18: add al, 0x39; sal dword ptr [edi - 0x16], 0x5e; nop; ret; 
0x000f5171: add al, 0x39; sar dword ptr [edi + 0x69], -0x75; push esi; or byte ptr [ecx], bh; ret 0x8d0f; 
0x001414ff: add al, 0x3c; add byte ptr [eax], al; add ah, cl; ret 1; 
0x00146c3f: add al, 0x3c; add byte ptr [eax], al; add byte ptr [edx + ebx], cl; add al, byte ptr [eax]; ret; 
0x0002bb3b: add al, 0x40; mov dword ptr [ecx + eax*4 + 0x3680], 0; xor eax, eax; ret; 
0x0002bb21: add al, 0x40; mov eax, dword ptr [ecx + eax*4 + 0x367c]; ret; 
0x0002bb01: add al, 0x40; mov edx, dword ptr [esp + 8]; mov dword ptr [ecx + eax*4 + 0x367c], edx; xor eax, eax; ret; 
0x0002b854: add al, 0x40; pop ebx; ret; 
0x00131627: add al, 0x41; or eax, dword ptr [eax]; add byte ptr [eax + eax], al; add al, bh; ret; 
0x00126510: add al, 0x41; or eax, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x00129b0e: add al, 0x41; or eax, dword ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x00146e59: add al, 0x41; or eax, dword ptr [ebp + 0xa]; ret; 
0x00125748: add al, 0x41; or eax, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x0012c0ea: add al, 0x41; or eax, dword ptr [ebp + 0xe]; or al, 0x41; ret; 
0x0013fd56: add al, 0x41; or eax, dword ptr [ebx + 0xa]; ret; 
0x0012b0d9: add al, 0x41; or eax, dword ptr [ebx]; add byte ptr [ecx], 0xa; ret; 
0x0012a9bd: add al, 0x41; or eax, dword ptr [ebx]; and eax, 0x140e0a01; inc ecx; ret; 
0x0014cbe4: add al, 0x41; or eax, dword ptr [ebx]; cmp eax, 0x140e0a01; inc ecx; ret; 
0x00144220: add al, 0x41; or eax, dword ptr [ebx]; mov esp, 0x140e0a02; inc ecx; ret; 
0x0013b941: add al, 0x41; or eax, dword ptr [ebx]; push cs; add al, 0xa; ret; 
0x0014af4c: add al, 0x41; or eax, dword ptr [ebx]; sbb eax, 0x140e0a01; inc ecx; ret; 
0x0012997c: add al, 0x41; or eax, dword ptr [ebx]; scasb al, byte ptr es:[edi]; add eax, 0x41140e0a; ret; 
0x001295af: add al, 0x41; or eax, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00128392: add al, 0x41; or eax, dword ptr [edi + 0xa]; push cs; or al, 0x41; ret; 
0x00141b7a: add al, 0x41; or eax, dword ptr [edi + 0xa]; ret; 
0x0014068c: add al, 0x41; or eax, dword ptr [edi + 0xe]; adc al, 0x41; ret; 
0x00128c0a: add al, 0x41; or eax, dword ptr [edi + 0xe]; or al, 0x41; ret; 
0x00126e6a: add al, 0x41; or eax, dword ptr [edx]; call 0x41267c7d; ret; 
0x0012afcd: add al, 0x41; or eax, dword ptr [edx]; fmul qword ptr [edx]; ret; 
0x00125b14: add al, 0x41; or eax, dword ptr [edx]; imul ecx, dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x0014b3ed: add al, 0x41; or eax, dword ptr [edx]; jo 0x14b401; adc al, 0x41; ret; 
0x0012f051: add al, 0x41; or eax, dword ptr [edx]; lea ecx, dword ptr [edx]; ret; 
0x0012b16d: add al, 0x41; or eax, dword ptr [edx]; mov al, byte ptr [0x41140e0a]; ret; 
0x0012b4c1: add al, 0x41; or eax, dword ptr [edx]; mov byte ptr [0x41140e0a], al; ret; 
0x001328f9: add al, 0x41; or eax, dword ptr [edx]; mov dword ptr [0x41140e0a], eax; ret; 
0x0013314b: add al, 0x41; or eax, dword ptr [edx]; mov eax, 0x41140e0a; ret; 
0x0014cdf6: add al, 0x41; or eax, dword ptr [edx]; mov ebp, 0x41100e0a; ret; 
0x00133a7b: add al, 0x41; or eax, dword ptr [edx]; mov ebp, 0x41140e0a; ret; 
0x00142151: add al, 0x41; or eax, dword ptr [edx]; mov ebx, 0x41140e0a; ret; 
0x001335e3: add al, 0x41; or eax, dword ptr [edx]; mov ecx, 0x41140e0a; ret; 
0x0013c91a: add al, 0x41; or eax, dword ptr [edx]; mov ecx, dword ptr [esi]; adc al, 0x41; ret; 
0x00127b9c: add al, 0x41; or eax, dword ptr [edx]; mov edi, 0x41140e0a; ret; 
0x00133f13: add al, 0x41; or eax, dword ptr [edx]; mov edx, 0x41140e0a; ret; 
0x00137850: add al, 0x41; or eax, dword ptr [edx]; mov esp, 0x41140e0a; ret; 
0x001366a4: add al, 0x41; or eax, dword ptr [edx]; or cl, byte ptr [0x4114]; ret; 
0x00137f27: add al, 0x41; or eax, dword ptr [edx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00133aa9: add al, 0x41; or eax, dword ptr [edx]; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x0013132f: add al, 0x41; or eax, dword ptr [edx]; or cl, byte ptr gs:[esi]; adc al, 0x41; ret; 
0x0012fd28: add al, 0x41; or eax, dword ptr [edx]; or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x00129598: add al, 0x41; or eax, dword ptr [edx]; push 0x41140e0a; ret; 
0x0013876d: add al, 0x41; or eax, dword ptr [edx]; push esi; ret; 
0x0013eea0: add al, 0x41; or eax, dword ptr [edx]; ror byte ptr [edx], 0xe; adc al, 0x41; ret; 
0x0014bea9: add al, 0x41; or eax, dword ptr [edx]; test eax, 0x41140e0a; ret; 
0x0012fa98: add al, 0x41; or eax, dword ptr [edx]; ret; 
0x00135440: add al, 0x41; or eax, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00129e3e: add al, 0x41; or eax, dword ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x001318ec: add al, 0x41; or ebp, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00137491: add al, 0x41; or ebp, dword ptr [eax + 0xa]; push cs; or al, 0x41; ret; 
0x00127141: add al, 0x41; or ebp, dword ptr [eax + 0xa]; ret; 
0x001424f8: add al, 0x41; or ebp, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x0013ebec: add al, 0x41; or ebp, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x0012632c: add al, 0x41; or ebp, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x0012e254: add al, 0x41; or ebp, dword ptr [ebx + 0xa]; ret; 
0x00126ae8: add al, 0x41; or ebp, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0012cc31: add al, 0x41; or ebp, dword ptr [ecx + 0xe]; or al, 0x41; ret; 
0x0012d9ac: add al, 0x41; or ebp, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00127bb3: add al, 0x41; or ebp, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x0013dd8d: add al, 0x41; or ebp, dword ptr [edx + 0xa]; ret; 
0x0013d20c: add al, 0x41; or ebp, dword ptr [edx + 0xe]; adc al, 0x41; ret; 
0x001275f8: add al, 0x41; or ebp, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0014a838: add al, 0x41; or ebp, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00125dd0: add al, 0x41; or ebp, dword ptr [esi + 0xa]; ret; 
0x0012c631: add al, 0x41; or ebp, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x00128ad8: add al, 0x41; or ebx, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00127085: add al, 0x41; or ebx, dword ptr [eax + 0xa]; ret; 
0x0014388a: add al, 0x41; or ebx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x0014ac57: add al, 0x41; or ebx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x0013d885: add al, 0x41; or ebx, dword ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x001270a1: add al, 0x41; or ebx, dword ptr [ebp + 0xa]; ret; 
0x0012fd95: add al, 0x41; or ebx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x0014472d: add al, 0x41; or ebx, dword ptr [ebp + 0xe]; or al, 0x41; ret; 
0x00126b6d: add al, 0x41; or ebx, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x001289a9: add al, 0x41; or ebx, dword ptr [ebx + 0xa]; push cs; or al, 0x41; ret; 
0x0014c8ee: add al, 0x41; or ebx, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x00148119: add al, 0x41; or ebx, dword ptr [ebx + 0xe]; or al, 0x41; ret; 
0x0012a890: add al, 0x41; or ebx, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x001447d4: add al, 0x41; or ebx, dword ptr [ecx + 0xe]; adc al, 0x41; ret; 
0x00139ba8: add al, 0x41; or ebx, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0012c684: add al, 0x41; or ebx, dword ptr [edi + 0xe]; adc al, 0x41; ret; 
0x0013994a: add al, 0x41; or ebx, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x00136235: add al, 0x41; or ebx, dword ptr [edx + 0xa]; push cs; or al, 0x41; ret; 
0x00127093: add al, 0x41; or ebx, dword ptr [edx + 0xa]; ret; 
0x001388f9: add al, 0x41; or ebx, dword ptr [edx + 0xe]; adc al, 0x41; ret; 
0x0012646c: add al, 0x41; or ebx, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0012ce45: add al, 0x41; or ebx, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00148d26: add al, 0x41; or ebx, dword ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x0012fe80: add al, 0x41; or ebx, dword ptr [esi + 0xa]; ret; 
0x0012a93c: add al, 0x41; or ebx, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x00125331: add al, 0x41; or ecx, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00125fb9: add al, 0x41; or ecx, dword ptr [eax + 0xa]; push cs; or al, 0x41; ret; 
0x0012535d: add al, 0x41; or ecx, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x0012d0f3: add al, 0x41; or ecx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x0012627c: add al, 0x41; or ecx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x0012d6b9: add al, 0x41; or ecx, dword ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x0014b498: add al, 0x41; or ecx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x00127768: add al, 0x41; or ecx, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x00128243: add al, 0x41; or ecx, dword ptr [ebx + 0xa]; push cs; or al, 0x41; ret; 
0x0012f060: add al, 0x41; or ecx, dword ptr [ebx + 0xa]; ret; 
0x00149df5: add al, 0x41; or ecx, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x0012e7fe: add al, 0x41; or ecx, dword ptr [ebx + 0xe]; or al, 0x41; ret; 
0x0013e064: add al, 0x41; or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0012db99: add al, 0x41; or ecx, dword ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x00130026: add al, 0x41; or ecx, dword ptr [ecx + 0xa]; ret; 
0x0012e681: add al, 0x41; or ecx, dword ptr [ecx + 0xe]; or al, 0x41; ret; 
0x001266de: add al, 0x41; or ecx, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0013ad69: add al, 0x41; or ecx, dword ptr [edi + 0xa]; push cs; or al, 0x41; ret; 
0x0012fe8e: add al, 0x41; or ecx, dword ptr [edi + 0xa]; ret; 
0x00132585: add al, 0x41; or ecx, dword ptr [edi + 0xe]; adc al, 0x41; ret; 
0x00140b71: add al, 0x41; or ecx, dword ptr [edi + 0xe]; or al, 0x41; ret; 
0x00126d60: add al, 0x41; or ecx, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x0013ac5b: add al, 0x41; or ecx, dword ptr [edx + 0xe]; adc al, 0x41; ret; 
0x00132dc0: add al, 0x41; or ecx, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0012a0e4: add al, 0x41; or ecx, dword ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x001294dc: add al, 0x41; or ecx, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00143e78: add al, 0x41; or ecx, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x0013d409: add al, 0x41; or ecx, dword ptr [esi + ecx + 0xc]; inc ecx; ret; 
0x0013dca5: add al, 0x41; or edi, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x00127db8: add al, 0x41; or edi, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x00125ba4: add al, 0x41; or edi, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x00131c55: add al, 0x41; or edi, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0014045c: add al, 0x41; or edi, dword ptr [ecx + 0xe]; adc al, 0x41; ret; 
0x00131880: add al, 0x41; or edi, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0014c1cb: add al, 0x41; or edi, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x00127eb4: add al, 0x41; or edi, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0013c7e9: add al, 0x41; or edi, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x0013de27: add al, 0x41; or edi, dword ptr [esi + 0xa]; ret; 
0x0014abee: add al, 0x41; or edi, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x001263dc: add al, 0x41; or edx, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0013e11a: add al, 0x41; or edx, dword ptr [eax + 0xa]; push cs; or al, 0x41; ret; 
0x0013de82: add al, 0x41; or edx, dword ptr [eax + 0xa]; ret; 
0x00143f0c: add al, 0x41; or edx, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x00130f2d: add al, 0x41; or edx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x00136348: add al, 0x41; or edx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x00129e01: add al, 0x41; or edx, dword ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x0012a094: add al, 0x41; or edx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x0014c952: add al, 0x41; or edx, dword ptr [ebp + 0xe]; or al, 0x41; ret; 
0x0012e607: add al, 0x41; or edx, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x0012e209: add al, 0x41; or edx, dword ptr [ebx + 0xa]; push cs; or al, 0x41; ret; 
0x0013de74: add al, 0x41; or edx, dword ptr [ebx + 0xa]; ret; 
0x0013838e: add al, 0x41; or edx, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x00130bf2: add al, 0x41; or edx, dword ptr [ebx + 0xe]; or al, 0x41; ret; 
0x00128548: add al, 0x41; or edx, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x00129041: add al, 0x41; or edx, dword ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x0013e0e0: add al, 0x41; or edx, dword ptr [ecx + 0xa]; ret; 
0x0012e217: add al, 0x41; or edx, dword ptr [ecx + 0xe]; or al, 0x41; ret; 
0x00126482: add al, 0x41; or edx, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00149d51: add al, 0x41; or edx, dword ptr [edi + 0xa]; push cs; or al, 0x41; ret; 
0x0012a010: add al, 0x41; or edx, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x00125b8e: add al, 0x41; or edx, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0012b5c9: add al, 0x41; or edx, dword ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x0013566d: add al, 0x41; or edx, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x001430d1: add al, 0x41; or edx, dword ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x0014492e: add al, 0x41; or edx, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x0013cf11: add al, 0x41; or edx, dword ptr [esi + ecx + 0xc]; inc ecx; ret; 
0x00128cd0: add al, 0x41; or edx, dword ptr [esi + ecx + 8]; inc ecx; ret; 
0x00135ab6: add al, 0x41; or esi, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00128878: add al, 0x41; or esi, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x00126189: add al, 0x41; or esi, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x0014148d: add al, 0x41; or esi, dword ptr [eax + eax]; add byte ptr [eax], al; pop esp; ret 1; 
0x0012b269: add al, 0x41; or esi, dword ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x00143a91: add al, 0x41; or esi, dword ptr [ebp + 0xe]; or al, 0x41; ret; 
0x0012cb41: add al, 0x41; or esi, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x00139514: add al, 0x41; or esi, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x0014192a: add al, 0x41; or esi, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0013dcef: add al, 0x41; or esi, dword ptr [ecx + 0xa]; ret; 
0x00143ffe: add al, 0x41; or esi, dword ptr [ecx + 0xe]; or al, 0x41; ret; 
0x00136eeb: add al, 0x41; or esi, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00127dfd: add al, 0x41; or esi, dword ptr [edi + 0xe]; or al, 0x41; ret; 
0x0012e150: add al, 0x41; or esi, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x0013de19: add al, 0x41; or esi, dword ptr [edx + 0xa]; ret; 
0x0012c1a2: add al, 0x41; or esi, dword ptr [edx + 0xe]; or al, 0x41; ret; 
0x00138378: add al, 0x41; or esi, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0014bb59: add al, 0x41; or esi, dword ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x001451e8: add al, 0x41; or esi, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x001260ed: add al, 0x41; or esi, dword ptr [esi + 0xe]; or al, 0x41; ret; 
0x0014b9c1: add al, 0x41; or esi, dword ptr [esi + ecx + 8]; inc ecx; ret; 
0x0012cb6e: add al, 0x41; or esp, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00125347: add al, 0x41; or esp, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x00135b08: add al, 0x41; or esp, dword ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x00138d14: add al, 0x41; or esp, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x00141c41: add al, 0x41; or esp, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x0013f135: add al, 0x41; or esp, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x00135afa: add al, 0x41; or esp, dword ptr [edi + 0xa]; push cs; or al, 0x41; ret; 
0x0013dce0: add al, 0x41; or esp, dword ptr [edi + 0xa]; ret; 
0x00131a3e: add al, 0x41; or esp, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x00148227: add al, 0x41; or esp, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0013cb25: add al, 0x41; or esp, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00125bec: add al, 0x41; or esp, dword ptr [esi + 0xa]; ret; 
0x0012a8e8: add al, 0x41; or esp, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x00139365: add al, 0x41; or esp, dword ptr [esi + ecx + 0xc]; inc ecx; ret; 
0x0012c00b: add al, 0x41; push cs; adc al, 0x83; add eax, 0x2200e43; ret 0xe0a; 
0x0013b3ff: add al, 0x41; push cs; adc al, 0x83; add eax, 0x2280e43; ret 0xe0a; 
0x0012d98f: add al, 0x41; push cs; adc al, 0x83; add eax, 0x2300e43; ret 0xe0a; 
0x00127ab7: add al, 0x41; push cs; adc al, 0x83; add eax, 0x23c0e43; ret 0xe0a; 
0x00136b93: add al, 0x41; push cs; adc al, 0x83; add eax, 0x2440e43; ret 0xe0a; 
0x0012a53b: add al, 0x41; push cs; adc al, 0x83; add eax, 0x2500e43; ret; 
0x00137ffb: add al, 0x41; push cs; adc al, 0x83; add eax, 0x2580e43; ret 0xe0a; 
0x001303ab: add al, 0x41; push cs; adc al, 0x83; add eax, 0x3480e43; ret 0xa02; 
0x00143c6b: add al, 0x41; push cs; adc al, 0x83; add eax, 0xa028d03; ret; 
0x00142a2f: add al, 0x43; or edi, dword ptr [ebp + 0xa]; ret; 
0x0013e09f: add al, 0x43; push cs; and byte ptr [edx], al; mov eax, 0x41100e0a; ret; 
0x00130baf: add al, 0x43; push cs; dec esp; add al, byte ptr [ebx + 0x41100e0a]; ret; 
0x001253d3: add al, 0x43; push cs; inc esp; add bl, byte ptr [esi + 0x41100e0a]; ret; 
0x00130cb3: add al, 0x43; push cs; push eax; add cl, byte ptr [ebx + 0x41100e0a]; ret; 
0x00147d67: add al, 0x43; push cs; sbb byte ptr [esi + ecx + 0x10], bh; inc ecx; ret; 
0x0012af2b: add al, 0x43; push cs; sbb byte ptr [esi + ecx + 0x10], dh; inc ecx; ret; 
0x00128fb3: add al, 0x43; push cs; xor al, 2; mov edx, 0x41100e0a; ret; 
0x00129912: add al, 0x45; or eax, dword ptr [edx]; ret 0xe0a; 
0x0012e17c: add al, 0x45; or eax, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x0014bd01: add al, 0x45; or ebx, dword ptr [ebx + 0xa]; ret; 
0x001299d5: add al, 0x45; or ecx, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x00147920: add al, 0x45; or ecx, dword ptr [edx + 0xe]; or al, 0x41; ret; 
0x00129929: add al, 0x45; or esp, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x0012746f: add al, 0x46; push cs; test al, 0x10; add al, byte ptr [esi + 0x41100e0a]; ret; 
0x000488a5: add al, 0x47; add byte ptr [eax], al; add byte ptr [ebp - 0x41e337d], cl; dec dword ptr [ecx - 0x1717dbfc]; ret 0xfffd; 
0x000688de: add al, 0x56; add dword ptr [eax], eax; add byte ptr [ebp - 0x3fb857d], cl; dec dword ptr [ecx - 0x5017dbfc]; ret 0xfffb; 
0x0002a489: add al, 0x5b; add esp, 0xc; pop ebp; ret; 
0x000a2ef1: add al, 0x5b; pop ebp; ret; 
0x0007fc7a: add al, 0x5b; pop edi; ret; 
0x0002e626: add al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0002d6d3: add al, 0x5b; pop esi; pop edi; ret; 
0x00032871: add al, 0x5b; pop esi; ret; 
0x0002a02c: add al, 0x5b; ret; 
0x000629df: add al, 0x5e; pop edi; pop ebp; ret; 
0x00052381: add al, 0x5e; pop edi; ret; 
0x00052328: add al, 0x5e; ret; 
0x001088f8: add al, 0x62; add byte ptr [eax], al; add byte ptr [ebp - 0x31b377d], cl; dec dword ptr [ecx - 0x6a17dbfc]; ret 0xfff1; 
0x000524bc: add al, 0x66; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000f28e9: add al, 0x74; or bh, byte ptr [eax + 0x4f]; add esp, 0x18; pop ebx; ret; 
0x0010a9ac: add al, 0x75; ret 0xb4e9; 
0x000f3cfb: add al, 0x76; add esp, dword ptr [esi - 0x70]; ret; 
0x00136013: add al, 0x77; ret; 
0x0012e0c3: add al, 0x79; ret; 
0x001307a3: add al, 0x7a; ret; 
0x00052e2d: add al, 0x7f; setbe al; ret; 
0x00059d4e: add al, 0x80; lea eax, dword ptr [edx + eax*4]; add esp, 0x58; pop ebx; ret; 
0x000db768: add al, 0x80; hlt; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x00059d51: add al, 0x82; add esp, 0x58; pop ebx; ret; 
0x0009c6cf: add al, 0x82; add esp, 8; pop ebx; ret; 
0x00037eb0: add al, 0x82; ret; 
0x00127075: add al, 0x83; add eax, 0xa011903; ret; 
0x0013b931: add al, 0x83; add eax, 0xa011b03; ret; 
0x0012f041: add al, 0x83; add eax, 0xa011d03; ret; 
0x00139249: add al, 0x83; add eax, 0xa013503; ret; 
0x0013def1: add al, 0x83; add eax, 0xa013e03; ret; 
0x0013dd7d: add al, 0x83; add eax, 0xa014c03; ret; 
0x0013dd21: add al, 0x83; add eax, 0xa015603; ret; 
0x00138661: add al, 0x83; add eax, 0xa015d03; ret; 
0x00126eb9: add al, 0x83; add eax, 0xa019e03; ret; 
0x00134735: add al, 0x83; add eax, 0xa01ad03; ret; 
0x00126fe1: add al, 0x83; add eax, 0xa01bf03; ret; 
0x0012afbd: add al, 0x83; add eax, 0xa01fe03; ret; 
0x0013b999: add al, 0x83; add eax, 0xa022a03; ret; 
0x00134901: add al, 0x83; add eax, 0xa024003; ret; 
0x0012b0c9: add al, 0x83; add eax, 0xa025f03; ret; 
0x0012e945: add al, 0x83; add eax, 0xa026b03; ret; 
0x00127131: add al, 0x83; add eax, 0xa02a103; ret; 
0x001427b5: add al, 0x83; add eax, 0xa030503; ret; 
0x0013de09: add al, 0x83; add eax, 0xa03a003; ret; 
0x0013d8b5: add al, 0x83; add eax, 0xa050803; ret; 
0x00126c7d: add al, 0x83; add eax, 0xa053b03; ret; 
0x0013d839: add al, 0x83; add eax, 0xa068003; ret; 
0x00036ceb: add al, 0x83; inc eax; adc al, 4; mov eax, 1; ret; 
0x0003cfef: add al, 0x83; ret 0x2901; 
0x000aa886: add al, 0x83; ret 0x3904; 
0x001092f7: add al, 0x83; ret 0x8301; 
0x000f8e5a: add al, 0x83; ret 0x8304; 
0x00108b05: add al, 0x83; ret 0x8901; 
0x001017b2: add al, 0x83; ret 0x8902; 
0x000f83ca: add al, 0x83; ret 0x8b04; 
0x00034a0e: add al, 0x83; ret 0x8d01; 
0x000ff775: add al, 0x83; ret 0xf08; 
0x000a801a: add al, 0x83; rol byte ptr [ecx], 0x83; ret 0x3908; 
0x000fb652: add al, 0x83; ret; 
0x0005aa4b: add al, 0x85; div byte ptr [ebp - 9]; pop ebx; pop esi; ret; 
0x000e3004: add al, 0x85; ror byte ptr [edi], 0x85; ret 0; 
0x00052427: add al, 0x85; ror byte ptr [edi], cl; xchg eax, esp; sal bh, 0xd8; ret; 
0x000314f6: add al, 0x85; sal byte ptr [edx + eax - 0x77], cl; add al, byte ptr [ebx + 0x5e5b10c4]; ret; 
0x0005fb2c: add al, 0x89; adc al, 0x24; call ecx; add esp, 0x20; ret; 
0x000f2353: add al, 0x89; add al, 0x24; call dword ptr [eax + 0x2c]; add esp, 0xc; ret; 
0x000f2374: add al, 0x89; add al, 0x24; call dword ptr [eax + 0x30]; add esp, 0xc; ret; 
0x000370df: add al, 0x89; add al, 0x24; call dword ptr [edx + 4]; add esp, 0xc; ret; 
0x00076fac: add al, 0x89; add dword ptr [ecx - 0x3fcefbaf], ecx; ret; 
0x000cf6f6: add al, 0x89; dec eax; or byte ptr [esi + 0x5f], bl; ret 4; 
0x000cfaf1: add al, 0x89; mov cs, eax; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x0008415b: add al, 0x89; or dword ptr [edx + ebx*4], 0; add byte ptr [ebp + 0x9a0c83], cl; add al, ch; ret; 
0x000cf6b9: add al, 0x89; push eax; or byte ptr [esi + 0x5f], bl; ret 4; 
0x000f5ae9: add al, 0x89; ret 0x4489; 
0x0005d211: add al, 0x89; ret 0xc031; 
0x00086390: add al, 0x89; ret 0xc085; 
0x000fb3c8: add al, 0x89; ret 0xc789; 
0x0004e9c2: add al, 0x89; ret 0xdfeb; 
0x0004e609: add al, 0x89; ret 0xe083; 
0x00079867: add al, 0x89; ret 0xe283; 
0x0004e217: add al, 0x89; ret 0xeac1; 
0x0002d6db: add al, 0x89; ret 0xead1; 
0x0005d1fa: add al, 0x89; sal byte ptr [ecx], 1; rcr byte ptr [esi + 0x5d], cl; ret; 
0x00060ea0: add al, 0x89; sal byte ptr [ecx], 1; ror byte ptr [edi], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x0005d16e: add al, 0x89; sal byte ptr [ecx], 1; ror cl, cl; ret; 
0x0002c4e2: add al, 0x89; xlatb; pop esi; ret; 
0x000487da: add al, 0x8a; add byte ptr [eax], al; add byte ptr [ebp - 0x41e337d], cl; dec dword ptr [ecx - 0x4c17dbfc]; ret; 
0x0004fa5b: add al, 0x8a; setne al; movzx eax, al; pop ebx; ret; 
0x0006f79c: add al, 0x8b; adc dword ptr [ebx + eax*4], 0; add bl, ch; ret 0x44c7; 
0x000f881e: add al, 0x8b; adc esi, esi; ret 0x7407; 
0x00108882: add al, 0x8b; inc ebp; add byte ptr [ecx + 0x42e82404], cl; ret; 
0x00108802: add al, 0x8b; inc ebp; add byte ptr [ecx - 0x3d17dbfc], cl; ret; 
0x000d708a: add al, 0x8b; inc ecx; sbb byte ptr [ecx - 0x2517dbfc], cl; ret 0xfff4; 
0x0004e054: add al, 0x8b; inc esp; and al, 4; or eax, 0x80000000; ret; 
0x0004e035: add al, 0x8b; inc esp; and al, 4; ret; 
0x00060af3: add al, 0x8b; inc esp; and al, 8; lock add dword ptr [edx], eax; ret; 
0x00060b23: add al, 0x8b; inc esp; and al, 8; lock and dword ptr [edx], eax; ret; 
0x00060b93: add al, 0x8b; inc esp; and al, 8; lock or dword ptr [edx], eax; ret; 
0x00060bc3: add al, 0x8b; inc esp; and al, 8; xchg dword ptr [edx], eax; ret; 
0x000f844c: add al, 0x8b; or byte ptr [ebp + 0x39da75c9], al; ret 0xf372; 
0x000cf678: add al, 0x8b; push esp; and al, 0x10; mov dword ptr [eax + 8], edx; ret 4; 
0x000cb996: add al, 0x8b; push esp; and al, 8; sub eax, dword ptr [edx + 4]; ret; 
0x00098f5e: add al, 0x8b; test byte ptr [eax + eax*4], ah; add byte ptr [eax], al; add byte ptr [ecx + 0x42e82404], cl; ret 0xfff8; 
0x000d992c: add al, 0x8b; test byte ptr [eax + edx*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x2b17dbfc], cl; ret; 
0x0002bb39: add al, 0x8d; add al, 0x40; mov dword ptr [ecx + eax*4 + 0x3680], 0; xor eax, eax; ret; 
0x0002bb1f: add al, 0x8d; add al, 0x40; mov eax, dword ptr [ecx + eax*4 + 0x367c]; ret; 
0x000ba638: add al, 0x8d; and dword ptr [ebx], 0x6b; cld; dec dword ptr [ecx + 0x19e82404]; ret 0xfff6; 
0x000ecec0: add al, 0x8d; stosd dword ptr es:[edi], eax; ret; 
0x0002a23c: add al, 0x91; setne al; movzx eax, al; pop ebx; ret; 
0x0002a2c7: add al, 0x96; xor eax, eax; pop ebx; pop esi; ret; 
0x0007fae3: add al, 0x99; idiv dword ptr [esp + 8]; ret; 
0x00088907: add al, 0x9b; add dword ptr [eax], eax; add byte ptr [ebp - 0x3cd237d], cl; dec dword ptr [ecx - 0x7917dbfc]; ret 0xfff9; 
0x00088936: add al, 0x9c; add dword ptr [eax], eax; add byte ptr [ebp - 0x3cd237d], cl; dec dword ptr [ecx + 0x57e82404]; ret 0xfff9; 
0x001272ab: add al, 0xa; push cs; adc al, 0x41; ret; 
0x0013b946: add al, 0xa; ret; 
0x000bb0a1: add al, 0xa0; xchg byte ptr [ecx], al; add byte ptr [ecx + 0x72e82404], cl; ret; 
0x000a788c: add al, 0xa5; add byte ptr [eax], al; add byte ptr [ecx - 0x2817dbcc], cl; ret; 
0x0009c974: add al, 0xb0; add esp, 8; pop ebx; pop esi; ret; 
0x0004f9d6: add al, 0xb2; xor eax, eax; pop ebx; pop esi; ret; 
0x00036cef: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x0002b830: add al, 0xc5; add eax, dword ptr [eax]; add byte ptr [eax], al; pop ebx; ret; 
0x000e2071: add al, 0xc7; add al, 0x24; and eax, 0xe8000000; ret 0xf458; 
0x000b4853: add al, 0xc9; ret; 
0x000df0e0: add al, 0xca; mov ecx, dword ptr [edx + ecx*8 + 4]; shr eax, cl; pop ebx; ret; 
0x0006719f: add al, 0xd; add byte ptr [eax], al; add byte ptr [eax - 0x17dbfb77], al; ret; 
0x0004ae58: add al, 0xd3; call 0x831bb2e7; ret 0x8301; 
0x0004e61d: add al, 0xd9; and al, 0x24; add esp, 0x1c; ret; 
0x0005cfb6: add al, 0xd9; inc esp; and al, 4; ret; 
0x0005d02d: add al, 0xd9; pop esp; and al, 4; fld dword ptr [esp + 4]; ret; 
0x0004e073: add al, 0xdb; pop esp; and al, 4; mov eax, dword ptr [esp + 4]; ret; 
0x0005cf49: add al, 0xdc; inc esp; and al, 4; ret; 
0x000611a5: add al, 0xdd; add al, 0x24; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0005c93a: add al, 0xdd; add al, 0x24; leave; ret; 
0x0005cfef: add al, 0xdd; inc esp; and al, 4; ret; 
0x0005d00d: add al, 0xdf; insb byte ptr es:[edi], dx; and al, 4; ret; 
0x000d6bed: add al, 0xe8; add eax, 0x8100034b; ret; 
0x000a2ecd: add al, 0xe8; and eax, 0x81000688; ret; 
0x000d6d0a: add al, 0xe8; call 0x810d705a; ret; 
0x0006abb0: add al, 0xe8; lcall 0xcc4:0x83fffb97; pop ebx; ret; 
0x0008b14f: add al, 0xe8; mov dword ptr [0x81000805], eax; ret; 
0x0009ba3a: add al, 0xe8; mov eax, 0x810006fc; ret; 
0x000c7c51: add al, 0xe8; mov eax, dword ptr [0x8100043a]; ret; 
0x000c7735: add al, 0xe8; mov ebp, 0x8100043f; ret; 
0x000a8c35: add al, 0xe8; mov ebp, 0x8100062a; ret; 
0x0007fc35: add al, 0xe8; mov ebp, 0x810008ba; ret; 
0x000ebb37: add al, 0xe8; mov ebx, 0x810001fb; ret; 
0x00034837: add al, 0xe8; mov ebx, 0x81000d6e; ret; 
0x00096233: add al, 0xe8; mov edi, 0x81000754; ret; 
0x000c3734: add al, 0xe8; mov esi, 0x8100047f; ret; 
0x000a9a36: add al, 0xe8; mov esp, 0x8100061c; ret; 
0x00079836: add al, 0xe8; mov esp, 0x8100091e; ret; 
0x00101de5: add al, 0xe8; or eax, 0x81000099; ret; 
0x00036ee5: add al, 0xe8; or eax, 0x81000d48; ret; 
0x00036e8a: add al, 0xe8; push 0x81000d48; ret; 
0x0008a5d5: add al, 0xe8; sbb eax, 0x81000811; ret; 
0x000962c5: add al, 0xe8; sub eax, 0x81000754; ret; 
0x0008bdc5: add al, 0xe8; sub eax, 0x810007f9; ret; 
0x000e07bd: add al, 0xe8; xor eax, 0x810002af; ret; 
0x000c7f1d: add al, 0xe8; popfd; ret; 
0x0003732f: add al, 0xe8; ret; 
0x00027b8a: add al, 0xeb; add esp, 8; pop edi; pop ebx; ret; 
0x000283bd: add al, 0xf; mov bh, 0; ret; 
0x000eab24: add al, 0xf; mov bh, 0xc0; ret; 
0x000474e7: add al, 0xf; mov dh, 0xc0; ret; 
0x000e8991: add al, 0xf; mov dh, 0xc1; ret; 
0x0005bb16: add al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x101; 
0x000a2844: add al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc106; 
0x00060b53: add al, 0xf0; dec dword ptr [edx]; ret; 
0x00060b73: add al, 0xf0; inc dword ptr [edx]; ret; 
0x0005cf43: add al, 0xf2; movups xmmword ptr [esp + 4], xmm0; fadd qword ptr [esp + 4]; ret; 
0x000f8856: add al, 0xf6; ret 0x7503; 
0x000f8996: add al, 0xf7; ret 0; 
0x000a5911: add al, 0xf8; inc dword ptr [ebx + 0x5e5b04c4]; pop edi; ret; 
0x000688e6: add al, 0xfc; dec dword ptr [ecx - 0x5017dbfc]; ret 0xfffb; 
0x00057254: add al, 0xfd; inc dword ptr [ebp + 0x31e675c0]; rcr byte ptr [ebx + 0x66], 0x90; ret; 
0x000ea8f5: add al, 1; add byte ptr [eax], al; add byte ptr [ecx + 0x5ee82434], cl; ret 0xfff3; 
0x000e88fb: add al, 1; add byte ptr [eax], al; mov edx, dword ptr [ecx - 0x40]; mov dword ptr [edx], eax; ret; 
0x0012a7fd: add al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0009f694: add al, 1; ret 0x728d; 
0x00052360: add al, 1; xor eax, eax; add esp, 4; pop esi; ret; 
0x00149ccf: add al, 2; insb byte ptr es:[edi], dx; ret; 
0x0013e0d5: add al, 2; mov byte ptr [edx], cl; ret; 
0x00145691: add al, 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012e2d0: add al, 2; or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x0012c3ff: add al, 2; push ebp; ret; 
0x001425d4: add al, 2; xchg eax, edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001323a8: add al, 2; xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013bfb0: add al, 2; xlatb; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00130340: add al, 3; and byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00145124: add al, 3; mov edi, 0x140e0a02; inc ecx; ret; 
0x0014304d: add al, 3; mov esi, 0x140e0a01; inc ecx; ret; 
0x001434a8: add al, 3; sbb al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00134678: add al, 3; sbb al, byte ptr [edx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001346dc: add al, 3; test al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00142a2e: add al, 4; inc ebx; or edi, dword ptr [ebp + 0xa]; ret; 
0x0012b0d8: add al, 4; inc ecx; or eax, dword ptr [ebx]; add byte ptr [ecx], 0xa; ret; 
0x0012afcc: add al, 4; inc ecx; or eax, dword ptr [edx]; fmul qword ptr [edx]; ret; 
0x0012f050: add al, 4; inc ecx; or eax, dword ptr [edx]; lea ecx, dword ptr [edx]; ret; 
0x00127140: add al, 4; inc ecx; or ebp, dword ptr [eax + 0xa]; ret; 
0x0014a022: add al, 4; inc ecx; or ebp, dword ptr [ebx + 0xa]; ret; 
0x0013dd8c: add al, 4; inc ecx; or ebp, dword ptr [edx + 0xa]; ret; 
0x00127084: add al, 4; inc ecx; or ebx, dword ptr [eax + 0xa]; ret; 
0x001270a0: add al, 4; inc ecx; or ebx, dword ptr [ebp + 0xa]; ret; 
0x00127092: add al, 4; inc ecx; or ebx, dword ptr [edx + 0xa]; ret; 
0x0012fe7f: add al, 4; inc ecx; or ebx, dword ptr [esi + 0xa]; ret; 
0x0012f05f: add al, 4; inc ecx; or ecx, dword ptr [ebx + 0xa]; ret; 
0x0012fe8d: add al, 4; inc ecx; or ecx, dword ptr [edi + 0xa]; ret; 
0x0013de26: add al, 4; inc ecx; or edi, dword ptr [esi + 0xa]; ret; 
0x0013de81: add al, 4; inc ecx; or edx, dword ptr [eax + 0xa]; ret; 
0x0013de73: add al, 4; inc ecx; or edx, dword ptr [ebx + 0xa]; ret; 
0x0013e0df: add al, 4; inc ecx; or edx, dword ptr [ecx + 0xa]; ret; 
0x0013de18: add al, 4; inc ecx; or esi, dword ptr [edx + 0xa]; ret; 
0x00125beb: add al, 4; inc ecx; or esp, dword ptr [esi + 0xa]; ret; 
0x00071879: add al, 9; ret 0xd089; 
0x0013108c: add al, ah; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001397f7: add al, al; inc ebp; add dword ptr [eax], eax; ret; 
0x0013eea3: add al, al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b4e3: add al, al; ret 0xfff1; 
0x001398ff: add al, al; ret 0xfff5; 
0x0011faf7: add al, al; ret; 
0x001386f0: add al, bh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013162f: add al, bh; ret; 
0x0013ef7f: add al, bl; ret 0xfff7; 
0x0012cb2d: add al, byte ptr [0x41140e0a]; ret; 
0x00013c6c: add al, byte ptr [bx + si]; add byte ptr [edx], ah; add byte ptr [eax], cl; add byte ptr [ecx + 0x60000013], dl; ret; 
0x0012d6f5: add al, byte ptr [eax + 0x41140e0a]; ret; 
0x000885be: add al, byte ptr [eax + 0x75]; xor eax, 0x740af980; xor byte ptr [ebx - 0x7cefdbac], cl; ret 0x8901; 
0x00127b47: add al, byte ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0012555a: add al, byte ptr [eax + 0xa]; push cs; or al, 0x41; ret; 
0x0004e9d9: add al, byte ptr [eax + 0xf00017a]; test byte ptr [edx - 0x76000002], dl; ret 0xbeeb; 
0x0006ad4f: add al, byte ptr [eax]; add al, ch; mov eax, dword ptr [0x81000a09]; ret; 
0x00091e32: add al, byte ptr [eax]; add al, ch; mov esi, 0x81000798; ret; 
0x000575ae: add al, byte ptr [eax]; add byte ptr [eax - 0x7bf0a106], al; ret; 
0x000283b5: add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebp + 0xf0474c0], al; mov bh, 0; ret; 
0x0005bc98: add al, byte ptr [eax]; add byte ptr [eax], al; pop esi; ret; 
0x000b4841: add al, byte ptr [eax]; add byte ptr [eax], al; leave; ret; 
0x0003f64b: add al, byte ptr [eax]; add byte ptr [eax], al; ret; 
0x000fc4d3: add al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b0cc4], al; ret; 
0x000a874e: add al, byte ptr [eax]; add byte ptr [ecx - 0x817dbfc], cl; ret; 
0x00013c6d: add al, byte ptr [eax]; add byte ptr [edx], ah; add byte ptr [eax], cl; add byte ptr [ecx + 0x60000013], dl; ret; 
0x0006868c: add al, byte ptr [eax]; add byte ptr [esi - 0x7d], ah; call 0xf699fb97; ret 0xf40; 
0x00098034: add al, byte ptr [eax]; add byte ptr [esi - 0x7d], ah; call 0xf69df53f; ret 0xf40; 
0x0005cc23: add al, byte ptr [eax]; add cl, bl; ret 0xe1d9; 
0x000e88d3: add al, byte ptr [eax]; add ecx, 0x687af; mov eax, dword ptr [ecx - 0x110]; add eax, 0x1c0; ret; 
0x000e070f: add al, byte ptr [eax]; add ecx, 0x70973; mov eax, dword ptr [esp + 4]; mov dword ptr [ecx + 0x2dc0], eax; ret; 
0x000e0170: add al, byte ptr [eax]; add ecx, 0x70f12; lea eax, dword ptr [ecx + 0xe57c]; ret; 
0x000e0133: add al, byte ptr [eax]; add ecx, 0x70f4f; mov eax, dword ptr [ecx - 0x1c4]; ret; 
0x000658f1: add al, byte ptr [eax]; add esp, 0xc; ret; 
0x00124666: add al, byte ptr [eax]; dec eax; ret; 
0x00124d76: add al, byte ptr [eax]; fdivr qword ptr [edi - 0x4f9b0003]; add al, byte ptr [eax]; pushfd; ret; 
0x0012462e: add al, byte ptr [eax]; inc edx; ret 0xfffc; 
0x000ea164: add al, byte ptr [eax]; mov eax, edi; pop esi; pop edi; ret; 
0x00124636: add al, byte ptr [eax]; pop edx; ret 0xfffc; 
0x00124f7e: add al, byte ptr [eax]; push cs; xor esi, edi; call eax; ret; 
0x0012461e: add al, byte ptr [eax]; push ss; ret 0xfffc; 
0x0001258a: add al, byte ptr [eax]; ret 0; 
0x0012353e: add al, byte ptr [eax]; ret 0xfa0e; 
0x001497ea: add al, byte ptr [eax]; ret 0xfab4; 
0x00124066: add al, byte ptr [eax]; ret 0xfc17; 
0x001248ee: add al, byte ptr [eax]; ret 0xfd28; 
0x00123f46: add al, byte ptr [eax]; scasb al, byte ptr es:[edi]; ret; 
0x00124d7e: add al, byte ptr [eax]; pushfd; ret; 
0x00123bee: add al, byte ptr [eax]; ret; 
0x0012464e: add al, byte ptr [eax]; sahf; ret 0xfffc; 
0x0012ca73: add al, byte ptr [ebp + 0x41100e0a]; ret; 
0x001288b8: add al, byte ptr [ebp + 0x41140e0a]; ret; 
0x00045fd6: add al, byte ptr [ebp + 0x5b0274c0]; ret; 
0x00126268: add al, byte ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x00139be2: add al, byte ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x0012eb42: add al, byte ptr [ebp + 0xe]; or al, 0x41; ret; 
0x000a5927: add al, byte ptr [ebp - 0x76078a40]; shl byte ptr [esi - 0x70], 1; ret; 
0x000bd952: add al, byte ptr [ebp - 0x7cec8b40]; ret 0x8908; 
0x00130bb3: add al, byte ptr [ebx + 0x41100e0a]; ret; 
0x0012ac48: add al, byte ptr [ebx + 0x41140e0a]; ret; 
0x001090d4: add al, byte ptr [ebx + 0x5e5b0cc4]; ret; 
0x000314fc: add al, byte ptr [ebx + 0x5e5b10c4]; ret; 
0x00127534: add al, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x001484da: add al, byte ptr [ebx + 0xa]; push cs; or al, 0x41; ret; 
0x0012749d: add al, byte ptr [ebx + 0xe]; adc byte ptr [esi + ecx + 8], ah; inc ecx; ret; 
0x00136539: add al, byte ptr [ebx + 0xe]; inc esp; add dl, byte ptr [edx + 0x41080e0a]; ret; 
0x00147ae1: add al, byte ptr [ebx + 0xe]; or al, 2; mov esi, 0x41080e0a; ret; 
0x00128ed5: add al, byte ptr [ebx + 0xe]; sbb byte ptr [esi + ecx + 8], bh; inc ecx; ret; 
0x001311dd: add al, byte ptr [ebx + 0xe]; sbb byte ptr [esi + ecx + 8], ch; inc ecx; ret; 
0x00125b45: add al, byte ptr [ebx + 0xe]; sbb byte ptr [esi + ecx + 8], dh; inc ecx; ret; 
0x00136d8d: add al, byte ptr [ebx + 0xe]; xor byte ptr [edx], al; or cl, byte ptr [0x4108]; ret; 
0x0013eed1: add al, byte ptr [ebx + 0xe]; xor byte ptr [edx], al; push 0x41080e0a; ret; 
0x000a9514: add al, byte ptr [ebx]; add dword ptr [ecx - 0x7c172efe], ecx; ret 0x8b04; 
0x00142908: add al, byte ptr [ebx]; add dword ptr cs:[edx], ecx; push cs; adc al, 0x41; ret; 
0x00140724: add al, byte ptr [ebx]; add dword ptr gs:[edx], ecx; push cs; adc al, 0x41; ret; 
0x0012abd4: add al, byte ptr [ebx]; call 0x1420b5dc; inc ecx; ret; 
0x0012b224: add al, byte ptr [ebx]; mov ecx, 0x140e0a01; inc ecx; ret; 
0x00144fac: add al, byte ptr [ebx]; sub byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012aa71: add al, byte ptr [ecx + 0x41080e0a]; ret; 
0x0014ca7b: add al, byte ptr [ecx + 0x41100e0a]; ret; 
0x00126720: add al, byte ptr [ecx + 0x41140e0a]; ret; 
0x00127a03: add al, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0014b35e: add al, byte ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x00127e58: add al, byte ptr [ecx + 0xa]; ret; 
0x001259bd: add al, byte ptr [ecx + 0xe]; or al, 0x83; add ebp, dword ptr [ebp + 0xa]; ret; 
0x001259e5: add al, byte ptr [ecx + 0xe]; or al, 0x83; add ebp, dword ptr [edi + 0xa]; ret; 
0x0014c001: add al, byte ptr [ecx + 0xe]; or al, 0x83; add ebp, dword ptr [esi + 0xa]; ret; 
0x0014bd59: add al, byte ptr [ecx + 0xe]; or al, 0x83; add edi, dword ptr [edx + 0xa]; ret; 
0x00148191: add al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000fd3e9: add al, byte ptr [ecx]; ret 0x8966; 
0x0003286c: add al, byte ptr [ecx]; rol byte ptr [ebx + 0x5e5b04c4], 1; ret; 
0x00032e3e: add al, byte ptr [ecx]; rol byte ptr [ebx + 0x5e5b10c4], 1; ret; 
0x0014cea6: add al, byte ptr [edi + 0x410c0e0a]; ret; 
0x0013e4fb: add al, byte ptr [edi + 0x41100e0a]; ret; 
0x001286cc: add al, byte ptr [edi + 0x41140e0a]; ret; 
0x0012968a: add al, byte ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0012c452: add al, byte ptr [edi + 0xa]; push cs; or al, 0x41; ret; 
0x0012b32f: add al, byte ptr [edx + 0x41140e0a]; ret; 
0x00143f4c: add al, byte ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x0012deb6: add al, byte ptr [edx + 0xa]; push cs; or al, 0x41; ret; 
0x00126f01: add al, byte ptr [edx + 0xd]; add eax, 0x61038341; ret; 
0x00139d25: add al, byte ptr [edx + 0xd]; add eax, 0x62038344; ret; 
0x0013bdad: add al, byte ptr [edx + 0xd]; add eax, 0x65038344; ret; 
0x00127c05: add al, byte ptr [edx + 0xd]; add eax, 0x6a038344; ret; 
0x0012fef1: add al, byte ptr [edx + 0xd]; add eax, 0x6a038347; or al, ch; ret; 
0x0013bd89: add al, byte ptr [edx + 0xd]; add eax, 0x6c038344; ret; 
0x0014afd5: add al, byte ptr [edx + 0xd]; add eax, 0x77038344; ret; 
0x0013e0cd: add al, byte ptr [edx + 0xd]; add eax, 0x83038645; add al, 2; mov byte ptr [edx], cl; ret; 
0x0012706d: add al, byte ptr [edx + 0xd]; add eax, 0x86038746; add al, 0x83; add eax, 0xa011903; ret; 
0x0012f039: add al, byte ptr [edx + 0xd]; add eax, 0x86038746; add al, 0x83; add eax, 0xa011d03; ret; 
0x00126eb1: add al, byte ptr [edx + 0xd]; add eax, 0x86038746; add al, 0x83; add eax, 0xa019e03; ret; 
0x00126fd9: add al, byte ptr [edx + 0xd]; add eax, 0x86038746; add al, 0x83; add eax, 0xa01bf03; ret; 
0x0012afb5: add al, byte ptr [edx + 0xd]; add eax, 0x86038746; add al, 0x83; add eax, 0xa01fe03; ret; 
0x0012b0c1: add al, byte ptr [edx + 0xd]; add eax, 0x86038746; add al, 0x83; add eax, 0xa025f03; ret; 
0x00127129: add al, byte ptr [edx + 0xd]; add eax, 0x86038746; add al, 0x83; add eax, 0xa02a103; ret; 
0x0013b929: add al, byte ptr [edx + 0xd]; add eax, 0x86038749; add al, 0x83; add eax, 0xa011b03; ret; 
0x0013dee9: add al, byte ptr [edx + 0xd]; add eax, 0x86038749; add al, 0x83; add eax, 0xa013e03; ret; 
0x0013dd75: add al, byte ptr [edx + 0xd]; add eax, 0x86038749; add al, 0x83; add eax, 0xa014c03; ret; 
0x0013dd19: add al, byte ptr [edx + 0xd]; add eax, 0x86038749; add al, 0x83; add eax, 0xa015603; ret; 
0x00138659: add al, byte ptr [edx + 0xd]; add eax, 0x86038749; add al, 0x83; add eax, 0xa015d03; ret; 
0x00149999: add al, byte ptr [edx + 0xd]; add eax, 0x86038749; add al, 0x83; add eax, 0xa019e03; ret; 
0x0013b991: add al, byte ptr [edx + 0xd]; add eax, 0x86038749; add al, 0x83; add eax, 0xa022a03; ret; 
0x001427ad: add al, byte ptr [edx + 0xd]; add eax, 0x86038749; add al, 0x83; add eax, 0xa030503; ret; 
0x0013de01: add al, byte ptr [edx + 0xd]; add eax, 0x86038749; add al, 0x83; add eax, 0xa03a003; ret; 
0x00126c75: add al, byte ptr [edx + 0xd]; add eax, 0x86038749; add al, 0x83; add eax, 0xa053b03; ret; 
0x0013d831: add al, byte ptr [edx + 0xd]; add eax, 0x86038749; add al, 0x83; add eax, 0xa068003; ret; 
0x00139241: add al, byte ptr [edx + 0xd]; add eax, 0x8603874c; add al, 0x83; add eax, 0xa013503; ret; 
0x0013472d: add al, byte ptr [edx + 0xd]; add eax, 0x8603874c; add al, 0x83; add eax, 0xa01ad03; ret; 
0x001348f9: add al, byte ptr [edx + 0xd]; add eax, 0x8603874c; add al, 0x83; add eax, 0xa024003; ret; 
0x0012e93d: add al, byte ptr [edx + 0xd]; add eax, 0x8603874c; add al, 0x83; add eax, 0xa026b03; ret; 
0x0013d8ad: add al, byte ptr [edx + 0xd]; add eax, 0x8603874c; add al, 0x83; add eax, 0xa050803; ret; 
0x00147d08: add al, byte ptr [edx + 0xe]; adc al, 0x41; ret; 
0x001341bc: add al, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x00128386: add al, byte ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x00149b35: add al, byte ptr [edx + ecx]; push cs; adc al, 0x41; ret; 
0x001476e5: add al, byte ptr [edx]; dec esp; ret; 
0x00135a60: add al, byte ptr [edx]; mov ebp, 0x41140e0a; ret; 
0x00127370: add al, byte ptr [edx]; mov esi, 0x41140e0a; ret; 
0x0012ac19: add al, byte ptr [edx]; pop edx; ret; 
0x0014326c: add al, byte ptr [edx]; ror byte ptr [edx], 1; push cs; adc al, 0x41; ret; 
0x00146da4: add al, byte ptr [edx]; xchg eax, ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00146d64: add al, byte ptr [edx]; xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013f4ac: add al, byte ptr [edx]; cwde; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127474: add al, byte ptr [esi + 0x41100e0a]; ret; 
0x0013ec70: add al, byte ptr [esi + 0x41140e0a]; ret; 
0x001268a0: add al, byte ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00128356: add al, byte ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x00125be0: add al, byte ptr [esi + 0xa]; ret; 
0x00138a36: add al, byte ptr [esi + 0xe]; or al, 0x41; ret; 
0x00144542: add al, byte ptr [esi + ecx + 0xc]; inc ecx; ret; 
0x00128eb5: add al, byte ptr [esi + ecx + 8]; inc ecx; ret; 
0x000e88d2: add al, byte ptr cs:[eax]; add ecx, 0x687af; mov eax, dword ptr [ecx - 0x110]; add eax, 0x1c0; ret; 
0x0004e467: add al, ch; adc dword ptr [eax - 0x3b7c0003], 0xc; pop ebx; xor eax, eax; ret; 
0x0005dbcd: add al, ch; and eax, 0x81000adb; ret; 
0x0006740a: add al, ch; call 0x81067e53; ret; 
0x0002a05d: add al, ch; lea edi, dword ptr [esi - 0x3b7c0001]; add al, 0x5b; ret; 
0x00101952: add al, ch; mov al, byte ptr [0x8100009d]; ret; 
0x00085450: add al, ch; mov byte ptr [0x31fffff6], al; rol byte ptr [ebx - 0x6bf0fe08], cl; ret 0x1689; 
0x00048b50: add al, ch; mov byte ptr [0x81000c2b], al; ret; 
0x0006ad51: add al, ch; mov eax, dword ptr [0x81000a09]; ret; 
0x00053935: add al, ch; mov ebp, 0x81000b7d; ret; 
0x000ba837: add al, ch; mov ebx, 0x8100050e; ret; 
0x000c4d39: add al, ch; mov ecx, 0x81000469; ret; 
0x000b9d39: add al, ch; mov ecx, 0x81000519; ret; 
0x000a3339: add al, ch; mov ecx, 0x81000683; ret; 
0x00096b39: add al, ch; mov ecx, 0x8100074b; ret; 
0x00090133: add al, ch; mov edi, 0x810007b5; ret; 
0x000ee434: add al, ch; mov esi, 0x810001d2; ret; 
0x00091e34: add al, ch; mov esi, 0x81000798; ret; 
0x000c6eae: add al, ch; mov esp, 0x89fff5fa; ret 0xc085; 
0x0002b934: add al, ch; neg byte ptr [esi - 0x3fce0001]; add esp, 4; pop ebx; ret; 
0x00132f3c: add al, ch; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000e07e5: add al, ch; or eax, 0x810002af; ret; 
0x00048ce5: add al, ch; or eax, 0x81000c2a; ret; 
0x000488e5: add al, ch; or eax, 0x81000c2e; ret; 
0x00009113: add al, ch; outsd dx, dword ptr [esi]; add byte ptr [eax], al; ret 0xcf6; 
0x000e2078: add al, ch; ret 0xf458; 
0x000780e8: add al, ch; ret 0xfabd; 
0x000699a8: add al, ch; ret 0xfb97; 
0x000bf2d5: add al, ch; sbb eax, 0x810004c4; ret; 
0x000913d5: add al, ch; sbb eax, 0x810007a3; ret; 
0x000490d5: add al, ch; sbb eax, 0x81000c26; ret; 
0x000f0a49: add al, ch; test eax, 0x810001ac; ret; 
0x00048749: add al, ch; test eax, 0x81000c2f; ret; 
0x00040749: add al, ch; test eax, 0x81000caf; ret; 
0x00077129: add al, ch; xchg eax, ecx; ret; 
0x00097b0e: add al, ch; pushfd; ret; 
0x00032107: add al, ch; ret; 
0x000b7ad4: add al, ch; salc; ret; 
0x001481fd: add al, cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00007b83: add al, cl; push edx; add byte ptr [eax], al; xchg eax, esp; ret; 
0x00060c1f: add al, dh; add dword ptr [esp - 4], 0; ret; 
0x00060ec4: add al, dh; dec dword ptr [ecx]; ret 0x5489; 
0x0012cb5a: add al, dh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012288f: add al, dh; ret 0xfff7; 
0x00060b88: add al, dh; xadd dword ptr [edx], eax; inc eax; ret; 
0x00127ac0: add al, dl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0000bba7: add al, dl; ret 2; 
0x00006cc7: add al, dl; ret 9; 
0x00141607: add al, dl; ret; 
0x00065531: add bh, ah; inc dword ptr [ebx + 0x5e5b20c4]; ret; 
0x0012c6c5: add bh, ah; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127ea0: add bh, al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00077381: add bh, bl; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0013501f: add bh, bl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013e0a3: add bh, byte ptr [eax + 0x41100e0a]; ret; 
0x0013314e: add bh, byte ptr [eax + 0x41140e0a]; ret; 
0x00126318: add bh, byte ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00141b75: add bh, byte ptr [eax + 0xa]; ret; 
0x00036fa2: add bh, byte ptr [eax + 1]; add esp, 0x14; pop ebx; ret; 
0x000bf6b5: add bh, byte ptr [eax + 1]; pop ebx; ret; 
0x0014cdf9: add bh, byte ptr [ebp + 0x41100e0a]; ret; 
0x001292b4: add bh, byte ptr [ebp + 0x41140e0a]; ret; 
0x00037ea6: add bh, byte ptr [ebp + 0xa]; mov edx, dword ptr [ecx - 0x148]; mov eax, dword ptr [edx + eax*4]; ret; 
0x0012c898: add bh, byte ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x0012aaa2: add bh, byte ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x0013ebd8: add bh, byte ptr [ebx + 0x41140e0a]; ret; 
0x00130171: add bh, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x00145552: add bh, byte ptr [ebx + 0xa]; push cs; or al, 0x41; ret; 
0x0012b1cd: add bh, byte ptr [ebx + 0xa]; ret; 
0x001335e6: add bh, byte ptr [ecx + 0x41140e0a]; ret; 
0x0012ae54: add bh, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x000478c9: add bh, byte ptr [ecx]; ret 0x820f; 
0x000ff77d: add bh, byte ptr [ecx]; ret 0x870f; 
0x00125b00: add bh, byte ptr [edi + 0x41140e0a]; ret; 
0x001257ad: add bh, byte ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00128fb7: add bh, byte ptr [edx + 0x41100e0a]; ret; 
0x00133f16: add bh, byte ptr [edx + 0x41140e0a]; ret; 
0x00129b48: add bh, byte ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x001271ee: add bh, byte ptr [edx + 0xa]; push cs; or al, 0x41; ret; 
0x0012794c: add bh, byte ptr [edx + 0xe]; adc al, 0x41; ret; 
0x0013223d: add bh, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0012b668: add bh, byte ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x00147ae5: add bh, byte ptr [esi + 0x41080e0a]; ret; 
0x00127371: add bh, byte ptr [esi + 0x41140e0a]; ret; 
0x00127b88: add bh, byte ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00125dc7: add bh, byte ptr [esi + 0xa]; ret; 
0x0013b082: add bh, byte ptr [esi + 0xe]; or al, 0x41; ret; 
0x0013afd8: add bh, ch; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001361f2: add bh, cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0005c00a: add bh, dh; fiadd dword ptr [ebx + 0x5d5b0cc4]; ret; 
0x00062ba6: add bh, dh; fisttp word ptr [ecx - 0x7cff728c]; ret 0x8301; 
0x000f89a6: add bh, dh; ret 0; 
0x00099216: add bh, dh; ret 0xffff; 
0x00142c8c: add bh, dl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0011fab7: add bh, dl; ret 0xfff0; 
0x0013d7c3: add bl, ah; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012c06c: add bl, al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129464: add bl, bh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013fdfc: add bl, bl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126c48: add bl, byte ptr [eax + 0x41140e0a]; ret; 
0x0012a080: add bl, byte ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0012864d: add bl, byte ptr [eax + 0xa]; ret; 
0x00144784: add bl, byte ptr [eax + 0xe]; adc al, 0x41; ret; 
0x00136bea: add bl, byte ptr [eax + 0xe]; or al, 0x41; ret; 
0x0012a259: add bl, byte ptr [ebp + 0x41140e0a]; ret; 
0x001266b4: add bl, byte ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x0014c74e: add bl, byte ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x0013bd66: add bl, byte ptr [ebp + 0xa]; ret; 
0x0013b136: add bl, byte ptr [ebx + 0x410c0e0a]; ret; 
0x00131283: add bl, byte ptr [ebx + 0x41140e0a]; ret; 
0x000b2cef: add bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x000a9566: add bl, byte ptr [ebx + 0x5e]; ret; 
0x00127b18: add bl, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x0013bec6: add bl, byte ptr [ebx + 0xa]; ret; 
0x00147754: add bl, byte ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x0012a87c: add bl, byte ptr [ecx + 0x41140e0a]; ret; 
0x00126604: add bl, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0012d178: add bl, byte ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x00143bd0: add bl, byte ptr [ecx + 0xa]; ret; 
0x001258be: add bl, byte ptr [ecx + 0xe]; or al, 0x41; ret; 
0x0012e757: add bl, byte ptr [edi + 0x41100e0a]; ret; 
0x00137341: add bl, byte ptr [edi + 0x41140e0a]; ret; 
0x001278e0: add bl, byte ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0012caa6: add bl, byte ptr [edi + 0xa]; push cs; or al, 0x41; ret; 
0x0012c670: add bl, byte ptr [edx + 0x41140e0a]; ret; 
0x001269b0: add bl, byte ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x0012fed2: add bl, byte ptr [edx + 0xa]; ret; 
0x0012c7c6: add bl, byte ptr [edx + 0xe]; or al, 0x41; ret; 
0x0013178d: add bl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x001276de: add bl, byte ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x0013b0d6: add bl, byte ptr [esi + 0x410c0e0a]; ret; 
0x001253d7: add bl, byte ptr [esi + 0x41100e0a]; ret; 
0x00128765: add bl, byte ptr [esi + 0x41140e0a]; ret; 
0x001275e4: add bl, byte ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00130f5a: add bl, byte ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x0014cf09: add bl, byte ptr [esi + 0xa]; ret; 
0x001438e2: add bl, byte ptr [esi + 0xe]; or al, 0x41; ret; 
0x0012f9b7: add bl, byte ptr [esi + ecx + 0x10]; inc ecx; ret; 
0x0013e941: add bl, byte ptr [esi + ecx + 8]; inc ecx; ret; 
0x0013f3a3: add bl, byte ptr fs:[eax + 0x41140e0a]; ret; 
0x000bd449: add bl, ch; mov byte ptr [0xec835356], al; adc al, ch; mov byte ptr [0x810004e2], al; ret; 
0x0012e074: add bl, ch; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012c0de: add bl, ch; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0006f7a2: add bl, ch; ret 0x44c7; 
0x000c6cf1: add bl, ch; ret 0x6c7; 
0x0009c1ca: add bl, ch; sub eax, 0x6f52a; add ecx, 0xb4eb2; mov eax, dword ptr [ecx + 0x22cc]; ret; 
0x0003cf8c: add bl, ch; ret; 
0x000b914a: add bl, cl; idiv bh; add esp, 0x24; pop ebx; ret; 
0x0012ac89: add bl, cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129a70: add bl, dh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0004aeea: add bl, dl; call 0x831ab379; ret 0x8301; 
0x0012cdb8: add bl, dl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00011413: add bl, dl; pop ebp; add byte ptr [eax], al; outsb dx, byte ptr [esi]; ret 9; 
0x0005c8bc: add bl, dl; clc; and eax, 1; ret; 
0x000f7232: add bl, dl; clc; and eax, 3; ret; 
0x0012083f: add byte ptr [0x7cfff2b4], dh; ret; 
0x000a955f: add byte ptr [0x7fffffff], ah; mov dword ptr [edx], eax; pop ebx; pop esi; ret; 
0x000315ab: add byte ptr [0x7fffffff], ah; ret; 
0x0000577b: add byte ptr [eax + 0x100000b], dh; add eax, 0x4ad0000; add byte ptr [eax], al; ret 5; 
0x0014678f: add byte ptr [eax + 0x15], bl; add al, byte ptr [eax]; ret; 
0x000213d7: add byte ptr [eax + 0x15], dl; adc eax, 0x3ba0700; add byte ptr [ebp + edx + 0x15], dl; add byte ptr [edi], al; ret 3; 
0x0004e0c9: add byte ptr [eax + 0x1b80774], al; add byte ptr [eax], al; add cl, cl; ret; 
0x00122bdf: add byte ptr [eax + 0x28fff832], ah; ret; 
0x0005c935: add byte ptr [eax + 0x4244489], al; fld qword ptr [esp]; leave; ret; 
0x0009d47b: add byte ptr [eax + 0x5b24c483], al; pop esi; ret; 
0x00020357: add byte ptr [eax + 0x600150d], al; ret 1; 
0x000f89d9: add byte ptr [eax + 0x75], al; or bh, byte ptr [eax + 0x20]; ret; 
0x000062e3: add byte ptr [eax + 0x78000013], al; ret 2; 
0x0000538f: add byte ptr [eax + 0xb], cl; add byte ptr [eax], al; ret 0xb; 
0x00096278: add byte ptr [eax + 1], bh; add esp, 4; pop ebx; ret; 
0x0001475b: add byte ptr [eax + 2], bl; add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret; 
0x00066c4f: add byte ptr [eax + 3], bh; add esp, 0x24; pop ebx; ret; 
0x0000657b: add byte ptr [eax + eax + 0x120000], al; or byte ptr [eax], al; ret 0; 
0x000104fb: add byte ptr [eax + eax + 0x220000], cl; or byte ptr [eax], al; ret 0x34; 
0x00044089: add byte ptr [eax + eax], ah; ret; 
0x0013162b: add byte ptr [eax + eax], al; add al, bh; ret; 
0x00141603: add byte ptr [eax + eax], al; add al, dl; ret; 
0x000c54b3: add byte ptr [eax + eax], al; ret; 
0x00141593: add byte ptr [eax + eax], bh; add byte ptr [eax], al; pushal; ret; 
0x00131583: add byte ptr [eax + eax], bl; add byte ptr [eax], al; push eax; ret; 
0x0013fadb: add byte ptr [eax + eax], ch; add byte ptr [eax], al; test al, 0xa8; add dword ptr [eax], eax; ret; 
0x001414c7: add byte ptr [eax + eax], dh; add byte ptr [eax], al; xchg eax, esp; ret 1; 
0x001314cf: add byte ptr [eax + eax], dh; add byte ptr [eax], al; pushfd; ret 0; 
0x0013987f: add byte ptr [eax + eax], dl; add byte ptr [esi + eax*2 + 1], cl; add byte ptr [edx], ah; ret 0xfff5; 
0x00009253: add byte ptr [eax + ebx*2], bh; add byte ptr [ebx - 0x1c], bl; or byte ptr [eax], al; ret 3; 
0x0009ca01: add byte ptr [eax + ecx - 0x3f], dh; call 0x8ce4d28; pop ebx; ret; 
0x0002df78: add byte ptr [eax + ecx - 0x7d], dh; rol byte ptr [ecx], 0x39; sal byte ptr [ebp - 0xd], 1; ret; 
0x00061e7a: add byte ptr [eax + edi - 0x7d], dh; ret 0xeb01; 
0x0013efc7: add byte ptr [eax - 0x11fffe63], dl; ret 0xfff7; 
0x000671a3: add byte ptr [eax - 0x17dbfb77], al; ret; 
0x0005c912: add byte ptr [eax - 0x26dbfb77], al; add al, 0x24; add esp, 4; ret; 
0x0005c8da: add byte ptr [eax - 0x2708f88c], al; add esp, 0xc; pop ebx; ret; 
0x00120827: add byte ptr [eax - 0x37000d62], dh; ret 0; 
0x0004e27b: add byte ptr [eax - 0x3f6bf081], al; movzx eax, al; ret; 
0x0012b4df: add byte ptr [eax - 0x3fffff9e], ch; ret 0xfff1; 
0x00122f6f: add byte ptr [eax - 0x40], ch; clc; ljmp ptr [eax + 0x200001dd]; ret 0xfff8; 
0x00120847: add byte ptr [eax - 0x43000d4b], cl; ret; 
0x00008fa3: add byte ptr [eax - 0x4fffffed], bl; ret; 
0x0012082f: add byte ptr [eax - 0x61], bl; dec dword ptr [eax]; ret; 
0x000d4ee3: add byte ptr [eax - 0x6bf0d106], al; ret 0xb60f; 
0x00124f77: add byte ptr [eax - 0x6f0001d1], ch; ret; 
0x000575b0: add byte ptr [eax - 0x7bf0a106], al; ret; 
0x000b424d: add byte ptr [eax - 0x7cfa8bff], ch; ret 0xdc01; 
0x0004fcde: add byte ptr [eax - 1], bh; add esp, 0x1c; pop ebx; ret; 
0x000480cd: add byte ptr [eax - 1], bh; add esp, 0x20; pop ebx; pop esi; ret; 
0x00082931: add byte ptr [eax - 1], bh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00058410: add byte ptr [eax - 1], bh; add esp, 4; pop ebx; pop esi; ret; 
0x0010a6e5: add byte ptr [eax - 1], bh; mov edx, 0xffffffff; ret; 
0x000e9cff: add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; ret; 
0x00102e4d: add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0002a250: add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003f928: add byte ptr [eax - 1], bh; pop esi; pop edi; pop ebp; ret; 
0x00012587: add byte ptr [eax - 7], dh; add al, byte ptr [eax]; ret 0; 
0x00026bd5: add byte ptr [eax - 8], ch; sbb eax, 0xf0e90000; ret; 
0x000780e5: add byte ptr [eax], 0; add al, ch; ret 0xfabd; 
0x00098f62: add byte ptr [eax], 0; add byte ptr [ecx + 0x42e82404], cl; ret 0xfff8; 
0x0004cb26: add byte ptr [eax], 0; add byte ptr [ecx], ch; ret 0xea83; 
0x000385f2: add byte ptr [eax], 0; add cl, ch; ret 0xfffe; 
0x000b1ba5: add byte ptr [eax], 0; add cl, ch; ret; 
0x000eacb8: add byte ptr [eax], 0xf; mov bh, 0xc0; ret; 
0x0000fa0b: add byte ptr [eax], ah; add byte ptr [eax], al; and al, byte ptr [eax]; or byte ptr [eax], al; ret; 
0x00122f77: add byte ptr [eax], ah; ret 0xfff8; 
0x0012465f: add byte ptr [eax], ah; ret; 
0x00006e16: add byte ptr [eax], al; aad 0x31; or al, 0; ret; 
0x0000657e: add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0; 
0x00009a1e: add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x26; 
0x00007d2e: add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x2b; 
0x00009cde: add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x2d; 
0x0000bb2e: add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x46; 
0x000139ae: add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x47; 
0x0000da1e: add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x48; 
0x00007c1e: add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x49; 
0x0000be3e: add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x6a; 
0x0000c21e: add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x6c; 
0x000147ae: add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x75; 
0x00006b8e: add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x78; 
0x00006b6e: add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x86; 
0x0000dc0e: add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0xb; 
0x00006c0e: add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret; 
0x00141501: add byte ptr [eax], al; add ah, cl; ret 1; 
0x00131509: add byte ptr [eax], al; add ah, dl; ret 0; 
0x000c54b2: add byte ptr [eax], al; add al, 0; ret; 
0x001397f5: add byte ptr [eax], al; add al, al; inc ebp; add dword ptr [eax], eax; ret; 
0x0013162d: add byte ptr [eax], al; add al, bh; ret; 
0x001090d2: add byte ptr [eax], al; add al, byte ptr [ebx + 0x5e5b0cc4]; ret; 
0x00067408: add byte ptr [eax], al; add al, ch; call 0x81067e53; ret; 
0x00048b4e: add byte ptr [eax], al; add al, ch; mov byte ptr [0x81000c2b], al; ret; 
0x000ba835: add byte ptr [eax], al; add al, ch; mov ebx, 0x8100050e; ret; 
0x000c4d37: add byte ptr [eax], al; add al, ch; mov ecx, 0x81000469; ret; 
0x000b9d37: add byte ptr [eax], al; add al, ch; mov ecx, 0x81000519; ret; 
0x000a3337: add byte ptr [eax], al; add al, ch; mov ecx, 0x81000683; ret; 
0x000c6eac: add byte ptr [eax], al; add al, ch; mov esp, 0x89fff5fa; ret 0xc085; 
0x000e2076: add byte ptr [eax], al; add al, ch; ret 0xf458; 
0x000780e6: add byte ptr [eax], al; add al, ch; ret 0xfabd; 
0x000913d3: add byte ptr [eax], al; add al, ch; sbb eax, 0x810007a3; ret; 
0x00048747: add byte ptr [eax], al; add al, ch; test eax, 0x81000c2f; ret; 
0x00077127: add byte ptr [eax], al; add al, ch; xchg eax, ecx; ret; 
0x00097b0c: add byte ptr [eax], al; add al, ch; pushfd; ret; 
0x00035125: add byte ptr [eax], al; add al, ch; ret; 
0x000b7ad2: add byte ptr [eax], al; add al, ch; salc; ret; 
0x00060c1d: add byte ptr [eax], al; add al, dh; add dword ptr [esp - 4], 0; ret; 
0x00060b86: add byte ptr [eax], al; add al, dh; xadd dword ptr [edx], eax; inc eax; ret; 
0x00141605: add byte ptr [eax], al; add al, dl; ret; 
0x000f89a4: add byte ptr [eax], al; add bh, dh; ret 0; 
0x00099214: add byte ptr [eax], al; add bh, dh; ret 0xffff; 
0x0009d59f: add byte ptr [eax], al; add bl, ch; ret 0x44c7; 
0x0003cf8a: add byte ptr [eax], al; add bl, ch; ret; 
0x000f7230: add byte ptr [eax], al; add bl, dl; clc; and eax, 3; ret; 
0x0014678d: add byte ptr [eax], al; add byte ptr [eax + 0x15], bl; add al, byte ptr [eax]; ret; 
0x0004e0c7: add byte ptr [eax], al; add byte ptr [eax + 0x1b80774], al; add byte ptr [eax], al; add cl, cl; ret; 
0x0005c933: add byte ptr [eax], al; add byte ptr [eax + 0x4244489], al; fld qword ptr [esp]; leave; ret; 
0x000f89d7: add byte ptr [eax], al; add byte ptr [eax + 0x75], al; or bh, byte ptr [eax + 0x20]; ret; 
0x00096276: add byte ptr [eax], al; add byte ptr [eax + 1], bh; add esp, 4; pop ebx; ret; 
0x00066c4d: add byte ptr [eax], al; add byte ptr [eax + 3], bh; add esp, 0x24; pop ebx; ret; 
0x00141601: add byte ptr [eax], al; add byte ptr [eax + eax], al; add al, dl; ret; 
0x00141591: add byte ptr [eax], al; add byte ptr [eax + eax], bh; add byte ptr [eax], al; pushal; ret; 
0x00131581: add byte ptr [eax], al; add byte ptr [eax + eax], bl; add byte ptr [eax], al; push eax; ret; 
0x001414c5: add byte ptr [eax], al; add byte ptr [eax + eax], dh; add byte ptr [eax], al; xchg eax, esp; ret 1; 
0x00061e78: add byte ptr [eax], al; add byte ptr [eax + edi - 0x7d], dh; ret 0xeb01; 
0x000671a1: add byte ptr [eax], al; add byte ptr [eax - 0x17dbfb77], al; ret; 
0x0005c910: add byte ptr [eax], al; add byte ptr [eax - 0x26dbfb77], al; add al, 0x24; add esp, 4; ret; 
0x0005c8d8: add byte ptr [eax], al; add byte ptr [eax - 0x2708f88c], al; add esp, 0xc; pop ebx; ret; 
0x0012b4dd: add byte ptr [eax], al; add byte ptr [eax - 0x3fffff9e], ch; ret 0xfff1; 
0x000b424b: add byte ptr [eax], al; add byte ptr [eax - 0x7cfa8bff], ch; ret 0xdc01; 
0x0004fcdc: add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0x1c; pop ebx; ret; 
0x00102e4b: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0002a24e: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x00002ddc: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 1; 
0x00004aac: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 3; 
0x00002dde: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 1; 
0x00003ab2: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 2; 
0x00004aae: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 3; 
0x0000533e: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 8; 
0x00004ac6: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 9; 
0x0002bb42: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00003b52: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00004337: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 6], bh; add byte ptr [eax], al; ret 7; 
0x00056885: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 4; pop ebx; ret; 
0x000644c3: add byte ptr [eax], al; add byte ptr [eax], al; call 0x63ffe; add esp, 0x10; ret; 
0x000a2c3e: add byte ptr [eax], al; add byte ptr [eax], al; call 0xa2529; add esp, 0x10; ret; 
0x0009d382: add byte ptr [eax], al; add byte ptr [eax], al; fld qword ptr [esp]; leave; ret; 
0x00137e17: add byte ptr [eax], al; add byte ptr [eax], al; in al, 0x2b; add dword ptr [eax], eax; ret 0xf54e; 
0x00000a78: add byte ptr [eax], al; add byte ptr [eax], al; inc byte ptr [ebx]; add byte ptr [eax], al; ret; 
0x00004338: add byte ptr [eax], al; add byte ptr [eax], al; jns 0x4344; add byte ptr [eax], al; ret 7; 
0x00002f00: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, dword ptr [edx]; add byte ptr [eax], al; ret 0; 
0x0002df86: add byte ptr [eax], al; add byte ptr [eax], al; lea edi, dword ptr [edi]; ret; 
0x00060c1c: add byte ptr [eax], al; add byte ptr [eax], al; lock add dword ptr [esp - 4], 0; ret; 
0x00037079: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x10], 0; ret; 
0x0004fa8b: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0xc], 0; xor eax, eax; ret; 
0x000ab784: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0xc], 0; ret; 
0x000ab77d: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 0xc], 0; ret; 
0x0006114c: add byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00060b4c: add byte ptr [eax], al; add byte ptr [eax], al; mov edx, dword ptr [esp + 4]; lock dec dword ptr [edx]; ret; 
0x000e9c23: add byte ptr [eax], al; add byte ptr [eax], al; pop esi; ret; 
0x00002de0: add byte ptr [eax], al; add byte ptr [eax], al; ret 1; 
0x00003ab4: add byte ptr [eax], al; add byte ptr [eax], al; ret 2; 
0x00004ab0: add byte ptr [eax], al; add byte ptr [eax], al; ret 3; 
0x00005340: add byte ptr [eax], al; add byte ptr [eax], al; ret 8; 
0x00004ac8: add byte ptr [eax], al; add byte ptr [eax], al; ret 9; 
0x000fad5c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x0002bb44: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00003b54: add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0005014d: add byte ptr [eax], al; add byte ptr [eax], dh; shr cl, cl; and eax, 0x90fffffe; ret; 
0x0010b46e: add byte ptr [eax], al; add byte ptr [ebp + 0x235483], cl; add byte ptr [ecx + 0x21e82404], cl; ret 0xfff1; 
0x000c5e15: add byte ptr [eax], al; add byte ptr [ebp + 0x4890140], cl; and al, 0xe8; cmp eax, 0x89fff611; ret 0x45c6; 
0x0008ab87: add byte ptr [eax], al; add byte ptr [ebp + 0xb38cbb], cl; add byte ptr [ecx + 0x28e8243c], cl; ret; 
0x000283b7: add byte ptr [eax], al; add byte ptr [ebp + 0xf0474c0], al; mov bh, 0; ret; 
0x0005bdb3: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; shld edx, eax, cl; shl eax, cl; ret; 
0x0005bd8f: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; shrd eax, edx, cl; sar edx, cl; ret; 
0x0005bcf7: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; shrd eax, edx, cl; shr edx, cl; ret; 
0x0013ef99: add byte ptr [eax], al; add byte ptr [ebp + ebx*4 + 1], ah; add ah, ah; ret 0xfff7; 
0x0013ef79: add byte ptr [eax], al; add byte ptr [ebp + ebx*4 + 1], al; add al, bl; ret 0xfff7; 
0x001088fa: add byte ptr [eax], al; add byte ptr [ebp - 0x31b377d], cl; dec dword ptr [ecx - 0x6a17dbfc]; ret 0xfff1; 
0x000488a7: add byte ptr [eax], al; add byte ptr [ebp - 0x41e337d], cl; dec dword ptr [ecx - 0x1717dbfc]; ret 0xfffd; 
0x000487dc: add byte ptr [eax], al; add byte ptr [ebp - 0x41e337d], cl; dec dword ptr [ecx - 0x4c17dbfc]; ret; 
0x0010b70d: add byte ptr [eax], al; add byte ptr [ebp - 0x77], dl; in eax, -0x18; pushfd; ret; 
0x000ca013: add byte ptr [eax], al; add byte ptr [ebx + 0x148d0fe0], al; ret 0x28b; 
0x000ed851: add byte ptr [eax], al; add byte ptr [ebx + 0x348b01c0], al; ret 0xf685; 
0x0003c413: add byte ptr [eax], al; add byte ptr [ebx + 0x39182454], cl; ret 0x860f; 
0x00036d4a: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000522a1: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b08c4], al; ret; 
0x00052183: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b0cc4], al; ret; 
0x0004ac74: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; ret; 
0x0002d62d: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000538a8: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b18c4], al; ret; 
0x000d27da: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x0004d10d: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0002ba75: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0007fc75: add byte ptr [eax], al; add byte ptr [ebx + 0x5f5b04c4], al; ret; 
0x0009dca6: add byte ptr [eax], al; add byte ptr [ebx + 0x5f5b08c4], al; ret; 
0x00080c7c: add byte ptr [eax], al; add byte ptr [ebx + 0x5f5b0cc4], al; ret; 
0x0005237c: add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x000c2711: add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e0cc4], al; ret; 
0x00086e8f: add byte ptr [eax], al; add byte ptr [ebx + 0x917c83], cl; add al, ch; ret; 
0x000cea58: add byte ptr [eax], al; add byte ptr [ebx + 0xf14247c], cl; mov dh, 0x4f; or byte ptr [eax - 0x7bf00107], al; ret 0; 
0x0008a011: add byte ptr [eax], al; add byte ptr [ebx - 0x1f45], cl; dec dword ptr [ecx - 0x5117dbc4]; ret 0xfff9; 
0x00047e51: add byte ptr [eax], al; add byte ptr [ebx - 0x73ef840], al; add edi, dword ptr [ecx]; ret 0x6472; 
0x000e3237: add byte ptr [eax], al; add byte ptr [ebx - 0x74ebdbbc], cl; inc eax; or byte ptr [ebp + 0x390874c0], al; ret 0x850f; 
0x000625fe: add byte ptr [eax], al; add byte ptr [ebx - 0x76b3dbbc], cl; ret 0x4489; 
0x000e3adb: add byte ptr [eax], al; add byte ptr [ebx - 0x76e7dbbc], cl; ret 0xea29; 
0x000af6d8: add byte ptr [eax], al; add byte ptr [ebx - 0x78f0f807], al; mov edx, 0x83000007; ret 0x8b08; 
0x000aa335: add byte ptr [eax], al; add byte ptr [ebx - 0x7ac3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x000c4d6f: add byte ptr [eax], al; add byte ptr [ebx - 0x7af0e706], al; ret 0; 
0x000f8957: add byte ptr [eax], al; add byte ptr [ebx - 0x7ccfdbac], cl; ret 0x890c; 
0x0002870d: add byte ptr [eax], al; add byte ptr [ebx - 0x7f], bl; ret; 
0x00060b4d: add byte ptr [eax], al; add byte ptr [ebx - 0xffbdbac], cl; dec dword ptr [edx]; ret; 
0x00080243: add byte ptr [eax], al; add byte ptr [ecx + 0x24548bc7], cl; adc byte ptr [ecx - 0x165a0c2a], cl; ret; 
0x00054f18: add byte ptr [eax], al; add byte ptr [ecx + 0x24548bc8], cl; sbb byte ptr [ecx - 0x7cefdbb4], cl; ret 0x8302; 
0x0009b221: add byte ptr [eax], al; add byte ptr [ecx + 0x24e82434], cl; ret; 
0x00098f63: add byte ptr [eax], al; add byte ptr [ecx + 0x42e82404], cl; ret 0xfff8; 
0x0009d3ab: add byte ptr [eax], al; add byte ptr [ecx + 0x4dd2404], cl; and al, 0xc9; ret; 
0x000ea8f7: add byte ptr [eax], al; add byte ptr [ecx + 0x5ee82434], cl; ret 0xfff3; 
0x000980df: add byte ptr [eax], al; add byte ptr [ecx + 0x6e8243c], cl; ret 0xfff8; 
0x000a0276: add byte ptr [eax], al; add byte ptr [ecx + 0x7d0fa], al; add byte ptr [ebp + edi*2 - 0x7d], dh; ret 0xeb01; 
0x00147716: add byte ptr [eax], al; add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0xa510202], al; ret; 
0x00047ff6: add byte ptr [eax], al; add byte ptr [ecx + 0xf], dh; popfd; ret 0xc283; 
0x00004339: add byte ptr [eax], al; add byte ptr [ecx + 6], bh; add byte ptr [eax], al; ret 7; 
0x000e3ec6: add byte ptr [eax], al; add byte ptr [ecx - 0x14efdb84], cl; or al, 0x89; ret 0xfad1; 
0x00047c32: add byte ptr [eax], al; add byte ptr [ecx - 0x14f3db84], cl; or al, 0x89; ret 0xfad1; 
0x000a788e: add byte ptr [eax], al; add byte ptr [ecx - 0x2817dbcc], cl; ret; 
0x000d9931: add byte ptr [eax], al; add byte ptr [ecx - 0x2b17dbfc], cl; ret; 
0x000a78b9: add byte ptr [eax], al; add byte ptr [ecx - 0x5317dbcc], cl; ret; 
0x0010887c: add byte ptr [eax], al; add byte ptr [ecx - 0x74fbdbbc], cl; inc ebp; add byte ptr [ecx + 0x42e82404], cl; ret; 
0x001087fc: add byte ptr [eax], al; add byte ptr [ecx - 0x74fbdbbc], cl; inc ebp; add byte ptr [ecx - 0x3d17dbfc], cl; ret; 
0x000b0514: add byte ptr [eax], al; add byte ptr [ecx - 0x769bdbac], cl; ret 0xb489; 
0x00062b72: add byte ptr [eax], al; add byte ptr [ecx - 0x7cff728c], cl; ret 0x8301; 
0x0005cf7f: add byte ptr [eax], al; add byte ptr [ecx], ah; ret 0xf66; 
0x0002e3a9: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0xb60f; 
0x000d8aec: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0xd201; 
0x000560c5: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1674; 
0x000560db: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x575; 
0x0003d8e6: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x830f; 
0x00056043: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x000f75c4: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xf273; 
0x0002a810: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448b; 
0x000f920f: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x458b; 
0x000f907e: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x4d8b; 
0x00044d4c: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5489; 
0x00044dd2: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x75e9; 
0x000f6eac: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x84dd; 
0x000f6fed: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xbae9; 
0x00047e81: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xbc83; 
0x00063e7b: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xc889; 
0x00063e52: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd129; 
0x00098794: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd285; 
0x0004cb27: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xea83; 
0x0004cb1b: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xfa83; 
0x00053239: add byte ptr [eax], al; add byte ptr [ecx], dh; dec dword ptr [ecx + 0xffa89f0]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x101; 
0x000519bb: add byte ptr [eax], al; add byte ptr [ecx], dh; dec dword ptr [ecx - 0x9efdb84]; ret 0xf01; 
0x000f9a23: add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [ebx - 0x76efdbb4], 0x11; ret; 
0x0005d205: add byte ptr [eax], al; add byte ptr [edi], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x0012ec69: add byte ptr [eax], al; add byte ptr [edx + ebx*4], dh; add byte ptr [eax], al; stosd dword ptr es:[edi], eax; ret; 
0x00146c41: add byte ptr [eax], al; add byte ptr [edx + ebx], cl; add al, byte ptr [eax]; ret; 
0x000062dd: add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax], cl; add byte ptr [eax + 0x78000013], al; ret 2; 
0x00008f9d: add byte ptr [eax], al; add byte ptr [edx], dl; add byte ptr [eax], cl; add byte ptr [eax - 0x4fffffed], bl; ret; 
0x000510bc: add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x000c2762: add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x00139881: add byte ptr [eax], al; add byte ptr [esi + eax*2 + 1], cl; add byte ptr [edx], ah; ret 0xfff5; 
0x000e23ff: add byte ptr [eax], al; add byte ptr [esi - 0x7d], ah; clc; add dword ptr [ebp + edi*2 - 0x18], esi; ret; 
0x0009d383: add byte ptr [eax], al; add ch, bl; add al, 0x24; leave; ret; 
0x000cb982: add byte ptr [eax], al; add ch, cl; xor byte ptr [edx - 0x29], 0x4a; and eax, edx; ret; 
0x000996ed: add byte ptr [eax], al; add cl, ch; ret 0xfff2; 
0x000b07cb: add byte ptr [eax], al; add cl, ch; ret 0xfff3; 
0x00081169: add byte ptr [eax], al; add cl, ch; ret 0xfffb; 
0x00030aa9: add byte ptr [eax], al; add cl, ch; ret 0xfffc; 
0x00045379: add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x000385f3: add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x000af01a: add byte ptr [eax], al; add cl, ch; ret; 
0x0004e0cf: add byte ptr [eax], al; add cl, cl; ret; 
0x00051a6b: add byte ptr [eax], al; add dh, dh; ret 0xf01; 
0x0000577e: add byte ptr [eax], al; add dword ptr [0x4ad0000], eax; add byte ptr [eax], al; ret 5; 
0x0009b195: add byte ptr [eax], al; add eax, dword ptr [eax]; add byte ptr [eax], al; pop ebx; ret; 
0x0010a663: add byte ptr [eax], al; add ecx, 0x46a1f; mov eax, dword ptr [ecx - 0x2ec]; mov eax, dword ptr [eax]; ret; 
0x00031496: add byte ptr [eax], al; add esp, 0x10; pop ebx; pop esi; ret; 
0x00036fc7: add byte ptr [eax], al; add esp, 0x10; pop ebx; ret; 
0x000c2a27: add byte ptr [eax], al; add esp, 0x10; pop esi; ret; 
0x0002d62e: add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x00036fa6: add byte ptr [eax], al; add esp, 0x14; pop ebx; ret; 
0x0003ef3d: add byte ptr [eax], al; add esp, 0x18; pop ebx; pop esi; ret; 
0x000c5479: add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00108ba3: add byte ptr [eax], al; add esp, 0x1c; pop ebx; pop esi; ret; 
0x000d27db: add byte ptr [eax], al; add esp, 0x24; pop ebx; pop esi; ret; 
0x00066c53: add byte ptr [eax], al; add esp, 0x24; pop ebx; ret; 
0x000439e1: add byte ptr [eax], al; add esp, 0x38; pop ebx; pop esi; ret; 
0x00080c7d: add byte ptr [eax], al; add esp, 0xc; pop ebx; pop edi; ret; 
0x00052184: add byte ptr [eax], al; add esp, 0xc; pop ebx; pop esi; ret; 
0x00028559: add byte ptr [eax], al; add esp, 0xc; pop ebx; ret; 
0x000c2712: add byte ptr [eax], al; add esp, 0xc; pop esi; pop edi; ret; 
0x000370c5: add byte ptr [eax], al; add esp, 0xc; ret; 
0x0007fc76: add byte ptr [eax], al; add esp, 4; pop ebx; pop edi; ret; 
0x00036d4b: add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x0002bbd5: add byte ptr [eax], al; add esp, 4; pop ebx; ret; 
0x0005237d: add byte ptr [eax], al; add esp, 4; pop esi; pop edi; ret; 
0x00052324: add byte ptr [eax], al; add esp, 4; pop esi; ret; 
0x0009dca7: add byte ptr [eax], al; add esp, 8; pop ebx; pop edi; ret; 
0x000522a2: add byte ptr [eax], al; add esp, 8; pop ebx; pop esi; ret; 
0x00037a87: add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x000617b0: add byte ptr [eax], al; add esp, 8; pop esi; ret; 
0x00005d26: add byte ptr [eax], al; and al, 0x9c; adc byte ptr [eax], al; ret 0; 
0x0000f94e: add byte ptr [eax], al; and al, byte ptr [eax]; or byte ptr [eax], al; ret 0x1f; 
0x00013b4e: add byte ptr [eax], al; and al, byte ptr [eax]; or byte ptr [eax], al; ret 0x29; 
0x000104fe: add byte ptr [eax], al; and al, byte ptr [eax]; or byte ptr [eax], al; ret 0x34; 
0x00006b1e: add byte ptr [eax], al; and al, byte ptr [eax]; or byte ptr [eax], al; ret 0x38; 
0x0001295e: add byte ptr [eax], al; and al, byte ptr [eax]; or byte ptr [eax], al; ret 0x41; 
0x0000c97e: add byte ptr [eax], al; and al, byte ptr [eax]; or byte ptr [eax], al; ret 0x64; 
0x000089be: add byte ptr [eax], al; and al, byte ptr [eax]; or byte ptr [eax], al; ret; 
0x001315c6: add byte ptr [eax], al; and byte ptr [eax], al; add byte ptr [eax], al; xchg eax, esp; ret; 
0x00001fde: add byte ptr [eax], al; and byte ptr [ebx], cl; add byte ptr [eax], al; ret; 
0x000315aa: add byte ptr [eax], al; and eax, 0x7fffffff; ret; 
0x00050b26: add byte ptr [eax], al; call 0x23400; add esp, 0xc; pop ebx; ret; 
0x000891bd: add byte ptr [eax], al; call 0x23b00; add esp, 0x14; pop ebx; ret; 
0x00089302: add byte ptr [eax], al; call 0x23b00; add esp, 0x18; pop ebx; ret; 
0x000829a8: add byte ptr [eax], al; call 0x23b00; add esp, 0x20; pop ebx; ret; 
0x0008590b: add byte ptr [eax], al; call 0x23b00; add esp, 0x3c; pop ebx; ret; 
0x000912e8: add byte ptr [eax], al; call 0x23bf0; add esp, 0x18; pop ebx; ret; 
0x0009f02c: add byte ptr [eax], al; call 0x240f0; add esp, 0x14; pop ebx; ret; 
0x0010b593: add byte ptr [eax], al; call 0x242b0; pop ebx; ret; 
0x000334dd: add byte ptr [eax], al; call 0x24380; add esp, 8; pop ebx; ret; 
0x00029d54: add byte ptr [eax], al; call 0x25400; add esp, 0xc; pop ebx; ret; 
0x0009f079: add byte ptr [eax], al; call 0x25ae0; add esp, 0x18; pop ebx; ret; 
0x0002a023: add byte ptr [eax], al; call 0x25ef0; add esp, 4; pop ebx; ret; 
0x0002a366: add byte ptr [eax], al; call 0x260e0; add esp, 0x20; pop ebx; ret; 
0x0005d6f8: add byte ptr [eax], al; call 0x26640; add esp, 4; pop ebx; ret; 
0x0004fcc8: add byte ptr [eax], al; call 0x274f0; add esp, 0x1c; pop ebx; ret; 
0x000ecaa5: add byte ptr [eax], al; call 0x27940; add esp, 0x18; pop ebx; ret; 
0x000644c5: add byte ptr [eax], al; call 0x63ffe; add esp, 0x10; ret; 
0x000a2c40: add byte ptr [eax], al; call 0xa2529; add esp, 0x10; ret; 
0x000d28f3: add byte ptr [eax], al; call 0xd2790; add esp, 0x18; pop ebx; ret; 
0x00141592: add byte ptr [eax], al; cmp al, 0; add byte ptr [eax], al; pushal; ret; 
0x00008a66: add byte ptr [eax], al; cmpsb byte ptr [esi], byte ptr es:[edi]; ret 9; 
0x00141582: add byte ptr [eax], al; dec esp; ret; 
0x0000b786: add byte ptr [eax], al; fdiv st(0); add eax, dword ptr [eax]; ret 1; 
0x000041da: add byte ptr [eax], al; fiadd dword ptr [edi]; add byte ptr [eax], al; ret; 
0x0009d384: add byte ptr [eax], al; fld qword ptr [esp]; leave; ret; 
0x00137e1a: add byte ptr [eax], al; in al, 0x2b; add dword ptr [eax], eax; ret 0xf54e; 
0x00001f46: add byte ptr [eax], al; in al, 0xd; add byte ptr [eax], al; ret 0xd; 
0x00000a7a: add byte ptr [eax], al; inc byte ptr [ebx]; add byte ptr [eax], al; ret; 
0x000983f0: add byte ptr [eax], al; inc eax; add byte ptr [ebp - 0x3784c7d], cl; dec dword ptr [ecx + 0x4ee82404]; ret; 
0x000683e3: add byte ptr [eax], al; inc eax; add byte ptr [ebp - 0x3784c7d], cl; dec dword ptr [ecx + 0x5be82404]; ret; 
0x00098347: add byte ptr [eax], al; inc eax; add byte ptr [ebp - 0x3784c7d], cl; dec dword ptr [ecx - 0x817dbfc]; ret; 
0x0011face: add byte ptr [eax], al; inc eax; ret; 
0x0011fad6: add byte ptr [eax], al; inc ebx; ret; 
0x00147717: add byte ptr [eax], al; inc ecx; push cs; or byte ptr [ebx + 0xa510202], al; ret; 
0x0013162a: add byte ptr [eax], al; inc esp; add byte ptr [eax], al; add al, bh; ret; 
0x00141602: add byte ptr [eax], al; inc esp; add byte ptr [eax], al; add al, dl; ret; 
0x00006226: add byte ptr [eax], al; inc esp; ret 9; 
0x000286e3: add byte ptr [eax], al; int 0x80; ret; 
0x00047ff7: add byte ptr [eax], al; jno 0x4800a; popfd; ret 0xc283; 
0x0000433a: add byte ptr [eax], al; jns 0x4344; add byte ptr [eax], al; ret 7; 
0x00012586: add byte ptr [eax], al; jo 0x12583; add al, byte ptr [eax]; ret 0; 
0x0006a7a1: add byte ptr [eax], al; lea eax, dword ptr [ebx + 0x829c]; add esp, 4; pop ebx; ret; 
0x00002f02: add byte ptr [eax], al; lea eax, dword ptr [edx]; add byte ptr [eax], al; ret 0; 
0x00004bd2: add byte ptr [eax], al; lea ecx, dword ptr [eax]; add byte ptr [eax], al; ret; 
0x0002df88: add byte ptr [eax], al; lea edi, dword ptr [edi]; ret; 
0x00060c1e: add byte ptr [eax], al; lock add dword ptr [esp - 4], 0; ret; 
0x00060ec3: add byte ptr [eax], al; lock dec dword ptr [ecx]; ret 0x5489; 
0x00060b87: add byte ptr [eax], al; lock xadd dword ptr [edx], eax; inc eax; ret; 
0x0013eeea: add byte ptr [eax], al; mov ah, 0x9c; add dword ptr [eax], eax; ret; 
0x001329ea: add byte ptr [eax], al; mov ah, 0xd7; add byte ptr [eax], al; ret 0xf3ae; 
0x001497e6: add byte ptr [eax], al; mov al, 0x45; add al, byte ptr [eax]; ret 0xfab4; 
0x00120826: add byte ptr [eax], al; mov al, 0x9e; dec eax; ret 0; 
0x000107d6: add byte ptr [eax], al; mov cl, 0x5c; add eax, dword ptr [eax]; ret 0; 
0x0003707b: add byte ptr [eax], al; mov dword ptr [eax + 0x10], 0; ret; 
0x0006aca9: add byte ptr [eax], al; mov dword ptr [eax + 0x1d4], edx; pop ebx; ret; 
0x0004fa8d: add byte ptr [eax], al; mov dword ptr [eax + 0xc], 0; xor eax, eax; ret; 
0x000ab786: add byte ptr [eax], al; mov dword ptr [eax + 0xc], 0; ret; 
0x0004fa86: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 0xc], 0; xor eax, eax; ret; 
0x000ab77f: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 0xc], 0; ret; 
0x000a9535: add byte ptr [eax], al; mov dword ptr [ebx + 0x2460], ecx; pop ebx; pop esi; ret; 
0x0005b6cc: add byte ptr [eax], al; mov dword ptr [ebx + 0x7ee4], eax; add esp, 4; pop ebx; ret; 
0x0005b675: add byte ptr [eax], al; mov dword ptr [ebx + 0x7eec], eax; add esp, 4; pop ebx; ret; 
0x000315a4: add byte ptr [eax], al; mov dword ptr [ecx + 0x1314], eax; and eax, 0x7fffffff; ret; 
0x0005ab1a: add byte ptr [eax], al; mov dword ptr [ecx + 0x7f00], edi; pop esi; pop edi; ret; 
0x0010491f: add byte ptr [eax], al; mov dword ptr [edx + 0x1c0], esi; pop esi; ret; 
0x00104919: add byte ptr [eax], al; mov dword ptr [edx + 0x1c4], esi; mov dword ptr [edx + 0x1c0], esi; pop esi; ret; 
0x000617a9: add byte ptr [eax], al; mov dword ptr [esi + 0x10], 0x1c20; add esp, 8; pop esi; ret; 
0x0009d3ac: add byte ptr [eax], al; mov dword ptr [esp], eax; fld qword ptr [esp]; leave; ret; 
0x0004fcdd: add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 0x1c; pop ebx; ret; 
0x00102e4c: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0002a24f: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x00096277: add byte ptr [eax], al; mov eax, 1; add esp, 4; pop ebx; ret; 
0x00066c4e: add byte ptr [eax], al; mov eax, 3; add esp, 0x24; pop ebx; ret; 
0x000ead80: add byte ptr [eax], al; mov eax, dword ptr [eax + 0xca4]; mov edx, dword ptr [esp + 4]; movsx eax, word ptr [eax + edx*2 + 2]; ret; 
0x000ead49: add byte ptr [eax], al; mov eax, dword ptr [eax + 0xca8]; mov edx, dword ptr [esp + 4]; movsx eax, word ptr [eax + edx*2 + 2]; ret; 
0x000d2a3c: add byte ptr [eax], al; mov eax, dword ptr [ecx + eax*4 - 0x28a4]; ret; 
0x0009c6cc: add byte ptr [eax], al; mov eax, dword ptr [edx + eax*4]; add esp, 8; pop ebx; ret; 
0x000437c9: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x20]; add esp, 0x24; pop ebx; ret; 
0x000f9a97: add byte ptr [eax], al; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x0005cab5: add byte ptr [eax], al; mov eax, edi; pop esi; pop edi; ret; 
0x00120836: add byte ptr [eax], al; mov ebx, 0x4cfff2b3; ret; 
0x0006114e: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000f9a16: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov dword ptr [ecx], edx; ret; 
0x00051e47: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x000e88fe: add byte ptr [eax], al; mov edx, dword ptr [ecx - 0x40]; mov dword ptr [edx], eax; ret; 
0x00109380: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x10]; mov dword ptr [eax + 0x424], edx; ret; 
0x00060b4e: add byte ptr [eax], al; mov edx, dword ptr [esp + 4]; lock dec dword ptr [edx]; ret; 
0x00060bbe: add byte ptr [eax], al; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [esp + 8]; xchg dword ptr [edx], eax; ret; 
0x000ead4f: add byte ptr [eax], al; mov edx, dword ptr [esp + 4]; movsx eax, word ptr [eax + edx*2 + 2]; ret; 
0x000eaa6f: add byte ptr [eax], al; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2 + 2]; and eax, 1; ret; 
0x000eaa32: add byte ptr [eax], al; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2 + 2]; and eax, 5; ret; 
0x00146c42: add byte ptr [eax], al; or al, 0x1a; add al, byte ptr [eax]; ret; 
0x0004e387: add byte ptr [eax], al; or byte ptr [eax], al; add esp, 4; pop ebx; ret; 
0x0005c911: add byte ptr [eax], al; or byte ptr [ecx + 0x4d92404], 0x24; add esp, 4; ret; 
0x0005c934: add byte ptr [eax], al; or byte ptr [ecx - 0x22fbdbbc], 4; and al, 0xc9; ret; 
0x0004e383: add byte ptr [eax], al; or dword ptr [edx], 0x80000; add esp, 4; pop ebx; ret; 
0x0000068e: add byte ptr [eax], al; or word ptr [eax], ax; add byte ptr [ebx + ecx + 0x2590000], al; add byte ptr [eax], al; ret; 
0x00011416: add byte ptr [eax], al; outsb dx, byte ptr [esi]; ret 9; 
0x0000540e: add byte ptr [eax], al; pop dword ptr [eax]; add byte ptr [eax], al; ret 4; 
0x0012082e: add byte ptr [eax], al; pop eax; lahf; dec dword ptr [eax]; ret; 
0x000325e5: add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0002ba76: add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0002b834: add byte ptr [eax], al; pop ebx; ret; 
0x000510bd: add byte ptr [eax], al; pop esi; pop edi; pop ebp; ret; 
0x0005ab20: add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0005bc9a: add byte ptr [eax], al; pop esi; ret; 
0x00141492: add byte ptr [eax], al; pop esp; ret 1; 
0x0012081e: add byte ptr [eax], al; push 0xa4fff29e; ret 0; 
0x00120306: add byte ptr [eax], al; push ds; ret; 
0x00131586: add byte ptr [eax], al; push eax; ret; 
0x00002f06: add byte ptr [eax], al; ret 0; 
0x00113735: add byte ptr [eax], al; ret 0x6741; 
0x00006a46: add byte ptr [eax], al; ret 0x9d0; 
0x000050be: add byte ptr [eax], al; ret 0xa; 
0x0000d706: add byte ptr [eax], al; ret 0xa96; 
0x00005392: add byte ptr [eax], al; ret 0xb; 
0x000010c2: add byte ptr [eax], al; ret 0xc; 
0x00009116: add byte ptr [eax], al; ret 0xcf6; 
0x00001f4a: add byte ptr [eax], al; ret 0xd; 
0x00010936: add byte ptr [eax], al; ret 0xda1; 
0x00005cb6: add byte ptr [eax], al; ret 0xea5; 
0x0012e3ae: add byte ptr [eax], al; ret 0xf2a8; 
0x0012fb9e: add byte ptr [eax], al; ret 0xf2fe; 
0x001329ee: add byte ptr [eax], al; ret 0xf3ae; 
0x00002de2: add byte ptr [eax], al; ret 1; 
0x00003ab6: add byte ptr [eax], al; ret 2; 
0x00004ab2: add byte ptr [eax], al; ret 3; 
0x00005412: add byte ptr [eax], al; ret 4; 
0x00005786: add byte ptr [eax], al; ret 5; 
0x00004876: add byte ptr [eax], al; ret 6; 
0x0000433e: add byte ptr [eax], al; ret 7; 
0x00005342: add byte ptr [eax], al; ret 8; 
0x00004aca: add byte ptr [eax], al; ret 9; 
0x001397f6: add byte ptr [eax], al; rol byte ptr [ebp + 1], 0; ret; 
0x0005c8bb: add byte ptr [eax], al; sar eax, cl; and eax, 1; ret; 
0x000f7231: add byte ptr [eax], al; sar eax, cl; and eax, 3; ret; 
0x00131582: add byte ptr [eax], al; sbb al, 0; add byte ptr [eax], al; push eax; ret; 
0x0013ed4e: add byte ptr [eax], al; sbb byte ptr [ebx - 0x4904ffff], bl; idiv edi; ret; 
0x0005d1a9: add byte ptr [eax], al; shl eax, cl; ret; 
0x0012ec6e: add byte ptr [eax], al; stosd dword ptr es:[edi], eax; ret; 
0x0005d1b1: add byte ptr [eax], al; sub ecx, edx; shr eax, cl; ret; 
0x0013fade: add byte ptr [eax], al; test al, 0xa8; add dword ptr [eax], eax; ret; 
0x00141ede: add byte ptr [eax], al; test al, 0xcc; add dword ptr [eax], eax; ret; 
0x0000c306: add byte ptr [eax], al; xchg eax, edx; test byte ptr [edi], 0; ret; 
0x001414ca: add byte ptr [eax], al; xchg eax, esp; ret 1; 
0x00007b86: add byte ptr [eax], al; xchg eax, esp; ret; 
0x001414c6: add byte ptr [eax], al; xor al, 0; add byte ptr [eax], al; xchg eax, esp; ret 1; 
0x0012ec6a: add byte ptr [eax], al; xor al, 0x9a; add byte ptr [eax], al; stosd dword ptr es:[edi], eax; ret; 
0x00139966: add byte ptr [eax], al; xor byte ptr [edi + 1], al; add byte ptr [esi], dh; ret; 
0x0004e0c8: add byte ptr [eax], al; xor byte ptr [edi + eax - 0x48], 1; add byte ptr [eax], al; add cl, cl; ret; 
0x0005c8d9: add byte ptr [eax], al; xor byte ptr [edi + eax - 9], 0xd8; add esp, 0xc; pop ebx; ret; 
0x0012083e: add byte ptr [eax], al; xor eax, 0x7cfff2b4; ret; 
0x000333af: add byte ptr [eax], al; xor eax, eax; add esp, 0x10; pop ebx; ret; 
0x00101519: add byte ptr [eax], al; xor eax, eax; add esp, 0x14; pop ebx; ret; 
0x0009c911: add byte ptr [eax], al; xor eax, eax; add esp, 0xc; pop ebx; ret; 
0x0008f664: add byte ptr [eax], al; xor eax, eax; add esp, 4; pop ebx; ret; 
0x000f9a24: add byte ptr [eax], al; xor eax, eax; mov ecx, dword ptr [esp + 0x10]; mov dword ptr [ecx], edx; ret; 
0x0008a1c9: add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x0002bb60: add byte ptr [eax], al; xor eax, eax; pop esi; ret; 
0x0002bb0c: add byte ptr [eax], al; xor eax, eax; ret; 
0x0005a9ed: add byte ptr [eax], al; xor edx, edx; pop ebp; ret; 
0x0013162e: add byte ptr [eax], al; clc; ret; 
0x000050ba: add byte ptr [eax], al; cwde; pop es; add byte ptr [eax], al; ret 0xa; 
0x00022fc6: add byte ptr [eax], al; leave; ret; 
0x0011faa6: add byte ptr [eax], al; popfd; ret 0xfff0; 
0x00013c76: add byte ptr [eax], al; pushal; ret; 
0x001259d2: add byte ptr [eax], al; pushfd; pop es; add byte ptr [eax], al; ret; 
0x001314d2: add byte ptr [eax], al; pushfd; ret 0; 
0x0000069a: add byte ptr [eax], al; ret; 
0x0011fab6: add byte ptr [eax], al; xlatb; ret 0xfff0; 
0x0000538b: add byte ptr [eax], bh; or dword ptr [eax], eax; add byte ptr [eax + 0xb], cl; add byte ptr [eax], al; ret 0xb; 
0x0001295b: add byte ptr [eax], ch; add byte ptr [eax], al; and al, byte ptr [eax]; or byte ptr [eax], al; ret 0x41; 
0x00139963: add byte ptr [eax], ch; add byte ptr [eax], al; xor byte ptr [edi + 1], al; add byte ptr [esi], dh; ret; 
0x000206cf: add byte ptr [eax], ch; unpckhps xmm0, xmmword ptr [eax]; push es; ret 8; 
0x00012581: add byte ptr [eax], cl; add ah, ch; adc eax, 0xf9700000; add al, byte ptr [eax]; ret 0; 
0x000062e1: add byte ptr [eax], cl; add byte ptr [eax + 0x78000013], al; ret 2; 
0x00009251: add byte ptr [eax], cl; add byte ptr [eax + ebx*2], bh; add byte ptr [ebx - 0x1c], bl; or byte ptr [eax], al; ret 3; 
0x00008fa1: add byte ptr [eax], cl; add byte ptr [eax - 0x4fffffed], bl; ret; 
0x00013c71: add byte ptr [eax], cl; add byte ptr [ecx + 0x60000013], dl; ret; 
0x00012a31: add byte ptr [eax], cl; add byte ptr [esi + edi], ch; add byte ptr [eax], al; ret; 
0x00010127: add byte ptr [eax], cl; ret; 
0x0005014f: add byte ptr [eax], dh; shr cl, cl; and eax, 0x90fffffe; ret; 
0x0012287f: add byte ptr [eax], dl; ret 0xfff7; 
0x00057a88: add byte ptr [ebp + 0x18840fc9], al; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x0010b470: add byte ptr [ebp + 0x235483], cl; add byte ptr [ecx + 0x21e82404], cl; ret 0xfff1; 
0x00104e52: add byte ptr [ebp + 0x3938247c], cl; ret 0x6677; 
0x000c5e17: add byte ptr [ebp + 0x4890140], cl; and al, 0xe8; cmp eax, 0x89fff611; ret 0x45c6; 
0x000d11ca: add byte ptr [ebp + 0x50674c0], al; sub byte ptr [ebx], al; add byte ptr [eax], al; ret; 
0x0004e17e: add byte ptr [ebp + 0x5e5bf865], cl; pop ebp; ret; 
0x00084161: add byte ptr [ebp + 0x9a0c83], cl; add al, ch; ret; 
0x0008544a: add byte ptr [ebp + 0x9e6c83], cl; add al, ch; mov byte ptr [0x31fffff6], al; rol byte ptr [ebx - 0x6bf0fe08], cl; ret 0x1689; 
0x0008ab89: add byte ptr [ebp + 0xb38cbb], cl; add byte ptr [ecx + 0x28e8243c], cl; ret; 
0x0000565f: add byte ptr [ebp + 0xb], ah; add byte ptr [eax], al; ret; 
0x000283b9: add byte ptr [ebp + 0xf0474c0], al; mov bh, 0; ret; 
0x0005a1bd: add byte ptr [ebp + 5], dh; add esp, 8; pop ebx; ret; 
0x0005bdb5: add byte ptr [ebp + 6], dh; shld edx, eax, cl; shl eax, cl; ret; 
0x0005bd91: add byte ptr [ebp + 6], dh; shrd eax, edx, cl; sar edx, cl; ret; 
0x0005bcf9: add byte ptr [ebp + 6], dh; shrd eax, edx, cl; shr edx, cl; ret; 
0x000ea136: add byte ptr [ebp + ebx - 0x7d], dh; ret 0x8001; 
0x0013ef9b: add byte ptr [ebp + ebx*4 + 1], ah; add ah, ah; ret 0xfff7; 
0x0013ef7b: add byte ptr [ebp + ebx*4 + 1], al; add al, bl; ret 0xfff7; 
0x0002034f: add byte ptr [ebp + ecx + 0x15], bh; add byte ptr [esi], al; mov bh, 1; add byte ptr [eax + 0x600150d], al; ret 1; 
0x000a027e: add byte ptr [ebp + edi*2 - 0x7d], dh; ret 0xeb01; 
0x000213df: add byte ptr [ebp + edx + 0x15], dl; add byte ptr [edi], al; ret 3; 
0x001088fc: add byte ptr [ebp - 0x31b377d], cl; dec dword ptr [ecx - 0x6a17dbfc]; ret 0xfff1; 
0x000983f3: add byte ptr [ebp - 0x3784c7d], cl; dec dword ptr [ecx + 0x4ee82404]; ret; 
0x000683e6: add byte ptr [ebp - 0x3784c7d], cl; dec dword ptr [ecx + 0x5be82404]; ret; 
0x0009834a: add byte ptr [ebp - 0x3784c7d], cl; dec dword ptr [ecx - 0x817dbfc]; ret; 
0x0008893a: add byte ptr [ebp - 0x3cd237d], cl; dec dword ptr [ecx + 0x57e82404]; ret 0xfff9; 
0x0008890b: add byte ptr [ebp - 0x3cd237d], cl; dec dword ptr [ecx - 0x7917dbfc]; ret 0xfff9; 
0x000688e2: add byte ptr [ebp - 0x3fb857d], cl; dec dword ptr [ecx - 0x5017dbfc]; ret 0xfffb; 
0x000488a9: add byte ptr [ebp - 0x41e337d], cl; dec dword ptr [ecx - 0x1717dbfc]; ret 0xfffd; 
0x000487de: add byte ptr [ebp - 0x41e337d], cl; dec dword ptr [ecx - 0x4c17dbfc]; ret; 
0x000fcf48: add byte ptr [ebp - 0x74348a13], al; xchg eax, ecx; add dword ptr [eax], eax; add byte ptr [ebx + 0x29102454], cl; ret 0x5489; 
0x000565f8: add byte ptr [ebp - 0x76368b40], al; ret 0xf089; 
0x000f4d9d: add byte ptr [ebp - 0x76f98b37], al; mov bl, byte ptr [ecx + eax]; add byte ptr [eax], al; ret; 
0x0010b70f: add byte ptr [ebp - 0x77], dl; in eax, -0x18; pushfd; ret; 
0x00047e4b: add byte ptr [ebp - 0x7b71f040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x73ef840], al; add edi, dword ptr [ecx]; ret 0x6472; 
0x0006403d: add byte ptr [ebp - 0x7ee18b2e], al; ret 0x3724; 
0x000a256d: add byte ptr [ebp - 0x7ee18b2e], al; ret 0x5664; 
0x000139ab: add byte ptr [ebp], al; add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x47; 
0x00007c1b: add byte ptr [ebp], dh; add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x49; 
0x000a87f8: add byte ptr [ebx + 0x1482454], cl; ret 0xfa21; 
0x000ca015: add byte ptr [ebx + 0x148d0fe0], al; ret 0x28b; 
0x000fcf52: add byte ptr [ebx + 0x29102454], cl; ret 0x5489; 
0x000e4052: add byte ptr [ebx + 0x292c2444], cl; ret 0x9439; 
0x000c876f: add byte ptr [ebx + 0x2bf883], cl; add byte ptr [ecx - 0x2d17dbfc], cl; ret; 
0x00063d03: add byte ptr [ebx + 0x33102444], cl; xchg dword ptr [eax], ebp; cmp dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x4975; 
0x000ed853: add byte ptr [ebx + 0x348b01c0], al; ret 0xf685; 
0x0003c415: add byte ptr [ebx + 0x39182454], cl; ret 0x860f; 
0x0005c053: add byte ptr [ebx + 0x458b0875], cl; or al, 0x89; ret 0x4489; 
0x0009099d: add byte ptr [ebx + 0x48d0440], cl; ret 0x8389; 
0x00120837: add byte ptr [ebx + 0x4cfff2b3], bh; ret; 
0x0003249b: add byte ptr [ebx + 0x5e5b04c4], al; pop edi; ret; 
0x00036d4c: add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0005ab8d: add byte ptr [ebx + 0x5e5b08c4], al; pop edi; ret; 
0x000522a3: add byte ptr [ebx + 0x5e5b08c4], al; ret; 
0x000c5294: add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; ret; 
0x00052185: add byte ptr [ebx + 0x5e5b0cc4], al; ret; 
0x0002dd1b: add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x00031497: add byte ptr [ebx + 0x5e5b10c4], al; ret; 
0x0002d1a5: add byte ptr [ebx + 0x5e5b14c4], al; pop edi; ret; 
0x0002d62f: add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0003ef3e: add byte ptr [ebx + 0x5e5b18c4], al; ret; 
0x00108ba4: add byte ptr [ebx + 0x5e5b1cc4], al; ret; 
0x000bb1e9: add byte ptr [ebx + 0x5e5b24c4], al; pop edi; ret; 
0x000d27dc: add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x000964ef: add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x00028281: add byte ptr [ebx + 0x5e5b34c4], al; pop edi; ret; 
0x000439e2: add byte ptr [ebx + 0x5e5b38c4], al; ret; 
0x00083eeb: add byte ptr [ebx + 0x5e5b44c4], al; pop edi; ret; 
0x00029ed4: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000325e6: add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0002ba77: add byte ptr [ebx + 0x5e], bl; ret; 
0x0007fc77: add byte ptr [ebx + 0x5f5b04c4], al; ret; 
0x0009dca8: add byte ptr [ebx + 0x5f5b08c4], al; ret; 
0x00080c7e: add byte ptr [ebx + 0x5f5b0cc4], al; ret; 
0x000500e3: add byte ptr [ebx + 0x5f5e01c4], al; pop ebp; ret; 
0x000f999a: add byte ptr [ebx + 0x5f5e04c4], al; pop ebp; ret; 
0x0005237e: add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x000c0eca: add byte ptr [ebx + 0x5f5e08c4], al; pop ebp; ret; 
0x000616e6: add byte ptr [ebx + 0x5f5e0cc4], al; pop ebp; ret; 
0x000c2713: add byte ptr [ebx + 0x5f5e0cc4], al; ret; 
0x000f859d: add byte ptr [ebx + 0x5f5e10c4], al; pop ebp; ret; 
0x000513b7: add byte ptr [ebx + 0x5f5e24c4], al; pop ebp; ret; 
0x00086e91: add byte ptr [ebx + 0x917c83], cl; add al, ch; ret; 
0x0005d19f: add byte ptr [ebx + 0x97e17fa], al; sub ecx, 0x96; shl eax, cl; ret; 
0x000a6037: add byte ptr [ebx + 0xa763ff8], al; mov eax, 0x22; add esp, 0x10; pop ebx; ret; 
0x0010192a: add byte ptr [ebx + 0xc74fffe], al; mov eax, esi; pop ebx; pop esi; ret; 
0x00055195: add byte ptr [ebx + 0xf102444], cl; test dword ptr [ecx - 0x18000000], ebx; ret; 
0x000cea5a: add byte ptr [ebx + 0xf14247c], cl; mov dh, 0x4f; or byte ptr [eax - 0x7bf00107], al; ret 0; 
0x000b5c67: add byte ptr [ebx + 0xf3c2454], cl; mov gs, word ptr [ebx]; add dword ptr [eax], eax; add byte ptr [ebx - 0x7cd7dbac], cl; ret 0x8331; 
0x0014304c: add byte ptr [ebx + eax], 0xbe; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00123be7: add byte ptr [ebx + ebp + 0x37b0fffb], cl; add al, byte ptr [eax]; ret; 
0x000107d3: add byte ptr [ebx + ebx + 0x5cb10000], cl; add eax, dword ptr [eax]; ret 0; 
0x000b2d22: add byte ptr [ebx + ebx*2], al; pop esi; pop edi; ret; 
0x00000693: add byte ptr [ebx + ecx + 0x2590000], al; add byte ptr [eax], al; ret; 
0x000e88da: add byte ptr [ebx - 0x10f7f], cl; inc dword ptr [0x1c0]; ret; 
0x00009257: add byte ptr [ebx - 0x1c], bl; or byte ptr [eax], al; ret 3; 
0x000e951b: add byte ptr [ebx - 0x1d3ec01e], al; or byte ptr [edi], cl; mov dh, 0x46; add dword ptr [ecx], ecx; ret 0x543b; 
0x0008a013: add byte ptr [ebx - 0x1f45], cl; dec dword ptr [ecx - 0x5117dbc4]; ret 0xfff9; 
0x0005a1ae: add byte ptr [ebx - 0x21b7d], cl; dec dword ptr [ebx + 0x74c08500]; add eax, 0x75003880; add eax, 0x5b08c483; ret; 
0x000768a6: add byte ptr [ebx - 0x30375], cl; lcall ptr [ebx - 1]; loope 0x76869; ret; 
0x00076aa6: add byte ptr [ebx - 0x30375], cl; lcall ptr [ebx - 1]; loope 0x76a69; ret 1; 
0x00092436: add byte ptr [ebx - 0x30375], cl; lcall ptr [ebx - 1]; loope 0x923f9; ret; 
0x000cb936: add byte ptr [ebx - 0x30375], cl; lcall ptr [ebx - 1]; loope 0xcb8f9; ret 0; 
0x000c77c5: add byte ptr [ebx - 0x358af608], al; lea eax, dword ptr [ebx - 0x38580]; pop ebx; ret; 
0x0004e29c: add byte ptr [ebx - 0x3fe6fe06], al; not eax; add eax, 4; ret; 
0x00057532: add byte ptr [ebx - 0x41f0fd39], al; ret 0x4489; 
0x0002bb1b: add byte ptr [ebx - 0x72fbdbbc], cl; add al, 0x40; mov eax, dword ptr [ecx + eax*4 + 0x367c]; ret; 
0x00047e53: add byte ptr [ebx - 0x73ef840], al; add edi, dword ptr [ecx]; ret 0x6472; 
0x000e3239: add byte ptr [ebx - 0x74ebdbbc], cl; inc eax; or byte ptr [ebp + 0x390874c0], al; ret 0x850f; 
0x00060bbf: add byte ptr [ebx - 0x74fbdbac], cl; inc esp; and al, 8; xchg dword ptr [edx], eax; ret; 
0x00062600: add byte ptr [ebx - 0x76b3dbbc], cl; ret 0x4489; 
0x0006729a: add byte ptr [ebx - 0x76dbdbbc], cl; ret 0xe283; 
0x000e3add: add byte ptr [ebx - 0x76e7dbbc], cl; ret 0xea29; 
0x00109381: add byte ptr [ebx - 0x76efdbac], cl; nop; and al, 4; add byte ptr [eax], al; ret; 
0x00051e48: add byte ptr [ebx - 0x76f3dbb4], cl; add dword ptr [eax + 1], edi; ret; 
0x000af6da: add byte ptr [ebx - 0x78f0f807], al; mov edx, 0x83000007; ret 0x8b08; 
0x000aa337: add byte ptr [ebx - 0x7ac3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x00042511: add byte ptr [ebx - 0x7acbdb8c], cl; test byte ptr [edi], 0x84; ret; 
0x0007fecf: add byte ptr [ebx - 0x7adbdb8c], cl; test byte ptr [edi], 0x84; add dword ptr [eax], 0x3d8d0000; ret 0x8b; 
0x0002c233: add byte ptr [ebx - 0x7ae3db8c], cl; div byte ptr [ecx + ecx - 0x75]; inc esi; sub byte ptr [ebx + 0x5e5b10c4], al; ret; 
0x000c4d71: add byte ptr [ebx - 0x7af0e706], al; ret 0; 
0x000a8747: add byte ptr [ebx - 0x7bf00008], al; add al, byte ptr [eax]; add byte ptr [ecx - 0x817dbfc], cl; ret; 
0x000ced50: add byte ptr [ebx - 0x7bf0fd1b], al; ret; 
0x00069ff2: add byte ptr [ebx - 0x7bf0fe08], al; ret 2; 
0x000725b7: add byte ptr [ebx - 0x7bf0fe08], al; ret; 
0x00030fdc: add byte ptr [ebx - 0x7cc7dbac], cl; ret 0x8b01; 
0x000f8959: add byte ptr [ebx - 0x7ccfdbac], cl; ret 0x890c; 
0x000b5c71: add byte ptr [ebx - 0x7cd7dbac], cl; ret 0x8331; 
0x000b5381: add byte ptr [ebx - 0x7cd7dbac], cl; ret 0xc731; 
0x0005b907: add byte ptr [ebx - 0x7cdfdbac], cl; ret 0x8901; 
0x0002870f: add byte ptr [ebx - 0x7f], bl; ret; 
0x00060b4f: add byte ptr [ebx - 0xffbdbac], cl; dec dword ptr [edx]; ret; 
0x00124f87: add byte ptr [ebx], bh; xor esi, edi; push eax; ret; 
0x001359bf: add byte ptr [ebx], bh; ret; 
0x0000be3b: add byte ptr [ebx], ch; add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x6a; 
0x0000c21b: add byte ptr [ebx], cl; add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x6c; 
0x0000c97b: add byte ptr [ebx], dh; add byte ptr [eax], al; and al, byte ptr [eax]; or byte ptr [eax], al; ret 0x64; 
0x0003e787: add byte ptr [ecx + 0x10c483f0], cl; pop ebx; pop esi; ret; 
0x00010e2b: add byte ptr [ecx + 0x120000], ch; or byte ptr [eax], al; ret; 
0x000315a5: add byte ptr [ecx + 0x131481], cl; add byte ptr [0x7fffffff], ah; ret; 
0x00083772: add byte ptr [ecx + 0x1cc48316], cl; pop ebx; pop esi; ret; 
0x0010b476: add byte ptr [ecx + 0x21e82404], cl; ret 0xfff1; 
0x00080245: add byte ptr [ecx + 0x24548bc7], cl; adc byte ptr [ecx - 0x165a0c2a], cl; ret; 
0x00054f1a: add byte ptr [ecx + 0x24548bc8], cl; sbb byte ptr [ecx - 0x7cefdbb4], cl; ret 0x8302; 
0x000a9536: add byte ptr [ecx + 0x24608b], cl; add byte ptr [ebx + 0x5e], bl; ret; 
0x0009b223: add byte ptr [ecx + 0x24e82434], cl; ret; 
0x0008ab8f: add byte ptr [ecx + 0x28e8243c], cl; ret; 
0x000a826b: add byte ptr [ecx + 0x2ce82404], cl; ret; 
0x000ea9f5: add byte ptr [ecx + 0x32e82404], cl; mov eax, dword ptr [0xc483fff3]; or al, 0x5b; ret; 
0x0010a74a: add byte ptr [ecx + 0x39082454], cl; ret 0x473; 
0x0008ccd4: add byte ptr [ecx + 0x3e82404], cl; test eax, 0xc483fff9; adc al, 0x5b; ret; 
0x00098f65: add byte ptr [ecx + 0x42e82404], cl; ret 0xfff8; 
0x00108885: add byte ptr [ecx + 0x42e82404], cl; ret; 
0x0009d3ad: add byte ptr [ecx + 0x4dd2404], cl; and al, 0xc9; ret; 
0x000ea8f9: add byte ptr [ecx + 0x5ee82434], cl; ret 0xfff3; 
0x00013c73: add byte ptr [ecx + 0x60000013], dl; ret; 
0x000e88d4: add byte ptr [ecx + 0x687afc1], al; add byte ptr [ebx - 0x10f7f], cl; inc dword ptr [0x1c0]; ret; 
0x000980e1: add byte ptr [ecx + 0x6e8243c], cl; ret 0xfff8; 
0x00121657: add byte ptr [ecx + 0x70fff47e], cl; push ds; add dword ptr [eax], eax; ret; 
0x000bb0a5: add byte ptr [ecx + 0x72e82404], cl; ret; 
0x000a0278: add byte ptr [ecx + 0x7d0fa], al; add byte ptr [ebp + edi*2 - 0x7d], dh; ret 0xeb01; 
0x0005ab15: add byte ptr [ecx + 0x7efcb1], cl; add byte ptr [ecx + 0x7f00b9], cl; add byte ptr [esi + 0x5f], bl; ret; 
0x0005ab1b: add byte ptr [ecx + 0x7f00b9], cl; add byte ptr [esi + 0x5f], bl; ret; 
0x0009c998: add byte ptr [ecx + 0x8c483f0], cl; pop ebx; pop esi; ret; 
0x000f3842: add byte ptr [ecx + 0x98c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0003f88d: add byte ptr [ecx + 0xcc483f0], cl; pop ebx; pop esi; ret; 
0x0007fec9: add byte ptr [ecx + 0xd11bac3], al; add byte ptr [ebx - 0x7adbdb8c], cl; test byte ptr [edi], 0x84; add dword ptr [eax], 0x3d8d0000; ret 0x8b; 
0x0006b364: add byte ptr [ecx + 0xe5d1fc3], al; add byte ptr [ebx - 0x76dbdbbc], cl; ret 0xe283; 
0x00067294: add byte ptr [ecx + 0xe9defc3], al; add byte ptr [ebx - 0x76dbdbbc], cl; ret 0xe283; 
0x001342d4: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x100e4302], al; push 0x41080e0a; ret; 
0x0012aa68: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x2c0e4302], al; add al, byte ptr [ecx + 0x41080e0a]; ret; 
0x00136534: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0x440e4302], al; add dl, byte ptr [edx + 0x41080e0a]; ret; 
0x00147718: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0xa510202], al; ret; 
0x00147adc: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0xc0e4302], al; add bh, byte ptr [esi + 0x41080e0a]; ret; 
0x00139b24: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0xc0e4302], al; or cl, byte ptr [0x4108]; ret; 
0x001306f0: add byte ptr [ecx + 0xe], al; or byte ptr [ebx + 0xc0e4302], al; push 0x41080e0a; ret; 
0x0012eb10: add byte ptr [ecx + 0xe], al; or byte ptr [esi + 0xc0e4102], al; add dword ptr [ebx], 0x5f; ret; 
0x00135d84: add byte ptr [ecx + 0xe], al; or byte ptr [esi + 0xc0e4102], al; add dword ptr [ebx], 0x70; ret; 
0x0005c04d: add byte ptr [ecx + 0xf5036c3], al; add byte ptr [ebx + 0x458b0875], cl; or al, 0x89; ret 0x4489; 
0x00047ff8: add byte ptr [ecx + 0xf], dh; popfd; ret 0xc283; 
0x0005d284: add byte ptr [ecx + 0xffa89f0], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x0000c19b: add byte ptr [ecx + 2], bh; add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret; 
0x00000697: add byte ptr [ecx + 2], bl; add byte ptr [eax], al; ret; 
0x0000433b: add byte ptr [ecx + 6], bh; add byte ptr [eax], al; ret 7; 
0x001097d8: add byte ptr [ecx + ebp*2 + 0xf], dh; mov bh, 0x56; or al, 0xf6; ret 0x7408; 
0x000a0094: add byte ptr [ecx + edi*4 - 0x7d], dh; rol byte ptr [ecx], 0x83; ret 0x8b10; 
0x00099dd1: add byte ptr [ecx + esi*2 - 0x77], dh; ret 0xe283; 
0x000e3ec8: add byte ptr [ecx - 0x14efdb84], cl; or al, 0x89; ret 0xfad1; 
0x00047c34: add byte ptr [ecx - 0x14f3db84], cl; or al, 0x89; ret 0xfad1; 
0x000a998f: add byte ptr [ecx - 0x1717dbd4], cl; ret; 
0x000f4118: add byte ptr [ecx - 0x17dbfc], cl; and eax, 0xc483fff3; add al, 0x5b; ret; 
0x000a7890: add byte ptr [ecx - 0x2817dbcc], cl; ret; 
0x0005aec3: add byte ptr [ecx - 0x2b17dbfc], cl; ret; 
0x000c8775: add byte ptr [ecx - 0x2d17dbfc], cl; ret; 
0x0008b1a6: add byte ptr [ecx - 0x2e17dbfc], cl; mov byte ptr [0xc483fff9], al; add al, 0x5b; ret; 
0x0005aa79: add byte ptr [ecx - 0x3117dbfc], cl; ret; 
0x000a2577: add byte ptr [ecx - 0x3b7cd7b0], cl; or al, 0x5b; pop esi; ret; 
0x00064047: add byte ptr [ecx - 0x3b7cd7b0], cl; or byte ptr [ebx + 0x5e], bl; ret; 
0x000d2aef: add byte ptr [ecx - 0x3b7cef90], cl; or byte ptr [ebx + 0x5e], bl; ret; 
0x00108805: add byte ptr [ecx - 0x3d17dbfc], cl; ret; 
0x0005afe2: add byte ptr [ecx - 0x4a17dbfc], cl; ret 0xfffc; 
0x000a78bb: add byte ptr [ecx - 0x5317dbcc], cl; ret; 
0x000a8206: add byte ptr [ecx - 0x6e17dbfc], cl; ret; 
0x0010887e: add byte ptr [ecx - 0x74fbdbbc], cl; inc ebp; add byte ptr [ecx + 0x42e82404], cl; ret; 
0x001087fe: add byte ptr [ecx - 0x74fbdbbc], cl; inc ebp; add byte ptr [ecx - 0x3d17dbfc], cl; ret; 
0x000d9928: add byte ptr [ecx - 0x74fbdbbc], cl; test byte ptr [eax + edx*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x2b17dbfc], cl; ret; 
0x0008b23e: add byte ptr [ecx - 0x7617dbfc], cl; mov edx, 0xc483fff9; add al, 0x5b; ret; 
0x000b0516: add byte ptr [ecx - 0x769bdbac], cl; ret 0xb489; 
0x000f4a57: add byte ptr [ecx - 0x76e3dbbc], cl; ret 0x73e9; 
0x00062b74: add byte ptr [ecx - 0x7cff728c], cl; ret 0x8301; 
0x000641f7: add byte ptr [ecx - 0x7e06760e], cl; ret 0; 
0x0005aac6: add byte ptr [ecx - 0x7e17dbfc], cl; ret; 
0x000a8750: add byte ptr [ecx - 0x817dbfc], cl; ret; 
0x0013f1b9: add byte ptr [ecx], 0xa; push cs; adc al, 0x41; ret; 
0x0012b0dd: add byte ptr [ecx], 0xa; ret; 
0x0012c78f: add byte ptr [ecx], 2; dec eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012acc7: add byte ptr [ecx], 2; imul ecx, dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x00131c3f: add byte ptr [ecx], 2; pop ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001338ab: add byte ptr [ecx], 2; push ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001432ab: add byte ptr [ecx], 3; mov bl, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013e307: add byte ptr [ecx], 3; sub byte ptr [ebx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000089bb: add byte ptr [ecx], ah; add byte ptr [eax], al; and al, byte ptr [eax]; or byte ptr [eax], al; ret; 
0x0005cf81: add byte ptr [ecx], ah; ret 0xf66; 
0x0005b032: add byte ptr [ecx], al; adc dword ptr [eax + 4], 0; ret; 
0x00088f8b: add byte ptr [ecx], al; add byte ptr [eax], al; add bl, ch; ret; 
0x000ebdb2: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0000577f: add byte ptr [ecx], al; add eax, 0x4ad0000; add byte ptr [eax], al; ret 5; 
0x000eacfd: add byte ptr [ecx], al; movzx eax, ax; ret; 
0x0012df6f: add byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000ff004: add byte ptr [ecx], al; rcr byte ptr [ecx + 0xf104d8b], 1; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x000feca1: add byte ptr [ecx], al; rcr byte ptr [ecx + 0xf104f8b], 1; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x00033b12: add byte ptr [ecx], al; ret 0x932b; 
0x0002e3ab: add byte ptr [ecx], al; ret 0xb60f; 
0x000d8aee: add byte ptr [ecx], al; ret 0xd201; 
0x00061fa4: add byte ptr [ecx], al; ret 0xfa83; 
0x0003ea91: add byte ptr [ecx], al; shl eax, 3; ret; 
0x000560c7: add byte ptr [ecx], bh; ret 0x1674; 
0x000ab0b1: add byte ptr [ecx], bh; ret 0x2474; 
0x00104f1a: add byte ptr [ecx], bh; ret 0x448d; 
0x000560dd: add byte ptr [ecx], bh; ret 0x575; 
0x0003d8e8: add byte ptr [ecx], bh; ret 0x830f; 
0x00056045: add byte ptr [ecx], bh; ret 0x840f; 
0x00104eb8: add byte ptr [ecx], bh; ret 0x860f; 
0x000a1c33: add byte ptr [ecx], bh; ret 0xdf74; 
0x000f64d0: add byte ptr [ecx], bh; ret 0xef77; 
0x000f75c6: add byte ptr [ecx], bh; ret 0xf273; 
0x00009bfb: add byte ptr [ecx], bl; add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret; 
0x0002a812: add byte ptr [ecx], ch; ret 0x448b; 
0x000f9211: add byte ptr [ecx], ch; ret 0x458b; 
0x000f9080: add byte ptr [ecx], ch; ret 0x4d8b; 
0x00044d4e: add byte ptr [ecx], ch; ret 0x5489; 
0x00044dd4: add byte ptr [ecx], ch; ret 0x75e9; 
0x000f6eae: add byte ptr [ecx], ch; ret 0x84dd; 
0x000f6fef: add byte ptr [ecx], ch; ret 0xbae9; 
0x00047e83: add byte ptr [ecx], ch; ret 0xbc83; 
0x00063e7d: add byte ptr [ecx], ch; ret 0xc889; 
0x000bc48a: add byte ptr [ecx], ch; ret 0xd089; 
0x00063e54: add byte ptr [ecx], ch; ret 0xd129; 
0x00098796: add byte ptr [ecx], ch; ret 0xd285; 
0x0004cb29: add byte ptr [ecx], ch; ret 0xea83; 
0x0004cb1d: add byte ptr [ecx], ch; ret 0xfa83; 
0x0005d121: add byte ptr [ecx], ch; ror dword ptr [ebx - 0x2cfbdbbc], -0x18; add esp, 0x10; ret; 
0x000d1f62: add byte ptr [ecx], cl; ret 0x3e74; 
0x00063d0d: add byte ptr [ecx], cl; ret 0x4975; 
0x000a2196: add byte ptr [ecx], cl; ret 0x5175; 
0x00051df8: add byte ptr [ecx], cl; ret 0x5189; 
0x000a2178: add byte ptr [ecx], cl; ret 0x6f75; 
0x0005323b: add byte ptr [ecx], dh; dec dword ptr [ecx + 0xffa89f0]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x101; 
0x000519bd: add byte ptr [ecx], dh; dec dword ptr [ecx - 0x9efdb84]; ret 0xf01; 
0x000615ca: add byte ptr [ecx], dh; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x000d0111: add byte ptr [ecx], dh; rol byte ptr [eax + 0xf2eff78], cl; xchg eax, esp; ret 0xf685; 
0x000a008f: add byte ptr [ecx], dh; rol byte ptr [eax - 0x468bffc6], 0x83; rol byte ptr [ecx], 0x83; ret 0x8b10; 
0x000e134d: add byte ptr [ecx], dh; rol byte ptr [eax - 0x6bf0f5c8], cl; ret 0x688d; 
0x000f32ef: add byte ptr [ecx], dh; rol byte ptr [ebp - 0x76ab8b40], cl; ret 0xeac1; 
0x000fb05b: add byte ptr [ecx], dh; rol byte ptr [ecx + 0x88c4], 0; pop ebx; pop esi; ret; 
0x000f9a25: add byte ptr [ecx], dh; ror byte ptr [ebx - 0x76efdbb4], 0x11; ret; 
0x000bb1b5: add byte ptr [edi + 0x31], ch; rol byte ptr [ebx - 0x6bf0f901], cl; ret 0xf089; 
0x000a4275: add byte ptr [edi + eax - 0x7d], dh; ret 0x3901; 
0x000eabed: add byte ptr [edi + ecx], al; mov bh, 0xc0; ret; 
0x00122bff: add byte ptr [edi - 0x370007cd], ah; ret; 
0x00124f5f: add byte ptr [edi - 0x430001db], ah; ret 2; 
0x00121aaf: add byte ptr [edi - 0x67000a95], al; dec eax; add dword ptr [eax], eax; ret 0xf56b; 
0x0004f0ac: add byte ptr [edi - 3], ch; inc dword ptr [ebx + 0x5e5b28c4]; pop edi; ret; 
0x00021183: add byte ptr [edi], al; ret 2; 
0x000213e3: add byte ptr [edi], al; ret 3; 
0x000216b3: add byte ptr [edi], al; ret 4; 
0x0002194b: add byte ptr [edi], al; rol dword ptr [0x15180c00], 0; pop es; ret; 
0x000216bb: add byte ptr [edi], al; ret; 
0x0005ab1e: add byte ptr [edi], bh; add byte ptr [esi + 0x5f], bl; ret; 
0x000eacb9: add byte ptr [edi], cl; mov bh, 0xc0; ret; 
0x00108116: add byte ptr [edi], cl; mov dh, 0x57; sub dh, dh; ret 0xf04; 
0x000fad52: add byte ptr [edi], cl; mov dh, 9; sub eax, ecx; pop ebx; ret; 
0x000b537b: add byte ptr [edi], cl; mov es, word ptr [edx + ecx]; add byte ptr [ebx - 0x7cd7dbac], cl; ret 0xc731; 
0x0005d207: add byte ptr [edi], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x0004e9dd: add byte ptr [edi], cl; test byte ptr [edx - 0x76000002], dl; ret 0xbeeb; 
0x000f7836: add byte ptr [edi], cl; test dword ptr [ebx - 0x7cfffffc], eax; ret 0x8901; 
0x0003c6c3: add byte ptr [edi], cl; xchg eax, ebp; ret 0xe84; 
0x000fe493: add byte ptr [edi], cl; xchg eax, esp; ret 0x1789; 
0x00009111: add byte ptr [edi], dl; add al, ch; outsd dx, dword ptr [esi]; add byte ptr [eax], al; ret 0xcf6; 
0x000ea08f: add byte ptr [edx + eax*2 - 0x7d], dh; clc; push dword ptr [ebp + 6]; mov eax, 4; ret; 
0x00003b4f: add byte ptr [edx + eax], dh; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00122eb7: add byte ptr [edx + ebp*4 - 0x281f0008], ah; add dword ptr [eax], eax; ret 0xf8ab; 
0x0012ec6b: add byte ptr [edx + ebx*4], dh; add byte ptr [eax], al; stosd dword ptr es:[edi], eax; ret; 
0x00146c43: add byte ptr [edx + ebx], cl; add al, byte ptr [eax]; ret; 
0x00006577: add byte ptr [edx - 0x15], bl; push cs; add byte ptr [eax + eax + 0x120000], al; or byte ptr [eax], al; ret 0; 
0x00124665: add byte ptr [edx], 0; dec eax; ret; 
0x00013c6f: add byte ptr [edx], ah; add byte ptr [eax], cl; add byte ptr [ecx + 0x60000013], dl; ret; 
0x00139887: add byte ptr [edx], ah; ret 0xfff5; 
0x001090d3: add byte ptr [edx], al; add esp, 0xc; pop ebx; pop esi; ret; 
0x000eaa9c: add byte ptr [edx], al; movzx eax, ax; ret; 
0x00124617: add byte ptr [edx], al; ret 0xfffc; 
0x0011fac7: add byte ptr [edx], bh; ret; 
0x00124627: add byte ptr [edx], ch; ret 0xfffc; 
0x0000565b: add byte ptr [edx], cl; or dword ptr [eax], eax; add byte ptr [ebp + 0xb], ah; add byte ptr [eax], al; ret; 
0x000075b7: add byte ptr [edx], dh; ret; 
0x000062df: add byte ptr [edx], dl; add byte ptr [eax], cl; add byte ptr [eax + 0x78000013], al; ret 2; 
0x00008f9f: add byte ptr [edx], dl; add byte ptr [eax], cl; add byte ptr [eax - 0x4fffffed], bl; ret; 
0x00012a2f: add byte ptr [edx], dl; add byte ptr [eax], cl; add byte ptr [esi + edi], ch; add byte ptr [eax], al; ret; 
0x00006223: add byte ptr [edx], dl; pop ebx; add byte ptr [eax], al; inc esp; ret 9; 
0x00004813: add byte ptr [esi + 0x2d000007], ah; push es; add byte ptr [eax], al; ret; 
0x000510be: add byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x0005ab21: add byte ptr [esi + 0x5f], bl; ret; 
0x000c1569: add byte ptr [esi + 0xa], dh; mov eax, 1; add esp, 0x14; pop ebx; ret; 
0x000c54ae: add byte ptr [esi + 5], bh; mov eax, 0x40000; ret; 
0x00139883: add byte ptr [esi + eax*2 + 1], cl; add byte ptr [edx], ah; ret 0xfff5; 
0x00012a33: add byte ptr [esi + edi], ch; add byte ptr [eax], al; ret; 
0x000740f3: add byte ptr [esi - 0x7d], ah; call 0xf699b5fc; rol dword ptr [eax + 0xf], -0x7c; ret; 
0x0006868e: add byte ptr [esi - 0x7d], ah; call 0xf699fb97; ret 0xf40; 
0x00098036: add byte ptr [esi - 0x7d], ah; call 0xf69df53f; ret 0xf40; 
0x000e2401: add byte ptr [esi - 0x7d], ah; clc; add dword ptr [ebp + edi*2 - 0x18], esi; ret; 
0x0013d83d: add byte ptr [esi], 0xa; ret; 
0x00020353: add byte ptr [esi], al; mov bh, 1; add byte ptr [eax + 0x600150d], al; ret 1; 
0x0002035b: add byte ptr [esi], al; ret 1; 
0x000206d3: add byte ptr [esi], al; ret 8; 
0x0002064b: add byte ptr [esi], al; ret; 
0x00006b8b: add byte ptr [esi], bl; add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x78; 
0x00120307: add byte ptr [esi], bl; ret; 
0x001202ff: add byte ptr [esi], ch; ret 0xfff1; 
0x00124f7f: add byte ptr [esi], cl; xor esi, edi; call eax; ret; 
0x0013996b: add byte ptr [esi], dh; ret; 
0x0002a24c: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0012461f: add byte ptr [esi], dl; ret 0xfffc; 
0x00005d27: add byte ptr [esp + ebx*4], ah; adc byte ptr [eax], al; ret 0; 
0x0009d42e: add byte ptr [esp + ecx*2 - 0x77], dh; ret 0xe283; 
0x000b4830: add byte ptr [esp + edx - 0x48], dh; add eax, dword ptr [eax]; add byte ptr [eax], al; leave; ret; 
0x000062dc: add byte ptr ds:[eax], al; add byte ptr [edx], dl; add byte ptr [eax], cl; add byte ptr [eax + 0x78000013], al; ret 2; 
0x00012a35: add byte ptr ds:[eax], al; ret; 
0x00060c1b: add byte ptr es:[eax], al; add byte ptr [eax], al; lock add dword ptr [esp - 4], 0; ret; 
0x0002c46b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000ea08e: add byte ptr es:[edx + eax*2 - 0x7d], dh; clc; push dword ptr [ebp + 6]; mov eax, 4; ret; 
0x00053238: add byte ptr fs:[eax], al; add byte ptr [ecx], dh; dec dword ptr [ecx + 0xffa89f0]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x101; 
0x0004408a: add byte ptr fs:[eax], al; ret; 
0x0011facd: add byte ptr gs:[eax], al; inc eax; ret; 
0x0011fad5: add byte ptr gs:[eax], al; inc ebx; ret; 
0x0011faa5: add byte ptr gs:[eax], al; popfd; ret 0xfff0; 
0x0011fab5: add byte ptr gs:[eax], al; xlatb; ret 0xfff0; 
0x0002bb41: add byte ptr ss:[eax], al; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0002bb0b: add byte ptr ss:[eax], al; xor eax, eax; ret; 
0x0002bb27: add byte ptr ss:[eax], al; ret; 
0x0012fa84: add ch, ah; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012222f: add ch, ah; ret 0xfff6; 
0x00126e6d: add ch, al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012fadd: add ch, bh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0009d385: add ch, bl; add al, 0x24; leave; ret; 
0x0002c39e: add ch, bl; add eax, 0xcb75ed84; dec eax; sub eax, dword ptr [esp + 4]; ret; 
0x000c9236: add ch, bl; ret 0x66aa; 
0x0014763b: add ch, byte ptr [eax + 0x41100e0a]; ret; 
0x0013c030: add ch, byte ptr [eax + 0x41140e0a]; ret; 
0x0012959b: add ch, byte ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0012a0ca: add ch, byte ptr [eax + 0xa]; push cs; or al, 0x41; ret; 
0x0013d07c: add ch, byte ptr [ebp + 0x41140e0a]; ret; 
0x00126bc8: add ch, byte ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x00125f52: add ch, byte ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x00149f13: add ch, byte ptr [ebx + 0x41140e0a]; ret; 
0x00125b17: add ch, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x001416ff: add ch, byte ptr [ebx + 0xa]; push cs; or al, 0x41; ret; 
0x00132539: add ch, byte ptr [ebx + 0xa]; ret; 
0x00142781: add ch, byte ptr [ecx + 0x41140e0a]; ret; 
0x0012c8af: add ch, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0014992a: add ch, byte ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x00128a05: add ch, byte ptr [ecx + 0xa]; ret; 
0x000753fe: add ch, byte ptr [ecx]; ret 0x5489; 
0x0014b25f: add ch, byte ptr [edi + 0x41100e0a]; ret; 
0x00135eb4: add ch, byte ptr [edi + 0x41140e0a]; ret; 
0x00126554: add ch, byte ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0012d48a: add ch, byte ptr [edi + 0xa]; push cs; or al, 0x41; ret; 
0x0012c839: add ch, byte ptr [edi + 0xa]; ret; 
0x00131414: add ch, byte ptr [edx + 0x41100e0a]; ret; 
0x0013195e: add ch, byte ptr [edx + 0x41140e0a]; ret; 
0x00131947: add ch, byte ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x0012b62c: add ch, byte ptr [edx + 0xa]; push cs; or al, 0x41; ret; 
0x00129100: add ch, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0014387e: add ch, byte ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x0012aed4: add ch, byte ptr [esi + 0x41140e0a]; ret; 
0x00126d4c: add ch, byte ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x001344d4: add ch, byte ptr [esi + 0xa]; ret; 
0x00139c12: add ch, byte ptr [esi + 0xe]; or al, 0x41; ret; 
0x0012ee36: add ch, byte ptr [esi + ecx + 0xc]; inc ecx; ret; 
0x00136183: add ch, byte ptr fs:[ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x00138594: add ch, ch; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129d3c: add ch, cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000cb984: add ch, cl; xor byte ptr [edx - 0x29], 0x4a; and eax, edx; ret; 
0x00122237: add ch, cl; ret; 
0x0013b4b7: add ch, dh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012c48c: add ch, dl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00006e17: add ch, dl; xor dword ptr [eax + eax], ecx; ret; 
0x0002aab5: add cl, 0xe0; add cl, byte ptr [ebx + 0x290c2454]; ret 0x448b; 
0x00131930: add cl, ah; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012fd14: add cl, al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012678f: add cl, bh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00005d23: add cl, bh; sbb eax, dword ptr [eax]; add byte ptr [esp + ebx*4], ah; adc byte ptr [eax], al; ret 0; 
0x0012b544: add cl, bl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0005cc25: add cl, bl; ret 0xe1d9; 
0x00126cf8: add cl, byte ptr [eax + 0x41140e0a]; ret; 
0x0012a83d: add cl, byte ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00128237: add cl, byte ptr [eax + 0xa]; push cs; or al, 0x41; ret; 
0x00146e05: add cl, byte ptr [eax + 0xa]; ret; 
0x0012fcd4: add cl, byte ptr [ebp + 0x41140e0a]; ret; 
0x00125734: add cl, byte ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x00142d2a: add cl, byte ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x0002aab8: add cl, byte ptr [ebx + 0x290c2454]; ret 0x448b; 
0x00067ecb: add cl, byte ptr [ebx + 0x29102454]; ret 0x5489; 
0x00130cb7: add cl, byte ptr [ebx + 0x41100e0a]; ret; 
0x00131b51: add cl, byte ptr [ebx + 0x41140e0a]; ret; 
0x0013249c: add cl, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x0012ddbb: add cl, byte ptr [ebx + 0xa]; push cs; or al, 0x41; ret; 
0x0008fcae: add cl, byte ptr [ebx + eax*4]; ret 0xe901; 
0x000314fa: add cl, byte ptr [ecx + 0x10c48302]; pop ebx; pop esi; ret; 
0x0006ac78: add cl, byte ptr [ecx + 0x10c48306]; pop esi; ret; 
0x0005c666: add cl, byte ptr [ecx + 0x1eed3c1]; ret 0xf089; 
0x000f8832: add cl, byte ptr [ecx + 0x2b811]; add byte ptr [eax], al; ret; 
0x001313dc: add cl, byte ptr [ecx + 0x41100e0a]; ret; 
0x0012a928: add cl, byte ptr [ecx + 0x41140e0a]; ret; 
0x00098ee9: add cl, byte ptr [ecx + 0x7ec085f8]; or byte ptr [ecx], ch; ret 0xc729; 
0x00098ee3: add cl, byte ptr [ecx + 0x7ef839c8]; add cl, byte ptr [ecx + 0x7ec085f8]; or byte ptr [ecx], ch; ret 0xc729; 
0x000285eb: add cl, byte ptr [ecx + 0x8c48306]; pop ebx; pop esi; ret; 
0x001264fc: add cl, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x00130be6: add cl, byte ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x00130015: add cl, byte ptr [ecx + 0xa]; ret; 
0x0013532a: add cl, byte ptr [ecx + 0xe]; or al, 0x41; ret; 
0x000dd535: add cl, byte ptr [ecx + 0xf50246c]; mov dh, 0x40; add dword ptr [ecx - 0x7ab7dbbc], ecx; ror byte ptr [edi], 0x84; ret; 
0x00090aa6: add cl, byte ptr [ecx - 0x3b7cf7aa]; cmp al, 0x5b; pop esi; ret; 
0x00067381: add cl, byte ptr [ecx]; ret 0xd189; 
0x00129544: add cl, byte ptr [edi + 0x41140e0a]; ret; 
0x00127d64: add cl, byte ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x000eaa9d: add cl, byte ptr [edi]; mov bh, 0xc0; ret; 
0x000c4d6b: add cl, byte ptr [edi]; test bl, bh; add byte ptr [eax], al; add byte ptr [ebx - 0x7af0e706], al; ret 0; 
0x00148e82: add cl, byte ptr [edx + 0x410c0e0a]; ret; 
0x0013ed6f: add cl, byte ptr [edx + 0x41100e0a]; ret; 
0x0012e110: add cl, byte ptr [edx + 0x41140e0a]; ret; 
0x0012754b: add cl, byte ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x001267c6: add cl, byte ptr [edx + 0xa]; push cs; or al, 0x41; ret; 
0x001262d6: add cl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0012788a: add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x00126ff6: add cl, byte ptr [edx]; ret; 
0x0013169d: add cl, byte ptr [esi + 0x41140e0a]; ret; 
0x001263c8: add cl, byte ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x0012cab5: add cl, byte ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x00148fa6: add cl, byte ptr [esi + 0xe]; or al, 0x41; ret; 
0x00140987: add cl, byte ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x00144656: add cl, byte ptr [esi + ecx + 0xc]; inc ecx; ret; 
0x0013e965: add cl, byte ptr [esi + ecx + 8]; inc ecx; ret; 
0x001420be: add cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012a97d: add cl, byte ptr cs:[edx]; push cs; adc al, 0x41; ret; 
0x0013ee06: add cl, byte ptr es:[edx]; push cs; adc al, 0x41; ret; 
0x00026d8a: add cl, ch; inc eax; ret 0xffff; 
0x00026c8a: add cl, ch; inc eax; ret; 
0x001291f4: add cl, ch; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00026d7a: add cl, ch; push eax; ret 0xffff; 
0x00026c7a: add cl, ch; push eax; ret; 
0x000996ef: add cl, ch; ret 0xfff2; 
0x000b07cd: add cl, ch; ret 0xfff3; 
0x0008116b: add cl, ch; ret 0xfffb; 
0x00030aab: add cl, ch; ret 0xfffc; 
0x0004537b: add cl, ch; ret 0xfffd; 
0x000385f5: add cl, ch; ret 0xfffe; 
0x00026d3a: add cl, ch; nop; ret 0xffff; 
0x00026c3a: add cl, ch; nop; ret; 
0x00026d6a: add cl, ch; pushal; ret 0xffff; 
0x00026c6a: add cl, ch; pushal; ret; 
0x000af01c: add cl, ch; ret; 
0x00132329: add cl, cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012ed8a: add cl, cl; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00022fc7: add cl, cl; ret; 
0x00134af5: add cl, dh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012da74: add cl, dl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000e4e6e: add dh, ah; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0013da20: add dh, ah; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0003e6b0: add dh, al; inc eax; or al, byte ptr [eax]; ret; 
0x0013d958: add dh, al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001405f4: add dh, bh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013d102: add dh, bh; push cs; adc al, 0x41; ret; 
0x0012ed3c: add dh, bl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00008a63: add dh, bl; pop ebp; add byte ptr [eax], al; cmpsb byte ptr [esi], byte ptr es:[edi]; ret 9; 
0x0013ced4: add dh, bl; push cs; adc al, 0x41; ret; 
0x0010672b: add dh, bl; stosd dword ptr es:[edi], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0002c49f: add dh, bl; stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00089586: add dh, byte ptr [eax + 0x30c48304]; pop ebx; ret; 
0x001318d8: add dh, byte ptr [eax + 0x41140e0a]; ret; 
0x00126c08: add dh, byte ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0014b3f0: add dh, byte ptr [eax + 0xe]; adc al, 0x41; ret; 
0x000ccb8a: add dh, byte ptr [eax + ebx - 0x7d]; ret 0x8301; 
0x0003e683: add dh, byte ptr [ebp + 0x19]; ret; 
0x000c77b4: add dh, byte ptr [ebp + 0x1c]; lea eax, dword ptr [ebx - 0x385e8]; pop ebx; ret; 
0x0012e794: add dh, byte ptr [ebp + 0x41140e0a]; ret; 
0x000f882d: add dh, byte ptr [ebp + 0x54]; shr edx, 2; mov dword ptr [ecx], edx; mov eax, 2; ret; 
0x0012cd0c: add dh, byte ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x00141c7a: add dh, byte ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x00141229: add dh, byte ptr [ebp + 0xa]; ret; 
0x0013f3d1: add dh, byte ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x00139c48: add dh, byte ptr [ebx + 0x41140e0a]; ret; 
0x0012f97d: add dh, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x001271ac: add dh, byte ptr [ebx + 0xa]; ret; 
0x00142ca3: add dh, byte ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x0012d069: add dh, byte ptr [ecx + 0x41140e0a]; ret; 
0x00135ce8: add dh, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0013e7da: add dh, byte ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x00125999: add dh, byte ptr [ecx + 0xa]; ret; 
0x0013c130: add dh, byte ptr [edi + 0x41100e0a]; ret; 
0x00144a4c: add dh, byte ptr [edi + 0x41140e0a]; ret; 
0x00126ad4: add dh, byte ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0012f255: add dh, byte ptr [edi + 0xa]; ret; 
0x000c637d: add dh, byte ptr [edi + 8]; mov eax, dword ptr [ecx + eax*4 - 0x38840]; ret; 
0x00133e90: add dh, byte ptr [edx + 0x41140e0a]; ret; 
0x0012e033: add dh, byte ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x00129491: add dh, byte ptr [edx + 0xa]; ret; 
0x0012b7c5: add dh, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x001445ae: add dh, byte ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x0012f3ec: add dh, byte ptr [edx + ecx - 0x3b]; ret; 
0x001298e7: add dh, byte ptr [esi + 0x41140e0a]; ret; 
0x00126848: add dh, byte ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00135be2: add dh, byte ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x000dfda3: add dh, byte ptr [esp + ecx - 0x7d]; clc; add esi, dword ptr [ebp + 0xe]; lea eax, dword ptr [ecx - 0x3620d]; ret; 
0x00128864: add dh, ch; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013efcb: add dh, ch; ret 0xfff7; 
0x001385d4: add dh, cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013e464: add dh, dh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000f8861: add dh, dh; ret 0x7501; 
0x00051a6d: add dh, dh; ret 0xf01; 
0x000cfaf7: add dh, dh; ret 0xf02; 
0x00057a90: add dh, dh; ret 0xf10; 
0x00010fa7: add dh, dh; ret; 
0x00144b9c: add dh, dl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014326d: add dl, al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012d775: add dl, bh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014a9d8: add dl, bl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000041db: add dl, bl; pop es; add byte ptr [eax], al; ret; 
0x00138087: add dl, byte ptr [eax + 0x41100e0a]; ret; 
0x00128ac4: add dl, byte ptr [eax + 0x41140e0a]; ret; 
0x00129e78: add dl, byte ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0013ba3a: add dl, byte ptr [eax + 0xa]; push cs; or al, 0x41; ret; 
0x0014bcf4: add dl, byte ptr [eax + 0xa]; ret; 
0x0012b2ce: add dl, byte ptr [eax + 0xe]; or al, 0x41; ret; 
0x0013126c: add dl, byte ptr [ebp + 0x41140e0a]; ret; 
0x00129584: add dl, byte ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x001356c6: add dl, byte ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x001287d2: add dl, byte ptr [ebx + 0x410c0e0a]; ret; 
0x00140afe: add dl, byte ptr [ebx + 0x41100e0a]; ret; 
0x0013170c: add dl, byte ptr [ebx + 0x41140e0a]; ret; 
0x0013542c: add dl, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x00125569: add dl, byte ptr [ebx + 0xa]; push cs; or al, 0x41; ret; 
0x0013df20: add dl, byte ptr [ebx + 0xa]; ret; 
0x0012988e: add dl, byte ptr [ecx + 0x41140e0a]; ret; 
0x00131a6d: add dl, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x00135c6e: add dl, byte ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x0014771e: add dl, byte ptr [ecx + 0xa]; ret; 
0x0013c75d: add dl, byte ptr [ecx + 0xe]; adc al, 0x41; ret; 
0x0014c983: add dl, byte ptr [edi + 0x41100e0a]; ret; 
0x001298fe: add dl, byte ptr [edi + 0x41140e0a]; ret; 
0x00129a31: add dl, byte ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0013e10e: add dl, byte ptr [edi + 0xa]; push cs; or al, 0x41; ret; 
0x00135100: add dl, byte ptr [edi + 0xa]; ret; 
0x0014cb02: add dl, byte ptr [edi + 0xe]; or al, 0x41; ret; 
0x0013653d: add dl, byte ptr [edx + 0x41080e0a]; ret; 
0x0012539c: add dl, byte ptr [edx + 0x41140e0a]; ret; 
0x0013571f: add dl, byte ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x00127c8a: add dl, byte ptr [edx + 0xa]; push cs; or al, 0x41; ret; 
0x001388ae: add dl, byte ptr [edx + 0xe]; or al, 0x41; ret; 
0x0012f79b: add dl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0013fb2a: add dl, byte ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x0012880c: add dl, byte ptr [esi + 0x41140e0a]; ret; 
0x00126e13: add dl, byte ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00142668: add dl, byte ptr [esi + 0xe]; adc al, 0x41; ret; 
0x00142942: add dl, byte ptr [esi + ecx + 0xc]; inc ecx; ret; 
0x0012d5ab: add dl, ch; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129f4c: add dl, cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0005cfe5: add dl, dh; addps xmm0, xmm1; movsd qword ptr [esp + 4], xmm0; fld qword ptr [esp + 4]; ret; 
0x001359e0: add dl, dh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0011fabf: add dl, dh; ret 0xfff0; 
0x00065c8a: add dl, dh; sti; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x00135774: add dl, dl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00144e73: add dword ptr [0x10a80e46], 2; nop; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012d003: add dword ptr [0x10c40e46], 2; fimul word ptr [edx]; push cs; adc al, 0x41; ret; 
0x00145acf: add dword ptr [0x10cc0e46], 2; in al, dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012a253: add dword ptr [0x10e00e46], 2; popfd; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012c6ff: add dword ptr [0x11dc0e46], 2; xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00142c07: add dword ptr [0x1840e43], 2; mov bl, 0xa; push cs; adc al, 0x41; ret; 
0x0012941f: add dword ptr [0x1880e43], 0x78; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00133c07: add dword ptr [0x1880e43], 2; mov byte ptr [edx], cl; push cs; adc al, 0x41; ret; 
0x0013376f: add dword ptr [0x1880e43], 2; mov ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x00131b4b: add dword ptr [0x18c0e43], 2; mov ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x00148607: add dword ptr [0x18c40e46], 2; test dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00131697: add dword ptr [0x1a80e46], 2; mov cs, word ptr [edx]; push cs; adc al, 0x41; ret; 
0x00141473: add dword ptr [0x1b40e46], 2; mov esi, 0x41140e0a; ret; 
0x00145c9f: add dword ptr [0x1c80e46], 2; xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014aadb: add dword ptr [0x1c80e46], 3; mov bh, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001348c7: add dword ptr [0x1e00e46], 2; mov ch, 0xa; push cs; adc al, 0x41; ret; 
0x0014797b: add dword ptr [0x2180e43], 0x7c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00147a3f: add dword ptr [0x2180e43], 0x7e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013835f: add dword ptr [0x21c0e43], -0x3b; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013b2fb: add dword ptr [0x21c0e43], 0x69; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00142317: add dword ptr [0x21c0e43], 0x75; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012c00f: add dword ptr [0x2200e43], -0x3e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013c72b: add dword ptr [0x2200e43], -0x5f; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012ff4f: add dword ptr [0x2200e43], 0x67; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b453: add dword ptr [0x2200e43], 0x68; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013954f: add dword ptr [0x2200e43], 0x75; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014012f: add dword ptr [0x2200e43], 0x7f; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013ebd3: add dword ptr [0x2240e43], -0x45; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014a93b: add dword ptr [0x2240e43], -0x46; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001468bf: add dword ptr [0x2240e43], -0x47; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001431e7: add dword ptr [0x2240e43], -0x5f; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014b513: add dword ptr [0x2240e43], -0x60; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00140443: add dword ptr [0x2240e43], -0x7e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012671b: add dword ptr [0x2240e43], -0x7f; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014918b: add dword ptr [0x2240e43], 0x67; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013a1ef: add dword ptr [0x2240e43], 0x69; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001345ff: add dword ptr [0x2240e43], 0x73; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012cd07: add dword ptr [0x2240e43], 0x75; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001408f3: add dword ptr [0x2240e43], 0x76; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126313: add dword ptr [0x2240e43], 0x78; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00149ef7: add dword ptr [0x2240e43], 0x7d; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127b83: add dword ptr [0x2240e43], 0x7e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129f9f: add dword ptr [0x2240e43], 0x7f; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014b393: add dword ptr [0x2280e43], -0x1e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013192b: add dword ptr [0x2280e43], -0x34; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001335b3: add dword ptr [0x2280e43], -0x35; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00144cd3: add dword ptr [0x2280e43], -0x38; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00133387: add dword ptr [0x2280e43], -0x3a; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00132f37: add dword ptr [0x2280e43], -0x3b; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013b403: add dword ptr [0x2280e43], -0x3e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00131747: add dword ptr [0x2280e43], -0x41; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00142c47: add dword ptr [0x2280e43], -0x43; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00134413: add dword ptr [0x2280e43], -0x5d; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00138627: add dword ptr [0x2280e43], -0x5e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013ae1b: add dword ptr [0x2280e43], 0x67; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00144a07: add dword ptr [0x2280e43], 0x68; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013f917: add dword ptr [0x2280e43], 0x73; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126843: add dword ptr [0x2280e43], 0x76; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013f957: add dword ptr [0x2280e43], 0x77; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013d7ff: add dword ptr [0x2280e43], 0x7f; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00134c17: add dword ptr [0x22c0e43], -0x27; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00131ddf: add dword ptr [0x22c0e43], -0x36; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00131087: add dword ptr [0x22c0e43], -0x3c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013cf83: add dword ptr [0x22c0e43], -0x42; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001279e7: add dword ptr [0x22c0e43], -0x44; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012953f: add dword ptr [0x22c0e43], -0x71; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001312bf: add dword ptr [0x22c0e43], 0x72; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012bc13: add dword ptr [0x22c0e43], 0x77; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001496d3: add dword ptr [0x22d80e46], 2; mov eax, 0x41140e0a; ret; 
0x0012ae8f: add dword ptr [0x2300e43], -0x27; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b53f: add dword ptr [0x2300e43], -0x35; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014b6cb: add dword ptr [0x2300e43], -0x39; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012d993: add dword ptr [0x2300e43], -0x3e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014bc27: add dword ptr [0x2300e43], -0x41; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00134ce3: add dword ptr [0x2300e43], -0x42; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126acf: add dword ptr [0x2300e43], 0x77; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013d953: add dword ptr [0x2340e43], -0x10; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014b8d7: add dword ptr [0x2340e43], -0x27; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013b3c3: add dword ptr [0x2340e43], 0x73; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00135e57: add dword ptr [0x2340e43], 0x77; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00139987: add dword ptr [0x2340e43], 0x78; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014add7: add dword ptr [0x2380e43], -0x3c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014cbcb: add dword ptr [0x2380e43], -0x5e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001451cf: add dword ptr [0x2380e43], -0x60; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00144207: add dword ptr [0x2380e43], -0x7e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012da6f: add dword ptr [0x23c0e43], -0x36; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127abb: add dword ptr [0x23c0e43], -0x3e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001292af: add dword ptr [0x23c0e43], -0x43; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00146ca3: add dword ptr [0x23c0e43], 0x7e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00136a57: add dword ptr [0x2400e43], -0x46; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001291af: add dword ptr [0x2400e43], -0x5a; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013e557: add dword ptr [0x2400e43], -0x65; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013f5df: add dword ptr [0x2440e43], -0x42; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00145587: add dword ptr [0x2440e43], -0x44; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001373bf: add dword ptr [0x2440e43], -0x54; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014029f: add dword ptr [0x2440e43], -0x5c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00137eb7: add dword ptr [0x2440e43], -0x63; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014c037: add dword ptr [0x2440e43], -0x7d; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b9cf: add dword ptr [0x2440e43], -0x7e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00125afb: add dword ptr [0x2480e43], -0x41; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013668b: add dword ptr [0x2480e43], -0x50; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129963: add dword ptr [0x2480e43], -0x5b; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00145607: add dword ptr [0x2480e43], -0x71; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b8e7: add dword ptr [0x2480e43], -0x7e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00135eef: add dword ptr [0x24c0e43], -0x50; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00135eaf: add dword ptr [0x24c0e43], -0x51; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013768b: add dword ptr [0x24c0e43], -0x5a; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001449ab: add dword ptr [0x24c0e43], -0x65; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00137927: add dword ptr [0x2500e43], -0x50; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001378e7: add dword ptr [0x2500e43], -0x52; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012ab4f: add dword ptr [0x2500e43], -0x54; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00146d07: add dword ptr [0x2500e43], -0x62; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012c66b: add dword ptr [0x2500e43], -0x66; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013f637: add dword ptr [0x2500e43], -0x72; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00137c2b: add dword ptr [0x2540e43], -0x65; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00137beb: add dword ptr [0x2540e43], -0x68; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b7ff: add dword ptr [0x2580e43], -0x7e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001441c7: add dword ptr [0x25c0e43], -0x7e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00134b9f: add dword ptr [0x2600e43], -0x4b; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00125397: add dword ptr [0x2600e43], -0x6e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013f39f: add dword ptr [0x2640e43], -0x68; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126453: add dword ptr [0x2680e43], -0x1b; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00144d9b: add dword ptr [0x2680e43], -0x76; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b717: add dword ptr [0x2680e43], -0x7b; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126773: add dword ptr [0x2680e43], 0x6f; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00143227: add dword ptr [0x26c0e43], -0x58; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001312ff: add dword ptr [0x26c0e43], -0x68; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012d51f: add dword ptr [0x2700e43], 0x78; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012c893: add dword ptr [0x2700e43], 0x7d; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013c6eb: add dword ptr [0x2740e43], -0x33; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013c8ab: add dword ptr [0x2740e43], -0x7f; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013e45f: add dword ptr [0x2740e43], -0xa; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00132497: add dword ptr [0x2740e43], 0x4b; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00141e0f: add dword ptr [0x2780e43], -0x2e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014c173: add dword ptr [0x2780e43], -0x5f; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00146d9f: add dword ptr [0x2b00e46], 2; xchg eax, ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012736b: add dword ptr [0x2c40e46], 2; mov esi, 0x41140e0a; ret; 
0x0014071f: add dword ptr [0x2c40e46], 3; add dword ptr gs:[edx], ecx; push cs; adc al, 0x41; ret; 
0x00139cc7: add dword ptr [0x32b40e46], 0x7c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014b763: add dword ptr [0x32c0e43], 0x72; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00139f97: add dword ptr [0x3300e43], -9; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0014c48f: add dword ptr [0x3300e43], 0x69; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0013cb0b: add dword ptr [0x3340e43], -0x39; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00144b0f: add dword ptr [0x3340e43], 0x7c; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00146c63: add dword ptr [0x3380e43], 0x69; add dword ptr [esi], ecx; adc al, 0x41; ret; 
0x0012ccaf: add dword ptr [0x3380e43], 0x73; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0012c5ab: add dword ptr [0x33c0e43], -0x15; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x001299bb: add dword ptr [0x33c0e43], -0x34; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00149b17: add dword ptr [0x33c0e43], -0x7e; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0014c65f: add dword ptr [0x33c0e43], 0x74; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00143a1b: add dword ptr [0x3740e43], 0x1b; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0013e41f: add dword ptr [0x3740e43], 0x24; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00147eeb: add dword ptr [0x3780e43], -0x23; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0012ab8f: add dword ptr [0x3780e43], 0x24; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0014c4cf: add dword ptr [0x3780e43], 0x3d; add al, 0xa; push cs; adc al, 0x41; ret; 
0x0012a427: add dword ptr [0x3780e43], 0x63; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0012a3c3: add dword ptr [0x37c0e43], -0x72; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00005780: add dword ptr [0x4ad0000], eax; add byte ptr [eax], al; ret 5; 
0x0012e2cb: add dword ptr [0x4c80e46], 2; or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x001425cf: add dword ptr [0x4c80e46], 2; xchg eax, edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001434a3: add dword ptr [0x4cc0e46], 3; sbb al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001346d7: add dword ptr [0x4f00e46], 3; test al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012e98f: add dword ptr [0x74480e43], 0xa; push cs; adc al, 0x41; ret; 
0x0014914b: add dword ptr [0x755c0e43], 0xa; push cs; adc al, 0x41; ret; 
0x0012e9cf: add dword ptr [0x76180e43], 0xe; adc al, 0x41; ret; 
0x0012f93b: add dword ptr [0x77180e43], 0xe; adc al, 0x41; ret; 
0x0012df53: add dword ptr [0x77480e43], 0xa; push cs; adc al, 0x41; ret; 
0x0013c63b: add dword ptr [0x77500e43], 0xa; push cs; adc al, 0x41; ret; 
0x00137f0f: add dword ptr [0x78440e43], 0xa; push cs; adc al, 0x41; ret; 
0x001400ef: add dword ptr [0x7c500e43], 0xa; push cs; adc al, 0x41; ret; 
0x0014a433: add dword ptr [0x8b00e46], 2; mov word ptr [edx], cs; push cs; adc al, 0x41; ret; 
0x00143eb3: add dword ptr [0x8b00e46], 2; or byte ptr [edx], 0xe; adc al, 0x41; ret; 
0x00143dff: add dword ptr [0x8b40e46], 2; xchg eax, ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012fad7: add dword ptr [0x8c40e46], 2; out dx, eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00142737: add dword ptr [0x8c40e46], 3; or al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014277b: add dword ptr [0x8c80e46], 2; test eax, 0x41140e0a; ret; 
0x0012a837: add dword ptr [0x8cc0e46], 2; dec eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012d063: add dword ptr [0x8d40e46], 2; mov cl, 0xa; push cs; adc al, 0x41; ret; 
0x0014856f: add dword ptr [0x8e00e46], 2; mov dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0014269f: add dword ptr [0x8e00e46], 2; push edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001487f7: add dword ptr [0x8e00e46], 2; xchg dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0012a37f: add dword ptr [0x9a40e46], 3; ret 0xa02; 
0x00132bd7: add dword ptr [0x9c80e46], 3; mov eax, dword ptr [ebx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001452ab: add dword ptr [0xadc0e46], 2; mov dl, 0xa; push cs; adc al, 0x41; ret; 
0x0012fc5b: add dword ptr [0xbfc40e46], 5; add ecx, dword ptr [ecx + 2]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001391f2: add dword ptr [bp + si], ecx; push cs; adc al, 0x41; ret; 
0x00036cec: add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x00036cfe: add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0002c561: add dword ptr [eax + 0x5e], eax; pop edi; ret; 
0x000b2ced: add dword ptr [eax + 0x5f5e5b02], ecx; ret; 
0x00129424: add dword ptr [eax + 0xa], edi; push cs; adc al, 0x41; ret; 
0x000c5377: add dword ptr [eax + 0xc], 4; mov eax, 1; ret; 
0x000c2a55: add dword ptr [eax + 1], edi; add esp, 0x10; pop esi; ret; 
0x000370c1: add dword ptr [eax + 1], edi; add esp, 0xc; ret; 
0x000bf698: add dword ptr [eax + 1], edi; pop ebx; ret; 
0x00051e4e: add dword ptr [eax + 1], edi; ret; 
0x0003f649: add dword ptr [eax + 2], edi; ret; 
0x00055330: add dword ptr [eax + eax*8 - 0x3fce1e8b], eax; ret; 
0x000c33a1: add dword ptr [eax + eax], -0x7f; ret; 
0x0004e4c4: add dword ptr [eax - 0x77], eax; or al, 0x24; ret; 
0x000e23fe: add dword ptr [eax], 0; add byte ptr [esi - 0x7d], ah; clc; add dword ptr [ebp + edi*2 - 0x18], esi; ret; 
0x0007fed8: add dword ptr [eax], 0x3d8d0000; ret 0x8b; 
0x0005b031: add dword ptr [eax], 1; adc dword ptr [eax + 4], 0; ret; 
0x000b2d21: add dword ptr [eax], 4; pop ebx; pop esi; pop edi; ret; 
0x00101950: add dword ptr [eax], eax; add al, ch; mov al, byte ptr [0x8100009d]; ret; 
0x000ee432: add dword ptr [eax], eax; add al, ch; mov esi, 0x810001d2; ret; 
0x000e07e3: add dword ptr [eax], eax; add al, ch; or eax, 0x810002af; ret; 
0x00032105: add dword ptr [eax], eax; add al, ch; ret; 
0x000d4ee1: add dword ptr [eax], eax; add byte ptr [eax - 0x6bf0d106], al; ret 0xb60f; 
0x00036fc5: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x10; pop ebx; ret; 
0x000c2a25: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x10; pop esi; ret; 
0x00036fa4: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0x14; pop ebx; ret; 
0x00028557: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0xc; pop ebx; ret; 
0x000370c3: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00055b07: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 4; pop ebx; ret; 
0x00096777: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x000c2976: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 8; pop esi; ret; 
0x0010a681: add dword ptr [eax], eax; add byte ptr [eax], al; int 0x80; ret; 
0x00060b85: add dword ptr [eax], eax; add byte ptr [eax], al; lock xadd dword ptr [edx], eax; inc eax; ret; 
0x000ebdb3: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000bf69a: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x000c2761: add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000c2876: add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; ret; 
0x0002bb5e: add dword ptr [eax], eax; add byte ptr [eax], al; xor eax, eax; pop esi; ret; 
0x000f9725: add dword ptr [eax], eax; add byte ptr [eax], al; xor eax, eax; ret; 
0x0005a9eb: add dword ptr [eax], eax; add byte ptr [eax], al; xor edx, edx; pop ebp; ret; 
0x0004e0ce: add dword ptr [eax], eax; add byte ptr [eax], al; leave; ret; 
0x00036cf1: add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x00057a86: add dword ptr [eax], eax; add byte ptr [ebp + 0x18840fc9], al; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x00104e50: add dword ptr [eax], eax; add byte ptr [ebp + 0x3938247c], cl; ret 0x6677; 
0x000d11c8: add dword ptr [eax], eax; add byte ptr [ebp + 0x50674c0], al; sub byte ptr [ebx], al; add byte ptr [eax], al; ret; 
0x00088938: add dword ptr [eax], eax; add byte ptr [ebp - 0x3cd237d], cl; dec dword ptr [ecx + 0x57e82404]; ret 0xfff9; 
0x00088909: add dword ptr [eax], eax; add byte ptr [ebp - 0x3cd237d], cl; dec dword ptr [ecx - 0x7917dbfc]; ret 0xfff9; 
0x000688e0: add dword ptr [eax], eax; add byte ptr [ebp - 0x3fb857d], cl; dec dword ptr [ecx - 0x5017dbfc]; ret 0xfffb; 
0x000f4d9b: add dword ptr [eax], eax; add byte ptr [ebp - 0x76f98b37], al; mov bl, byte ptr [ecx + eax]; add byte ptr [eax], al; ret; 
0x000fcf50: add dword ptr [eax], eax; add byte ptr [ebx + 0x29102454], cl; ret 0x5489; 
0x000c876d: add dword ptr [eax], eax; add byte ptr [ebx + 0x2bf883], cl; add byte ptr [ecx - 0x2d17dbfc], cl; ret; 
0x00102f17: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b0cc4], al; ret; 
0x00108ba2: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b1cc4], al; ret; 
0x00066ceb: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00030fda: add dword ptr [eax], eax; add byte ptr [ebx - 0x7cc7dbac], cl; ret 0x8b01; 
0x000b5c6f: add dword ptr [eax], eax; add byte ptr [ebx - 0x7cd7dbac], cl; ret 0x8331; 
0x0005b905: add dword ptr [eax], eax; add byte ptr [ebx - 0x7cdfdbac], cl; ret 0x8901; 
0x00099dcf: add dword ptr [eax], eax; add byte ptr [ecx + esi*2 - 0x77], dh; ret 0xe283; 
0x000f4a55: add dword ptr [eax], eax; add byte ptr [ecx - 0x76e3dbbc], cl; ret 0x73e9; 
0x00104f18: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x448d; 
0x00104eb6: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x860f; 
0x000d010f: add dword ptr [eax], eax; add byte ptr [ecx], dh; rol byte ptr [eax + 0xf2eff78], cl; xchg eax, esp; ret 0xf685; 
0x000e134b: add dword ptr [eax], eax; add byte ptr [ecx], dh; rol byte ptr [eax - 0x6bf0f5c8], cl; ret 0x688d; 
0x0009d42c: add dword ptr [eax], eax; add byte ptr [esp + ecx*2 - 0x77], dh; ret 0xe283; 
0x000cfaf5: add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x00057a8e: add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x000ebae9: add dword ptr [eax], eax; add ecx, 0x65599; mov eax, dword ptr [ecx - 0x1fc]; mov eax, dword ptr [eax]; ret; 
0x000eba8d: add dword ptr [eax], eax; add ecx, 0x655f5; mov eax, dword ptr [ecx - 0x2a4]; mov eax, dword ptr [eax]; ret; 
0x000eba79: add dword ptr [eax], eax; add ecx, 0x65609; mov eax, dword ptr [ecx - 0x7c]; mov eax, dword ptr [eax]; ret; 
0x000eba65: add dword ptr [eax], eax; add ecx, 0x6561d; mov eax, dword ptr [ecx - 0x1b8]; mov eax, dword ptr [eax]; ret; 
0x000eba51: add dword ptr [eax], eax; add ecx, 0x65631; mov eax, dword ptr [ecx - 0xd4]; mov eax, dword ptr [eax]; ret; 
0x000eba3d: add dword ptr [eax], eax; add ecx, 0x65645; mov eax, dword ptr [ecx - 0xf0]; mov eax, dword ptr [eax]; ret; 
0x000e811c: add dword ptr [eax], eax; add esp, 4; pop ebx; ret; 
0x00122bfe: add dword ptr [eax], eax; cmpsd dword ptr [esi], dword ptr es:[edi]; xor edi, eax; dec eax; ret; 
0x0012182e: add dword ptr [eax], eax; dec esi; ret 0xfff4; 
0x0012286e: add dword ptr [eax], eax; inc ebp; mov ebp, 0xadf0fff7; add dword ptr [eax], eax; ret; 
0x00122bde: add dword ptr [eax], eax; mov al, byte ptr [0x28fff832]; ret; 
0x00121656: add dword ptr [eax], eax; mov dword ptr [esi - 0xc], edi; push dword ptr [eax + 0x1e]; add dword ptr [eax], eax; ret; 
0x0013efca: add dword ptr [eax], eax; out dx, al; ret 0xfff7; 
0x000eb93a: add dword ptr [eax], eax; pop ebx; ret; 
0x00122f6e: add dword ptr [eax], eax; push 0xa8fff8c0; fld qword ptr [ecx]; add byte ptr [eax], ah; ret 0xfff8; 
0x00137e1e: add dword ptr [eax], eax; ret 0xf54e; 
0x00121ab6: add dword ptr [eax], eax; ret 0xf56b; 
0x0013b62e: add dword ptr [eax], eax; ret 0xf63d; 
0x0012262e: add dword ptr [eax], eax; ret 0xf75c; 
0x00122ebe: add dword ptr [eax], eax; ret 0xf8ab; 
0x001446ba: add dword ptr [eax], eax; ret 0xf96f; 
0x001233e6: add dword ptr [eax], eax; ret 0xf9e0; 
0x00125206: add dword ptr [eax], eax; xchg eax, edi; mov ebp, 0xdc14fffe; add dword ptr [eax], eax; ret; 
0x00122f7e: add dword ptr [eax], eax; nop; ret 0xfff8; 
0x001398de: add dword ptr [eax], eax; pushfd; ret 0xfff5; 
0x0012165e: add dword ptr [eax], eax; ret; 
0x000523ff: add dword ptr [ebp + 0x11], esi; xor eax, eax; pop esi; pop edi; ret; 
0x000f3e27: add dword ptr [ebp + 0x5ee475c0], eax; lea esi, dword ptr [esi]; ret; 
0x00089584: add dword ptr [ebp + 2], esi; mov al, 4; add esp, 0x30; pop ebx; ret; 
0x000b424f: add dword ptr [ebp + eax - 0x7d], esi; ret 0xdc01; 
0x000e2405: add dword ptr [ebp + edi*2 - 0x18], esi; ret; 
0x0003e715: add dword ptr [ebp - 0x1b], esi; ret; 
0x0003e6ba: add dword ptr [ebp - 0x1e], esi; ret; 
0x000909f7: add dword ptr [ebp - 0x3e7efff9], ebp; mov dword ptr [esi], eax; or al, 0; mov eax, dword ptr [ecx + 0xb7c8]; ret; 
0x000e899e: add dword ptr [ebp - 0x47f98a40], eax; and dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000ea0a9: add dword ptr [ebp - 0xf], esi; xor eax, eax; nop; ret; 
0x0005fe8a: add dword ptr [ebx + 0x10c2454], ecx; ret 0xfa81; 
0x00060534: add dword ptr [ebx + 0x39042444], ecx; inc edi; adc al, 0x77; ret 0xf631; 
0x000ab6bf: add dword ptr [ebx + 0x568bae0c], ecx; or dh, dh; ret 0x7501; 
0x0006b4b4: add dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; ret; 
0x00028641: add dword ptr [ebx + 0x5e5b0cc4], eax; ret; 
0x000e9f07: add dword ptr [ebx + 0x5e5b10c4], eax; pop edi; ret; 
0x00084b3d: add dword ptr [ebx + 0x5e5b10c4], eax; ret; 
0x000e6235: add dword ptr [ebx + 0x5e5b18c4], eax; pop edi; ret; 
0x000d21b8: add dword ptr [ebx + 0x5e5b24c4], eax; pop edi; ret; 
0x000e9fb0: add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000c637a: add dword ptr [ebx + 0x87702f8], eax; mov eax, dword ptr [ecx + eax*4 - 0x38840]; ret; 
0x000c6067: add dword ptr [ebx + 0x87703f8], eax; mov eax, dword ptr [ecx + eax*4 - 0x38834]; ret; 
0x000c54db: add dword ptr [ebx + 0x87717f8], eax; mov eax, dword ptr [ecx + eax*4 - 0x38824]; ret; 
0x001432f0: add dword ptr [ebx + 0xa], esp; push cs; adc al, 0x41; ret; 
0x0003e72e: add dword ptr [ebx + 0xb7716f8], eax; mov eax, dword ptr [esp + 8]; shl eax, 4; add eax, 0x14; ret; 
0x0013e09e: add dword ptr [ebx + eax*2], 0xe; and byte ptr [edx], al; mov eax, 0x41100e0a; ret; 
0x00130bae: add dword ptr [ebx + eax*2], 0xe; dec esp; add al, byte ptr [ebx + 0x41100e0a]; ret; 
0x001253d2: add dword ptr [ebx + eax*2], 0xe; inc esp; add bl, byte ptr [esi + 0x41100e0a]; ret; 
0x00130cb2: add dword ptr [ebx + eax*2], 0xe; push eax; add cl, byte ptr [ebx + 0x41100e0a]; ret; 
0x00147d66: add dword ptr [ebx + eax*2], 0xe; sbb byte ptr [esi + ecx + 0x10], bh; inc ecx; ret; 
0x0012af2a: add dword ptr [ebx + eax*2], 0xe; sbb byte ptr [esi + ecx + 0x10], dh; inc ecx; ret; 
0x00128fb2: add dword ptr [ebx + eax*2], 0xe; xor al, 2; mov edx, 0x41100e0a; ret; 
0x000282cc: add dword ptr [ebx - 0x108af908], eax; pop esi; ret; 
0x00077793: add dword ptr [ebx - 0x17cfe3e], eax; push dword ptr [ebp - 0x19]; pop esi; pop edi; ret; 
0x00077796: add dword ptr [ebx - 0x188a0002], eax; pop esi; pop edi; ret; 
0x000ebb29: add dword ptr [ebx - 0x3b7c000d], 4; pop ebx; ret; 
0x000777c7: add dword ptr [ebx - 0x49f0fe40], eax; or cl, byte ptr [eax + 0x75c98408]; int1; ret; 
0x0004ef16: add dword ptr [ebx - 0x7cdfdbac], ecx; ret 0x8304; 
0x000ea0f4: add dword ptr [ebx - 0x7d], esi; ret 0x8301; 
0x00102550: add dword ptr [ebx - 0x7df0fd08], eax; ret; 
0x0013e251: add dword ptr [ebx], 0x43; push cs; adc byte ptr [eax + 0xe], bh; or al, 0x41; ret; 
0x001438b1: add dword ptr [ebx], 0x43; push cs; adc byte ptr [eax + 0xe], ch; or al, 0x41; ret; 
0x0012c4fd: add dword ptr [ebx], 0x43; push cs; adc byte ptr [ebp + 0xe], ch; or al, 0x41; ret; 
0x00130fd1: add dword ptr [ebx], 0x43; push cs; adc byte ptr [ebp + 0xe], dh; or al, 0x41; ret; 
0x00128e05: add dword ptr [ebx], 0x43; push cs; adc byte ptr [ebx + 0xe], bh; or al, 0x41; ret; 
0x001304dd: add dword ptr [ebx], 0x43; push cs; adc byte ptr [ebx + 0xe], ch; or al, 0x41; ret; 
0x00140795: add dword ptr [ebx], 0x43; push cs; adc byte ptr [ebx + 0xe], dh; or al, 0x41; ret; 
0x001275a9: add dword ptr [ebx], 0x43; push cs; adc byte ptr [ecx + 0xe], ch; or al, 0x41; ret; 
0x00148bd9: add dword ptr [ebx], 0x43; push cs; adc byte ptr [edi + 0xe], ah; or al, 0x41; ret; 
0x001276ad: add dword ptr [ebx], 0x43; push cs; adc byte ptr [edi + 0xe], ch; or al, 0x41; ret; 
0x00141b4d: add dword ptr [ebx], 0x43; push cs; adc byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x00134de1: add dword ptr [ebx], 0x43; push cs; adc byte ptr [edx + 0xe], dh; or al, 0x41; ret; 
0x00147a95: add dword ptr [ebx], 0x43; push cs; adc byte ptr [edx + ecx + 0xe], bh; or al, 0x41; ret; 
0x00129151: add dword ptr [ebx], 0x43; push cs; adc byte ptr [edx + ecx + 0xe], bl; or al, 0x41; ret; 
0x00144f51: add dword ptr [ebx], 0x43; push cs; adc byte ptr [esi + 0xe], ah; or al, 0x41; ret; 
0x0013efb1: add dword ptr [ebx], 0x43; push cs; adc byte ptr [esi + 0xe], ch; or al, 0x41; ret; 
0x00128b71: add dword ptr [ebx], 0x43; push cs; adc byte ptr [esi + 0xe], dh; or al, 0x41; ret; 
0x0013aed9: add dword ptr [ebx], 0x43; push cs; and al, 2; push 0x410c0e0a; ret; 
0x00138b75: add dword ptr [ebx], 0x43; push cs; and byte ptr [eax + 0xe], bh; or al, 0x41; ret; 
0x00125fa9: add dword ptr [ebx], 0x43; push cs; and byte ptr [edx + ecx + 0xe], bh; or al, 0x41; ret; 
0x0013581d: add dword ptr [ebx], 0x43; push cs; and byte ptr [edx + ecx + 0xe], dh; or al, 0x41; ret; 
0x0014cea1: add dword ptr [ebx], 0x43; push cs; dec eax; add al, byte ptr [edi + 0x410c0e0a]; ret; 
0x0013b0d1: add dword ptr [ebx], 0x43; push cs; dec eax; add bl, byte ptr [esi + 0x410c0e0a]; ret; 
0x0012ab09: add dword ptr [ebx], 0x43; push cs; inc esp; add ah, byte ptr [ebx + 0x410c0e0a]; ret; 
0x00138bc5: add dword ptr [ebx], 0x43; push cs; push 0x410c0e7f; ret; 
0x0012eaed: add dword ptr [ebx], 0x43; push cs; sbb byte ptr [eax + 0xe], dh; or al, 0x41; ret; 
0x00141d65: add dword ptr [ebx], 0x43; push cs; sbb byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x0012a0c5: add dword ptr [ebx], 0x43; push cs; sbb byte ptr [edx], al; push 0x410c0e0a; ret; 
0x0012779d: add dword ptr [ebx], 0x43; push cs; sbb byte ptr [esi + 0xe], ch; or al, 0x41; ret; 
0x00143c39: add dword ptr [ebx], 0x43; push cs; sbb byte ptr [esi + 0xe], dh; or al, 0x41; ret; 
0x0012d3e9: add dword ptr [ebx], 0x43; push cs; sub byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x0012aad9: add dword ptr [ebx], 0x43; push cs; xor byte ptr [edx], al; or cl, byte ptr [0x410c]; ret; 
0x0012eb19: add dword ptr [ebx], 0x5f; ret; 
0x00126f06: add dword ptr [ebx], 0x61; ret; 
0x00139d2a: add dword ptr [ebx], 0x62; ret; 
0x0013bdb2: add dword ptr [ebx], 0x65; ret; 
0x0012fef6: add dword ptr [ebx], 0x6a; or al, ch; ret; 
0x00127c0a: add dword ptr [ebx], 0x6a; ret; 
0x0013bd8e: add dword ptr [ebx], 0x6c; ret; 
0x00135d8d: add dword ptr [ebx], 0x70; ret; 
0x0014afda: add dword ptr [ebx], 0x77; ret; 
0x00135aa2: add dword ptr [ebx], 0xa; push cs; adc al, 0x41; ret; 
0x00147949: add dword ptr [ebx], 2; bound ecx, qword ptr [edx]; ret; 
0x0013ee04: add dword ptr [ebx], eax; add cl, byte ptr es:[edx]; push cs; adc al, 0x41; ret; 
0x0014564c: add dword ptr [ebx], eax; add dword ptr [edx], 0x41140e0a; ret; 
0x0013f7d0: add dword ptr [ebx], eax; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00140f60: add dword ptr [ebx], eax; add dword ptr cs:[edx], ecx; push cs; adc al, 0x41; ret; 
0x00128dd0: add dword ptr [ebx], eax; add dword ptr gs:[edx], ecx; push cs; adc al, 0x41; ret; 
0x00144264: add dword ptr [ebx], eax; cmp eax, 0x140e0a03; inc ecx; ret; 
0x0013f898: add dword ptr [ebx], eax; imul eax, dword ptr [ecx], 0x41140e0a; ret; 
0x00140634: add dword ptr [ebx], eax; jo 0x14063a; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014b674: add dword ptr [ebx], eax; mov al, byte ptr [edx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014aae0: add dword ptr [ebx], eax; mov bh, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001432ac: add dword ptr [ebx], eax; mov bl, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126e54: add dword ptr [ebx], eax; mov dl, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00147ddc: add dword ptr [ebx], eax; mov eax, dword ptr [0x140e0a01]; inc ecx; ret; 
0x00144170: add dword ptr [ebx], eax; pop es; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013f814: add dword ptr [ebx], eax; push 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013e4a4: add dword ptr [ebx], eax; push 4; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001302b0: add dword ptr [ebx], eax; sbb eax, 0x140e0a01; inc ecx; ret; 
0x0012a320: add dword ptr [ebx], eax; sbb eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013ee48: add dword ptr [ebx], eax; sub al, 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00125b78: add dword ptr [ebx], eax; sub byte ptr [ebx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00130140: add dword ptr [ebx], eax; sub eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012db30: add dword ptr [ebx], eax; xchg byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013b7cc: add dword ptr [ebx], eax; xor al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013e360: add dword ptr [ebx], eax; xor eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00141dd4: add dword ptr [ebx], eax; cwde; add ecx, dword ptr [esi]; adc al, 0x41; ret; 
0x0003599a: add dword ptr [ecx + 0x2b60f08], ecx; add esp, 4; pop ebx; ret; 
0x000b4d6b: add dword ptr [ecx + 0x395c2444], ecx; ret 0x8e0f; 
0x00035bef: add dword ptr [ecx + 0x51ff2404], ecx; or al, 0xc9; ret; 
0x00089b74: add dword ptr [ecx + 0x63e82404], ecx; ret 0xfff9; 
0x000e8967: add dword ptr [ecx + 0x8e9c1d1], ecx; mov byte ptr [eax + 2], cl; mov byte ptr [eax + 3], dl; ret; 
0x000b6784: add dword ptr [ecx + eax - 0x56], esi; pop edi; ret; 
0x0002d360: add dword ptr [ecx + ecx - 0x7d], esi; ret 0x8b04; 
0x00076fae: add dword ptr [ecx - 0x3fcefbaf], ecx; ret; 
0x00082786: add dword ptr [ecx - 0x77], esi; ret 0xca0f; 
0x000dd53d: add dword ptr [ecx - 0x7ab7dbbc], ecx; ror byte ptr [edi], 0x84; ret; 
0x000a9516: add dword ptr [ecx - 0x7c172efe], ecx; ret 0x8b04; 
0x000590a1: add dword ptr [ecx - 0x7cd3dbb4], ecx; ret 0x3901; 
0x000be89e: add dword ptr [ecx], 0x838d0000; ret 0xfc6f; 
0x0010a1a2: add dword ptr [ecx], eax; add edi, esi; ret 0x8080; 
0x000fb663: add dword ptr [ecx], eax; add edi, esi; shl byte ptr [ecx], 1; ret 0xc2f7; 
0x00129f0d: add dword ptr [ecx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00067ec6: add dword ptr [ecx], ebx; rol byte ptr [ebx + 0x548b02e0], 0x24; adc byte ptr [ecx], ch; ret 0x5489; 
0x000b484c: add dword ptr [ecx], ebx; sal bh, 0xd0; add eax, 4; leave; ret; 
0x0004e29f: add dword ptr [ecx], ebx; sal bh, 0xd0; add eax, 4; ret; 
0x000e9525: add dword ptr [ecx], ecx; ret 0x543b; 
0x0003bd02: add dword ptr [ecx], edi; ret 0x1373; 
0x000597fb: add dword ptr [ecx], edi; ret 0x2374; 
0x00059d97: add dword ptr [ecx], edi; ret 0x6d74; 
0x000a6f6a: add dword ptr [ecx], edi; ret 0x8d0f; 
0x0003bd15: add dword ptr [ecx], edi; ret 0xed72; 
0x00059877: add dword ptr [ecx], edi; ret 0xf472; 
0x000323ac: add dword ptr [ecx], edi; ret 0xf675; 
0x000f8215: add dword ptr [ecx], edi; ret 0xf77f; 
0x0002df7d: add dword ptr [ecx], edi; sal byte ptr [ebp - 0xd], 1; ret; 
0x0004e312: add dword ptr [ecx], edi; sal dword ptr [ebp - 0xe], 0x5b; pop esi; pop edi; ret; 
0x00104345: add dword ptr [ecx], edi; sal dword ptr [edi - 0xb], 1; ret; 
0x000a5f61: add dword ptr [ecx], esi; sal dh, cl; rcr dword ptr [edi], 0xf; xchg eax, ebp; ret 0xd789; 
0x00082410: add dword ptr [edi + edx - 0x77], esi; ret 0xca0f; 
0x000eacfe: add dword ptr [edi], ecx; mov bh, 0xc0; ret; 
0x000613a1: add dword ptr [edi], ecx; xchg eax, edx; ret 0x920f; 
0x00083411: add dword ptr [edi], ecx; xchg eax, esp; ret 0x1689; 
0x00083ffd: add dword ptr [edi], ecx; xchg eax, esp; ret 0x1789; 
0x0012c3fe: add dword ptr [edx + eax], 0x55; ret; 
0x00149cce: add dword ptr [edx + eax], 0x6c; ret; 
0x0012bf62: add dword ptr [edx + eax], 0x79; ret; 
0x000483a9: add dword ptr [edx + ebp - 0x77], esi; ret 0xeac1; 
0x0002cd6e: add dword ptr [edx + ebp*8 - 0x7d], esi; ret 0xc704; 
0x0012e246: add dword ptr [edx + edi*2], 0xa; ret; 
0x0004ea17: add dword ptr [edx + esi*4 - 0x77], esi; ret 0x748d; 
0x00082405: add dword ptr [edx - 0x77], esi; ret 0xca0f; 
0x0014564e: add dword ptr [edx], 0x41140e0a; ret; 
0x0012749c: add dword ptr [edx], 0x43; push cs; adc byte ptr [esi + ecx + 8], ah; inc ecx; ret; 
0x00136538: add dword ptr [edx], 0x43; push cs; inc esp; add dl, byte ptr [edx + 0x41080e0a]; ret; 
0x00147ae0: add dword ptr [edx], 0x43; push cs; or al, 2; mov esi, 0x41080e0a; ret; 
0x00128ed4: add dword ptr [edx], 0x43; push cs; sbb byte ptr [esi + ecx + 8], bh; inc ecx; ret; 
0x001311dc: add dword ptr [edx], 0x43; push cs; sbb byte ptr [esi + ecx + 8], ch; inc ecx; ret; 
0x00125b44: add dword ptr [edx], 0x43; push cs; sbb byte ptr [esi + ecx + 8], dh; inc ecx; ret; 
0x00136d8c: add dword ptr [edx], 0x43; push cs; xor byte ptr [edx], al; or cl, byte ptr [0x4108]; ret; 
0x0013eed0: add dword ptr [edx], 0x43; push cs; xor byte ptr [edx], al; push 0x41080e0a; ret; 
0x00131a98: add dword ptr [edx], 0x51; ret; 
0x00137420: add dword ptr [edx], 0x59; ret; 
0x00125c70: add dword ptr [edx], 0x5e; ret; 
0x0013214c: add dword ptr [edx], 0x61; ret; 
0x00125c54: add dword ptr [edx], 0x62; ret; 
0x00136034: add dword ptr [edx], 0x63; ret; 
0x001449dc: add dword ptr [edx], 0x64; ret; 
0x0012b090: add dword ptr [edx], 0x66; ret; 
0x0013202c: add dword ptr [edx], 0x73; ret; 
0x001476e4: add dword ptr [edx], 2; dec esp; ret; 
0x0012ac18: add dword ptr [edx], 2; pop edx; ret; 
0x0012c790: add dword ptr [edx], eax; dec eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00128236: add dword ptr [edx], eax; dec eax; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012ddba: add dword ptr [edx], eax; dec ebx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012acc8: add dword ptr [edx], eax; imul ecx, dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x001416fe: add dword ptr [edx], eax; imul ecx, dword ptr [edx], 0xe; or al, 0x41; ret; 
0x00135658: add dword ptr [edx], eax; inc esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014a6de: add dword ptr [edx], eax; insb byte ptr es:[edi], dx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00142c0c: add dword ptr [edx], eax; mov bl, 0xa; push cs; adc al, 0x41; ret; 
0x00133c0c: add dword ptr [edx], eax; mov byte ptr [edx], cl; push cs; adc al, 0x41; ret; 
0x001348cc: add dword ptr [edx], eax; mov ch, 0xa; push cs; adc al, 0x41; ret; 
0x0013b460: add dword ptr [edx], eax; mov cl, 0xa; push cs; adc al, 0x41; ret; 
0x0013169c: add dword ptr [edx], eax; mov cs, word ptr [edx]; push cs; adc al, 0x41; ret; 
0x0014b2d0: add dword ptr [edx], eax; mov dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00131b50: add dword ptr [edx], eax; mov ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x00141478: add dword ptr [edx], eax; mov esi, 0x41140e0a; ret; 
0x00142594: add dword ptr [edx], eax; or cl, byte ptr [0x4114]; ret; 
0x00132570: add dword ptr [edx], eax; pop eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00131c40: add dword ptr [edx], eax; pop ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013178c: add dword ptr [edx], eax; pop esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001338ac: add dword ptr [edx], eax; push ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014b328: add dword ptr [edx], eax; push edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014a4dc: add dword ptr [edx], eax; ror byte ptr [edx], cl; push cs; adc al, 0x41; ret; 
0x001481fc: add dword ptr [edx], eax; ror dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x0013ec30: add dword ptr [edx], eax; ror dword ptr [edx], 1; push cs; adc al, 0x41; ret; 
0x0014ab3c: add dword ptr [edx], eax; test byte ptr [edx], 0xe; adc al, 0x41; ret; 
0x00145ca4: add dword ptr [edx], eax; xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b3f0: add dword ptr [edx], eax; clc; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00060af9: add dword ptr [edx], eax; ret; 
0x00132b9c: add dword ptr [edx], eax; sahf; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001252de: add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00126ebe: add dword ptr [edx], ecx; ret; 
0x000500e6: add dword ptr [esi + 0x5f], ebx; pop ebp; ret; 
0x0012746e: add dword ptr [esi + eax*2], 0xe; test al, 0x10; add al, byte ptr [esi + 0x41100e0a]; ret; 
0x0012e0d3: add dword ptr [esi + eax*4], 3; xchg dword ptr [edx], eax; inc ebx; ret; 
0x00037093: add dword ptr [esi + ecx + 0x72], esi; xor esi, dword ptr [ecx]; rol byte ptr [ebx - 0x6bf0fd06], 0xc0; add esp, 0xc; ret; 
0x000ebb06: add dword ptr [esi + edi*8], 0x548bffff; and al, 4; mov dword ptr [eax], edx; ret; 
0x000ebaf2: add dword ptr [esi + edi*8], 0x8bffff; ret; 
0x00127c5c: add dword ptr [esi], 0xa; ret; 
0x000364db: add dword ptr [esi], 0xc031ffff; add esp, 0x10; pop ebx; pop esi; ret; 
0x00136f06: add dword ptr [esi], ecx; adc al, 0x41; ret; 
0x000b2cc3: add dword ptr [esp + eax + 0x5b], esi; pop esi; pop edi; ret; 
0x00142a24: add dword ptr [esp + edi*2], 0xa; ret; 
0x00060c01: add dword ptr [esp - 4], 0; ret; 
0x0013dcd2: add dword ptr [esp], 0xa; ret; 
0x00136431: add dword ptr cs:[edx], ecx; push cs; adc al, 0x41; ret; 
0x0013def5: add dword ptr ds:[edx], ecx; ret; 
0x0013ecb1: add dword ptr fs:[edx], ecx; push cs; adc al, 0x41; ret; 
0x00128dd2: add dword ptr gs:[edx], ecx; push cs; adc al, 0x41; ret; 
0x001292f5: add dword ptr ss:[edx], ecx; push cs; adc al, 0x41; ret; 
0x00144e74: add eax, 0x10a80e46; add dl, byte ptr [eax + 0x41140e0a]; ret; 
0x0012d004: add eax, 0x10c40e46; add bl, dh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00145ad0: add eax, 0x10cc0e46; add ch, ah; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012a254: add eax, 0x10e00e46; add bl, byte ptr [ebp + 0x41140e0a]; ret; 
0x0000dc0d: add eax, 0x120000; or byte ptr [eax], al; ret 0xb; 
0x0003e73b: add eax, 0x14; ret; 
0x00021946: add eax, 0x15180800; add byte ptr [edi], al; rol dword ptr [0x15180c00], 0; pop es; ret; 
0x0002194e: add eax, 0x15180c00; add byte ptr [edi], al; ret; 
0x00142c08: add eax, 0x1840e43; add dh, byte ptr [ebx + 0x41140e0a]; ret; 
0x00133c08: add eax, 0x1880e43; add cl, byte ptr [eax + 0x41140e0a]; ret; 
0x00133770: add eax, 0x1880e43; add cl, byte ptr [ebx + 0x41140e0a]; ret; 
0x00131b4c: add eax, 0x18c0e43; add cl, byte ptr [ebx + 0x41140e0a]; ret; 
0x00148608: add eax, 0x18c40e46; add al, byte ptr [ebp + 0x41140e0a]; ret; 
0x0005608e: add eax, 0x19ba; add byte ptr [ecx], bh; ret 0x840f; 
0x00131698: add eax, 0x1a80e46; add cl, byte ptr [esi + 0x41140e0a]; ret; 
0x00056074: add eax, 0x1aba; add byte ptr [ecx], bh; ret 0x840f; 
0x00143b6c: add eax, 0x1ac0e46; add dh, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x00141474: add eax, 0x1b40e46; add bh, byte ptr [esi + 0x41140e0a]; ret; 
0x000e88e1: add eax, 0x1c0; ret; 
0x00129a14: add eax, 0x1c00e46; add edi, dword ptr [eax + 3]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014344c: add eax, 0x1c80e46; add al, dh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00141e50: add eax, 0x1c80e46; add esi, dword ptr [ebx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014aadc: add eax, 0x1c80e46; add esi, dword ptr [edi + 0x140e0a01]; inc ecx; ret; 
0x0005605a: add eax, 0x1cba; add byte ptr [ecx], bh; ret 0x840f; 
0x001348c8: add eax, 0x1e00e46; add dh, byte ptr [ebp + 0x41140e0a]; ret; 
0x0012b7c0: add eax, 0x1f80e46; add dh, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x000ead9e: add eax, 0x20; ret; 
0x0005be2d: add eax, 0x21; ret; 
0x0013c72c: add eax, 0x2200e43; mov eax, dword ptr [0x41140e0a]; ret; 
0x0012ff50: add eax, 0x2200e43; or cl, byte ptr [0x4114]; ret; 
0x0012b454: add eax, 0x2200e43; push 0x41140e0a; ret; 
0x0012c010: add eax, 0x2200e43; ret 0xe0a; 
0x0014b514: add eax, 0x2240e43; mov al, byte ptr [0x41140e0a]; ret; 
0x001431e8: add eax, 0x2240e43; mov eax, dword ptr [0x41140e0a]; ret; 
0x0013ebd4: add eax, 0x2240e43; mov ebx, 0x41140e0a; ret; 
0x001468c0: add eax, 0x2240e43; mov ecx, 0x41140e0a; ret; 
0x0014a93c: add eax, 0x2240e43; mov edx, 0x41140e0a; ret; 
0x0014918c: add eax, 0x2240e43; or cl, byte ptr [0x4114]; ret; 
0x00138628: add eax, 0x2280e43; mov byte ptr [0x41140e0a], al; ret; 
0x00134414: add eax, 0x2280e43; mov dword ptr [0x41140e0a], eax; ret; 
0x00142c48: add eax, 0x2280e43; mov ebp, 0x41140e0a; ret; 
0x00131748: add eax, 0x2280e43; mov edi, 0x41140e0a; ret; 
0x0013ae1c: add eax, 0x2280e43; or cl, byte ptr [0x4114]; ret; 
0x00144a08: add eax, 0x2280e43; push 0x41140e0a; ret; 
0x0013b404: add eax, 0x2280e43; ret 0xe0a; 
0x0013cf84: add eax, 0x22c0e43; mov esi, 0x41140e0a; ret; 
0x001279e8: add eax, 0x22c0e43; mov esp, 0x41140e0a; ret; 
0x001496d4: add eax, 0x22d80e46; add bh, byte ptr [eax + 0x41140e0a]; ret; 
0x0014bc28: add eax, 0x2300e43; mov edi, 0x41140e0a; ret; 
0x00134ce4: add eax, 0x2300e43; mov esi, 0x41140e0a; ret; 
0x0012d994: add eax, 0x2300e43; ret 0xe0a; 
0x001451d0: add eax, 0x2380e43; mov al, byte ptr [0x41140e0a]; ret; 
0x0014cbcc: add eax, 0x2380e43; mov byte ptr [0x41140e0a], al; ret; 
0x001292b0: add eax, 0x23c0e43; mov ebp, 0x41140e0a; ret; 
0x00127abc: add eax, 0x23c0e43; ret 0xe0a; 
0x001291b0: add eax, 0x2400e43; cmpsb byte ptr [esi], byte ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00136a58: add eax, 0x2400e43; mov edx, 0x41140e0a; ret; 
0x0013e558: add eax, 0x2400e43; wait; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001373c0: add eax, 0x2440e43; lodsb al, byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013f5e0: add eax, 0x2440e43; mov esi, 0x41140e0a; ret; 
0x00145588: add eax, 0x2440e43; mov esp, 0x41140e0a; ret; 
0x001402a0: add eax, 0x2440e43; movsb byte ptr es:[edi], byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014c038: add eax, 0x2440e43; or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x00136b98: add eax, 0x2440e43; ret 0xe0a; 
0x00137eb8: add eax, 0x2440e43; popfd; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000ffa65: add eax, 0x247c8b00; sub byte ptr [ebx - 0x74d3db94], cl; inc ebp; or al, 0x89; ret 0xc166; 
0x0013668c: add eax, 0x2480e43; mov al, 0xa; push cs; adc al, 0x41; ret; 
0x00125afc: add eax, 0x2480e43; mov edi, 0x41140e0a; ret; 
0x00129964: add eax, 0x2480e43; movsd dword ptr es:[edi], dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013768c: add eax, 0x24c0e43; cmpsb byte ptr [esi], byte ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00135ef0: add eax, 0x24c0e43; mov al, 0xa; push cs; adc al, 0x41; ret; 
0x00135eb0: add eax, 0x24c0e43; scasd eax, dword ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001449ac: add eax, 0x24c0e43; wait; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012ab50: add eax, 0x2500e43; lodsb al, byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00137928: add eax, 0x2500e43; mov al, 0xa; push cs; adc al, 0x41; ret; 
0x0013f638: add eax, 0x2500e43; mov cs, word ptr [edx]; push cs; adc al, 0x41; ret; 
0x001378e8: add eax, 0x2500e43; scasb al, byte ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012a540: add eax, 0x2500e43; ret; 
0x00146d08: add eax, 0x2500e43; sahf; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00137bec: add eax, 0x2540e43; cwde; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00137c2c: add eax, 0x2540e43; wait; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00138000: add eax, 0x2580e43; ret 0xe0a; 
0x00134ba0: add eax, 0x2600e43; mov ch, 0xa; push cs; adc al, 0x41; ret; 
0x00125398: add eax, 0x2600e43; xchg eax, edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013f3a0: add eax, 0x2640e43; cwde; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126454: add eax, 0x2680e43; in eax, 0xa; push cs; adc al, 0x41; ret; 
0x00144d9c: add eax, 0x2680e43; mov cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x00126774: add eax, 0x2680e43; outsd dx, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b718: add eax, 0x2680e43; test dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00143228: add eax, 0x26c0e43; test al, 0xa; push cs; adc al, 0x41; ret; 
0x00131300: add eax, 0x26c0e43; cwde; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00132498: add eax, 0x2740e43; dec ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013c6ec: add eax, 0x2740e43; int 0xa; push cs; adc al, 0x41; ret; 
0x0013e460: add eax, 0x2740e43; test byte ptr [edx], 0xe; adc al, 0x41; ret; 
0x0014c174: add eax, 0x2780e43; mov eax, dword ptr [0x41140e0a]; ret; 
0x00141e10: add eax, 0x2780e43; ror byte ptr [edx], cl; push cs; adc al, 0x41; ret; 
0x0014a8fc: add eax, 0x2900e46; add al, byte ptr [edx + 0x41140e0a]; ret; 
0x00140e08: add eax, 0x2980e46; add edi, dword ptr [ebp + 4]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012732c: add eax, 0x2ac0e46; add dh, byte ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x001483fc: add eax, 0x2ac0e46; add eax, dword ptr [edx + 0x140e0a02]; inc ecx; ret; 
0x00146da0: add eax, 0x2b00e46; add dl, byte ptr [ebx + 0x41140e0a]; ret; 
0x0012736c: add eax, 0x2c40e46; add bh, byte ptr [esi + 0x41140e0a]; ret; 
0x00140720: add eax, 0x2c40e46; add esp, dword ptr [ebp + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000d11a9: add eax, 0x2e8; ret; 
0x000315a1: add eax, 0x3039; mov dword ptr [ecx + 0x1314], eax; and eax, 0x7fffffff; ret; 
0x000d11cf: add eax, 0x328; ret; 
0x0014c490: add eax, 0x3300e43; imul eax, dword ptr [ecx], 0x41140e0a; ret; 
0x00139f98: add eax, 0x3300e43; test dword ptr [ecx], 0x41140e0a; ret; 
0x0013cb0c: add eax, 0x3340e43; mov dword ptr [ecx], 0x41140e0a; ret; 
0x001303b0: add eax, 0x3480e43; ret 0xa02; 
0x0013e420: add eax, 0x3740e43; and al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00143a1c: add eax, 0x3740e43; sbb eax, dword ptr [edx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012ab90: add eax, 0x3780e43; and al, 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012a428: add eax, 0x3780e43; arpl word ptr [ecx], ax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014c4d0: add eax, 0x3780e43; cmp eax, 0x140e0a04; inc ecx; ret; 
0x00147eec: add eax, 0x3780e43; fld qword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012a3c4: add eax, 0x37c0e43; mov es, word ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00056040: add eax, 0x3ba; add byte ptr [ecx], bh; ret 0x840f; 
0x00129981: add eax, 0x41140e0a; ret; 
0x0012fa40: add eax, 0x418c0e46; add dh, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x00132238: add eax, 0x4a40e46; add bh, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x00005781: add eax, 0x4ad0000; add byte ptr [eax], al; ret 5; 
0x000560a8: add eax, 0x4ba; add byte ptr [ecx], bh; ret 0x840f; 
0x0012e2cc: add eax, 0x4c80e46; add al, byte ptr [ebx + 0x41140e0a]; ret; 
0x001425d0: add eax, 0x4c80e46; add dl, byte ptr [edx + 0x41140e0a]; ret; 
0x001434a4: add eax, 0x4cc0e46; add ebx, dword ptr [ecx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001346d8: add eax, 0x4f00e46; add ebp, dword ptr [eax + 0x140e0a01]; inc ecx; ret; 
0x00096730: add eax, 0x5b04c483; ret; 
0x0005a1bf: add eax, 0x5b08c483; ret; 
0x00065965: add eax, 0x5b10c483; ret; 
0x000c5458: add eax, 0x5b18c483; ret; 
0x00066be4: add eax, 0x5b24c483; ret; 
0x0012a4b8: add eax, 0x5c40e46; add esi, dword ptr [esp + eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00126f04: add eax, 0x61038341; ret; 
0x00139d28: add eax, 0x62038344; ret; 
0x0013bdb0: add eax, 0x65038344; ret; 
0x00127c08: add eax, 0x6a038344; ret; 
0x0012fef4: add eax, 0x6a038347; or al, ch; ret; 
0x0013bd8c: add eax, 0x6c038344; ret; 
0x0012e990: add eax, 0x74480e43; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0005a1ba: add eax, 0x75003880; add eax, 0x5b08c483; ret; 
0x0014914c: add eax, 0x755c0e43; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012e9d0: add eax, 0x76180e43; push cs; adc al, 0x41; ret; 
0x0014afd8: add eax, 0x77038344; ret; 
0x0012f93c: add eax, 0x77180e43; push cs; adc al, 0x41; ret; 
0x0012df54: add eax, 0x77480e43; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013c63c: add eax, 0x77500e43; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00137f10: add eax, 0x78440e43; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001400f0: add eax, 0x7c500e43; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0005c932: add eax, 0x80000000; mov dword ptr [esp + 4], eax; fld qword ptr [esp]; leave; ret; 
0x0005c90f: add eax, 0x80000000; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x001068ef: add eax, 0x8100004e; ret; 
0x000e57ef: add eax, 0x8100025f; ret; 
0x000d6bef: add eax, 0x8100034b; ret; 
0x000d0fef: add eax, 0x810003a7; ret; 
0x000bf4ef: add eax, 0x810004c2; ret; 
0x000ba3ef: add eax, 0x81000513; ret; 
0x0005c5ef: add eax, 0x81000af1; ret; 
0x00044fef: add eax, 0x81000c67; ret; 
0x000427ef: add eax, 0x81000c8f; ret; 
0x0013e0d0: add eax, 0x83038645; add al, 2; mov byte ptr [edx], cl; ret; 
0x00127070: add eax, 0x86038746; add al, 0x83; add eax, 0xa011903; ret; 
0x0012f03c: add eax, 0x86038746; add al, 0x83; add eax, 0xa011d03; ret; 
0x00126eb4: add eax, 0x86038746; add al, 0x83; add eax, 0xa019e03; ret; 
0x00126fdc: add eax, 0x86038746; add al, 0x83; add eax, 0xa01bf03; ret; 
0x0012afb8: add eax, 0x86038746; add al, 0x83; add eax, 0xa01fe03; ret; 
0x0012b0c4: add eax, 0x86038746; add al, 0x83; add eax, 0xa025f03; ret; 
0x0012712c: add eax, 0x86038746; add al, 0x83; add eax, 0xa02a103; ret; 
0x0013b92c: add eax, 0x86038749; add al, 0x83; add eax, 0xa011b03; ret; 
0x0013deec: add eax, 0x86038749; add al, 0x83; add eax, 0xa013e03; ret; 
0x0013dd78: add eax, 0x86038749; add al, 0x83; add eax, 0xa014c03; ret; 
0x0013dd1c: add eax, 0x86038749; add al, 0x83; add eax, 0xa015603; ret; 
0x0013865c: add eax, 0x86038749; add al, 0x83; add eax, 0xa015d03; ret; 
0x0014999c: add eax, 0x86038749; add al, 0x83; add eax, 0xa019e03; ret; 
0x0013b994: add eax, 0x86038749; add al, 0x83; add eax, 0xa022a03; ret; 
0x001427b0: add eax, 0x86038749; add al, 0x83; add eax, 0xa030503; ret; 
0x0013de04: add eax, 0x86038749; add al, 0x83; add eax, 0xa03a003; ret; 
0x00126c78: add eax, 0x86038749; add al, 0x83; add eax, 0xa053b03; ret; 
0x0013d834: add eax, 0x86038749; add al, 0x83; add eax, 0xa068003; ret; 
0x00139244: add eax, 0x8603874c; add al, 0x83; add eax, 0xa013503; ret; 
0x00134730: add eax, 0x8603874c; add al, 0x83; add eax, 0xa01ad03; ret; 
0x001348fc: add eax, 0x8603874c; add al, 0x83; add eax, 0xa024003; ret; 
0x0012e940: add eax, 0x8603874c; add al, 0x83; add eax, 0xa026b03; ret; 
0x0013d8b0: add eax, 0x8603874c; add al, 0x83; add eax, 0xa050803; ret; 
0x00072367: add eax, 0x89ffffef; ret 0x16e9; 
0x000a5788: add eax, 0x89ffffff; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x00143eb4: add eax, 0x8b00e46; add al, byte ptr [eax + 0x41140e0a]; ret; 
0x00143e00: add eax, 0x8b40e46; add dl, byte ptr [ebp + 0x41140e0a]; ret; 
0x0012fad8: add eax, 0x8c40e46; add ch, bh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00142738: add eax, 0x8c40e46; add ecx, dword ptr [ecx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014277c: add eax, 0x8c80e46; add ch, byte ptr [ecx + 0x41140e0a]; ret; 
0x0012a838: add eax, 0x8cc0e46; add cl, byte ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0012d064: add eax, 0x8d40e46; add dh, byte ptr [ecx + 0x41140e0a]; ret; 
0x001487f8: add eax, 0x8e00e46; add al, byte ptr [edi + 0x41140e0a]; ret; 
0x00148570: add eax, 0x8e00e46; add cl, byte ptr [ecx + 0x41140e0a]; ret; 
0x001426a0: add eax, 0x8e00e46; add dl, byte ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0014a474: add eax, 0x8ec0e46; add esi, dword ptr [edx + 2]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013737c: add eax, 0x8f00e46; add edi, dword ptr [esi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00136814: add eax, 0x99c0e46; add esi, dword ptr [edx + 2]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00132bd8: add eax, 0x9c80e46; add ecx, dword ptr [ebx + 0x140e0a03]; inc ecx; ret; 
0x00127077: add eax, 0xa011903; ret; 
0x0013b933: add eax, 0xa011b03; ret; 
0x0012f043: add eax, 0xa011d03; ret; 
0x0013924b: add eax, 0xa013503; ret; 
0x0013def3: add eax, 0xa013e03; ret; 
0x0013dd7f: add eax, 0xa014c03; ret; 
0x0013dd23: add eax, 0xa015603; ret; 
0x00138663: add eax, 0xa015d03; ret; 
0x00126ebb: add eax, 0xa019e03; ret; 
0x00134737: add eax, 0xa01ad03; ret; 
0x00126fe3: add eax, 0xa01bf03; ret; 
0x0012afbf: add eax, 0xa01fe03; ret; 
0x0013b99b: add eax, 0xa022a03; ret; 
0x00134903: add eax, 0xa024003; ret; 
0x0012fc61: add eax, 0xa024903; push cs; adc al, 0x41; ret; 
0x0012b0cb: add eax, 0xa025f03; ret; 
0x0012e947: add eax, 0xa026b03; ret; 
0x00143c70: add eax, 0xa028d03; ret; 
0x00127133: add eax, 0xa02a103; ret; 
0x001427b7: add eax, 0xa030503; ret; 
0x0013de0b: add eax, 0xa03a003; ret; 
0x0012a4bc: add eax, 0xa047403; push cs; adc al, 0x41; ret; 
0x0013d8b7: add eax, 0xa050803; ret; 
0x00126c7f: add eax, 0xa053b03; ret; 
0x0013d83b: add eax, 0xa068003; ret; 
0x000560c2: add eax, 0xaba; add byte ptr [ecx], bh; ret 0x1674; 
0x001452ac: add eax, 0xadc0e46; add dh, byte ptr [edx + 0x41140e0a]; ret; 
0x0012fc5c: add eax, 0xbfc40e46; add eax, 0xa024903; push cs; adc al, 0x41; ret; 
0x000f819e: add eax, 0xc; ret; 
0x0002c3a0: add eax, 0xcb75ed84; dec eax; sub eax, dword ptr [esp + 4]; ret; 
0x000560d8: add eax, 0xdba; add byte ptr [ecx], bh; ret 0x575; 
0x0002c39b: add eax, 0xeb02e883; add eax, 0xcb75ed84; dec eax; sub eax, dword ptr [esp + 4]; ret; 
0x0007709c: add eax, 0xf089fffb; add esp, 0x1c; pop ebx; pop esi; ret; 
0x00084b3b: add eax, 1; add esp, 0x10; pop ebx; pop esi; ret; 
0x000554d0: add eax, 1; add esp, 0x14; pop ebx; ret; 
0x00059ff8: add eax, 1; add esp, 0x3c; pop ebx; ret; 
0x0009674d: add eax, 1; add esp, 4; pop ebx; ret; 
0x0009b186: add eax, 1; mov dword ptr [ebx + 0x22cc], eax; pop ebx; ret; 
0x000f887b: add eax, 1; mov dword ptr [ecx], edx; ret; 
0x0005be26: add eax, 1; ret; 
0x0008a59c: add eax, 2; add esp, 0x10; pop ebx; pop esi; ret; 
0x000967a5: add eax, 2; add esp, 8; pop ebx; ret; 
0x0005bca8: add eax, 2; pop esi; ret; 
0x000b5e2e: add eax, 4; add esp, 4; pop ebx; pop esi; ret; 
0x000b4851: add eax, 4; leave; ret; 
0x0004e2a4: add eax, 4; ret; 
0x000e89a9: add eax, 7; sar eax, 3; add eax, 1; ret; 
0x0005026e: add eax, 8; add esp, 0x18; pop ebx; pop esi; ret; 
0x000ba3d8: add eax, 8; mov dword ptr [esp], eax; call dword ptr [esp + 0x10]; add esp, 8; ret; 
0x0013f1b8: add eax, dword ptr [eax + 0x140e0a01]; inc ecx; ret; 
0x00066c51: add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x24; pop ebx; ret; 
0x0000f90c: add eax, dword ptr [eax]; add byte ptr [eax], al; and al, byte ptr [eax]; or byte ptr [eax], al; ret; 
0x0002b832: add eax, dword ptr [eax]; add byte ptr [eax], al; pop ebx; ret; 
0x000b4834: add eax, dword ptr [eax]; add byte ptr [eax], al; leave; ret; 
0x00057530: add eax, dword ptr [eax]; add byte ptr [ebx - 0x41f0fd39], al; ret 0x4489; 
0x00108114: add eax, dword ptr [eax]; add byte ptr [edi], cl; mov dh, 0x57; sub dh, dh; ret 0xf04; 
0x00004811: add eax, dword ptr [eax]; add byte ptr [esi + 0x2d000007], ah; push es; add byte ptr [eax], al; ret; 
0x000740f1: add eax, dword ptr [eax]; add byte ptr [esi - 0x7d], ah; call 0xf699b5fc; rol dword ptr [eax + 0xf], -0x7c; ret; 
0x0012df6e: add eax, dword ptr [eax]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x000107da: add eax, dword ptr [eax]; ret 0; 
0x0000b78a: add eax, dword ptr [eax]; ret 1; 
0x00134850: add eax, dword ptr [ebp + 0xc]; ret; 
0x00135290: add eax, dword ptr [ebp + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012874d: add eax, dword ptr [ebp + 2]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00135aa1: add eax, dword ptr [ebx + 0x140e0a03]; inc ecx; ret; 
0x0004cb15: add eax, dword ptr [ebx + 0x40ba3fe0]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xfa83; 
0x0013bec3: add eax, dword ptr [ebx + 0xa5b0204]; ret; 
0x0013bd63: add eax, dword ptr [ebx + 0xa5d0204]; ret; 
0x0012c2cb: add eax, dword ptr [ebx + 0xa600204]; ret; 
0x0013e0d3: add eax, dword ptr [ebx + 0xa880204]; ret; 
0x0013e252: add eax, dword ptr [ebx + 0xe]; adc byte ptr [eax + 0xe], bh; or al, 0x41; ret; 
0x001438b2: add eax, dword ptr [ebx + 0xe]; adc byte ptr [eax + 0xe], ch; or al, 0x41; ret; 
0x0012c4fe: add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebp + 0xe], ch; or al, 0x41; ret; 
0x00130fd2: add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebp + 0xe], dh; or al, 0x41; ret; 
0x00128e06: add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xe], bh; or al, 0x41; ret; 
0x001304de: add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xe], ch; or al, 0x41; ret; 
0x00140796: add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xe], dh; or al, 0x41; ret; 
0x001275aa: add eax, dword ptr [ebx + 0xe]; adc byte ptr [ecx + 0xe], ch; or al, 0x41; ret; 
0x00148bda: add eax, dword ptr [ebx + 0xe]; adc byte ptr [edi + 0xe], ah; or al, 0x41; ret; 
0x001276ae: add eax, dword ptr [ebx + 0xe]; adc byte ptr [edi + 0xe], ch; or al, 0x41; ret; 
0x00141b4e: add eax, dword ptr [ebx + 0xe]; adc byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x00134de2: add eax, dword ptr [ebx + 0xe]; adc byte ptr [edx + 0xe], dh; or al, 0x41; ret; 
0x00147a96: add eax, dword ptr [ebx + 0xe]; adc byte ptr [edx + ecx + 0xe], bh; or al, 0x41; ret; 
0x00129152: add eax, dword ptr [ebx + 0xe]; adc byte ptr [edx + ecx + 0xe], bl; or al, 0x41; ret; 
0x00144f52: add eax, dword ptr [ebx + 0xe]; adc byte ptr [esi + 0xe], ah; or al, 0x41; ret; 
0x0013efb2: add eax, dword ptr [ebx + 0xe]; adc byte ptr [esi + 0xe], ch; or al, 0x41; ret; 
0x00128b72: add eax, dword ptr [ebx + 0xe]; adc byte ptr [esi + 0xe], dh; or al, 0x41; ret; 
0x0013aeda: add eax, dword ptr [ebx + 0xe]; and al, 2; push 0x410c0e0a; ret; 
0x00138b76: add eax, dword ptr [ebx + 0xe]; and byte ptr [eax + 0xe], bh; or al, 0x41; ret; 
0x00125faa: add eax, dword ptr [ebx + 0xe]; and byte ptr [edx + ecx + 0xe], bh; or al, 0x41; ret; 
0x0013581e: add eax, dword ptr [ebx + 0xe]; and byte ptr [edx + ecx + 0xe], dh; or al, 0x41; ret; 
0x0014cea2: add eax, dword ptr [ebx + 0xe]; dec eax; add al, byte ptr [edi + 0x410c0e0a]; ret; 
0x0013b0d2: add eax, dword ptr [ebx + 0xe]; dec eax; add bl, byte ptr [esi + 0x410c0e0a]; ret; 
0x0012ab0a: add eax, dword ptr [ebx + 0xe]; inc esp; add ah, byte ptr [ebx + 0x410c0e0a]; ret; 
0x00138bc6: add eax, dword ptr [ebx + 0xe]; push 0x410c0e7f; ret; 
0x0012eaee: add eax, dword ptr [ebx + 0xe]; sbb byte ptr [eax + 0xe], dh; or al, 0x41; ret; 
0x00141d66: add eax, dword ptr [ebx + 0xe]; sbb byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x0012a0c6: add eax, dword ptr [ebx + 0xe]; sbb byte ptr [edx], al; push 0x410c0e0a; ret; 
0x0012779e: add eax, dword ptr [ebx + 0xe]; sbb byte ptr [esi + 0xe], ch; or al, 0x41; ret; 
0x00143c3a: add eax, dword ptr [ebx + 0xe]; sbb byte ptr [esi + 0xe], dh; or al, 0x41; ret; 
0x0012d3ea: add eax, dword ptr [ebx + 0xe]; sub byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x0012aada: add eax, dword ptr [ebx + 0xe]; xor byte ptr [edx], al; or cl, byte ptr [0x410c]; ret; 
0x00129274: add eax, dword ptr [ebx + eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00059ff7: add eax, dword ptr [ebx - 0x3b7cfe40]; cmp al, 0x5b; ret; 
0x0013227c: add eax, dword ptr [ebx]; adc byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001391f0: add eax, dword ptr [ebx]; add dword ptr [bp + si], ecx; push cs; adc al, 0x41; ret; 
0x0013c090: add eax, dword ptr [ebx]; cmp al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014712c: add eax, dword ptr [ebx]; sbb al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014564d: add eax, dword ptr [ecx + 0x140e0a02]; inc ecx; ret; 
0x0013f572: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0x140e4304], al; add al, byte ptr [edi + 0x41100e0a]; ret; 
0x001285fe: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0x140e4304], al; push 0x41100e0a; ret; 
0x00144506: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0x180e4304], al; add al, byte ptr [ebp + 0x41100e0a]; ret; 
0x00147632: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0x180e4304], al; add ch, byte ptr [eax + 0x41100e0a]; ret; 
0x0012e596: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0x200e4304], al; add ah, byte ptr [esi + 0x41100e0a]; ret; 
0x0012ca6a: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0x200e4304], al; add al, byte ptr [ebp + 0x41100e0a]; ret; 
0x0014ca72: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0x200e4304], al; add al, byte ptr [ecx + 0x41100e0a]; ret; 
0x0013e09a: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0x200e4304], al; add bh, byte ptr [eax + 0x41100e0a]; ret; 
0x0012e74e: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0x200e4304], al; add bl, byte ptr [edi + 0x41100e0a]; ret; 
0x0014b256: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0x200e4304], al; add ch, byte ptr [edi + 0x41100e0a]; ret; 
0x0013ed66: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0x200e4304], al; add cl, byte ptr [edx + 0x41100e0a]; ret; 
0x0013e4f2: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0x240e4304], al; add al, byte ptr [edi + 0x41100e0a]; ret; 
0x00128796: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0x240e4304], al; add al, byte ptr [esi + 0x41100e0a]; ret; 
0x0014c97a: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0x240e4304], al; add dl, byte ptr [edi + 0x41100e0a]; ret; 
0x00140e42: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0x240e4304], al; or cl, byte ptr [0x4110]; ret; 
0x001355f2: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0x340e4304], al; add ah, byte ptr [esi + 0x41100e0a]; ret; 
0x00128fae: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0x340e4304], al; add bh, byte ptr [edx + 0x41100e0a]; ret; 
0x00147e12: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0x380e4304], al; add al, byte ptr [ebp + 0x41100e0a]; ret; 
0x0013807e: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0x3c0e4304], al; add dl, byte ptr [eax + 0x41100e0a]; ret; 
0x001253ce: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0x440e4304], al; add bl, byte ptr [esi + 0x41100e0a]; ret; 
0x00130baa: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0x4c0e4304], al; add al, byte ptr [ebx + 0x41100e0a]; ret; 
0x00130cae: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0x500e4304], al; add cl, byte ptr [ebx + 0x41100e0a]; ret; 
0x0014bcee: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa500204], al; ret; 
0x00143bca: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa590204], al; ret; 
0x00146e46: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa5d0204], al; ret; 
0x0013875a: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa8f0204], al; ret; 
0x0014207e: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xaa00204], al; ret; 
0x0014221e: add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xaf60204], al; ret; 
0x0012a376: add eax, dword ptr [ecx + 0xe]; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x9a40e46], 3; ret 0xa02; 
0x001393c8: add eax, dword ptr [ecx + eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0012a7fc: add eax, dword ptr [ecx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129f0c: add eax, dword ptr [ecx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0013a649: add eax, dword ptr [edi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b4ac: add eax, dword ptr [edi]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00143a50: add eax, dword ptr [edx + 0x140e0a02]; inc ecx; ret; 
0x00145690: add eax, dword ptr [edx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00149b34: add eax, dword ptr [edx]; add al, 0xa; push cs; adc al, 0x41; ret; 
0x00148190: add eax, dword ptr [edx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0012cb2c: add eax, dword ptr [edx]; add eax, 0x41140e0a; ret; 
0x0014794a: add eax, dword ptr [edx]; bound ecx, qword ptr [edx]; ret; 
0x00132328: add eax, dword ptr [edx]; leave; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012db31: add eax, dword ptr [esi + 0x140e0a02]; inc ecx; ret; 
0x0013a227: add eax, dword ptr [esi + 0x2058304]; dec esi; ret; 
0x001270db: add eax, dword ptr [esi + 0x2058304]; pop eax; ret; 
0x0012e423: add eax, dword ptr [esi + 0x2058304]; xchg dword ptr [edx], ecx; ret; 
0x0012fe6f: add eax, dword ptr [esi + 0x2058304]; aam; ret; 
0x0013d837: add eax, dword ptr [esi + 0x3058304]; add byte ptr [esi], 0xa; ret; 
0x0013deef: add eax, dword ptr [esi + 0x3058304]; add dword ptr ds:[edx], ecx; ret; 
0x0013dd7b: add eax, dword ptr [esi + 0x3058304]; dec esp; add dword ptr [edx], ecx; ret; 
0x0012e943: add eax, dword ptr [esi + 0x3058304]; imul eax, dword ptr [edx], 0xa; ret; 
0x001348ff: add eax, dword ptr [esi + 0x3058304]; inc eax; add cl, byte ptr [edx]; ret; 
0x00134733: add eax, dword ptr [esi + 0x3058304]; lodsd eax, dword ptr [esi]; add dword ptr [edx], ecx; ret; 
0x0013865f: add eax, dword ptr [esi + 0x3058304]; pop ebp; add dword ptr [edx], ecx; ret; 
0x0012b0c7: add eax, dword ptr [esi + 0x3058304]; pop edi; add cl, byte ptr [edx]; ret; 
0x0013dd1f: add eax, dword ptr [esi + 0x3058304]; push esi; add dword ptr [edx], ecx; ret; 
0x00126eb7: add eax, dword ptr [esi + 0x3058304]; sahf; add dword ptr [edx], ecx; ret; 
0x0013bdd7: add eax, dword ptr [esi + 0x76058304]; ret; 
0x001293e4: add eax, dword ptr [esi + 3]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012bc58: add eax, dword ptr [esi]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0013c82c: add eax, dword ptr [esi]; add dword ptr [esi], ecx; adc al, 0x41; ret; 
0x00139468: add eax, eax; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0012ff81: add eax, ebp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0013f279: add eax, ecx; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0012df86: add eax, ecx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0004cb12: add eax, ecx; ljmp 0x40ba:0x3fe08303; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xfa83; 
0x00060b0e: add eax, ecx; ret; 
0x001433c9: add eax, edi; add al, 0xa; push cs; adc al, 0x41; ret; 
0x001372b9: add eax, edi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0012a385: add eax, edx; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0003280d: add eax, edx; add esp, 0x10; pop ebx; pop esi; ret; 
0x0003286d: add eax, edx; add esp, 4; pop ebx; pop esi; ret; 
0x0005c896: add eax, edx; and eax, 0x3f; ret; 
0x0006389c: add eax, edx; pop esi; pop edi; ret; 
0x0005be56: add eax, edx; pop esi; ret; 
0x0002d712: add eax, edx; shr eax, 0x18; ret; 
0x001422dc: add eax, esi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x000e8630: add eax, esi; push es; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00140064: add ebp, dword ptr [0x140e0a01]; inc ecx; ret; 
0x001346dd: add ebp, dword ptr [eax + 0x140e0a01]; inc ecx; ret; 
0x00138479: add ebp, dword ptr [eax + 5]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00144fad: add ebp, dword ptr [eax]; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0014ad04: add ebp, dword ptr [eax]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00125b79: add ebp, dword ptr [eax]; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x001259c2: add ebp, dword ptr [ebp + 0xa]; ret; 
0x00139054: add ebp, dword ptr [ebp + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001420bc: add ebp, dword ptr [ebp + 2]; push cs; adc al, 0x41; ret; 
0x0012b3b0: add ebp, dword ptr [ebx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00130141: add ebp, dword ptr [ebx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0013f899: add ebp, dword ptr [ecx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00146c68: add ebp, dword ptr [ecx + 1]; push cs; adc al, 0x41; ret; 
0x001325c4: add ebp, dword ptr [ecx + eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0003f644: add ebp, dword ptr [ecx + eax]; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x0014b3d8: add ebp, dword ptr [ecx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0008ccd9: add ebp, dword ptr [ecx - 0x3b7c0007]; adc al, 0x5b; ret; 
0x0013edc3: add ebp, dword ptr [ecx]; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0014ba87: add ebp, dword ptr [ecx]; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0004e5c0: add ebp, dword ptr [ecx]; ret 0x4c8b; 
0x001297b0: add ebp, dword ptr [edi + 0x140e0a06]; inc ecx; ret; 
0x001259ea: add ebp, dword ptr [edi + 0xa]; ret; 
0x00147b2c: add ebp, dword ptr [edx + 0x140e0a01]; inc ecx; ret; 
0x00142e69: add ebp, dword ptr [edx + 0x140e0a06]; inc ecx; ret; 
0x0013f815: add ebp, dword ptr [edx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013e4a5: add ebp, dword ptr [edx + 4]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127888: add ebp, dword ptr [edx + eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0013ee49: add ebp, dword ptr [edx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013b99c: add ebp, dword ptr [edx]; add cl, byte ptr [edx]; ret; 
0x0014b4d8: add ebp, dword ptr [edx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0012997f: add ebp, dword ptr [esi + 0x140e0a05]; inc ecx; ret; 
0x0014c006: add ebp, dword ptr [esi + 0xa]; ret; 
0x0012a97c: add ebp, dword ptr [esi]; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x00136430: add ebp, dword ptr [esi]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00144171: add ebp, dword ptr [esi]; pop es; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012abd5: add ebp, eax; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0014b56c: add ebp, ebp; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0012c5b0: add ebp, ebx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00145d5b: add ebp, ecx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0012ec50: add ebp, edi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00137e41: add ebp, esi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x001302b1: add ebx, dword ptr [0x140e0a01]; inc ecx; ret; 
0x0012ea7c: add ebx, dword ptr [eax + 0x140e0a01]; inc ecx; ret; 
0x00141dd5: add ebx, dword ptr [eax + 0x41140e03]; ret; 
0x00135cff: add ebx, dword ptr [eax + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012531c: add ebx, dword ptr [eax]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0012c120: add ebx, dword ptr [ebp + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127be7: add ebx, dword ptr [ebp - 0x3b]; ret; 
0x0012d57c: add ebx, dword ptr [ebx + 2]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001293a4: add ebx, dword ptr [ebx + 3]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00143a20: add ebx, dword ptr [ebx]; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0012a321: add ebx, dword ptr [ebx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0013b934: add ebx, dword ptr [ebx]; add dword ptr [edx], ecx; ret; 
0x00136270: add ebx, dword ptr [ecx + eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0012d4d0: add ebx, dword ptr [ecx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013391c: add ebx, dword ptr [ecx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00127078: add ebx, dword ptr [ecx]; add dword ptr [edx], ecx; ret; 
0x0012de2d: add ebx, dword ptr [ecx]; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0012e5dc: add ebx, dword ptr [edx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014340d: add ebx, dword ptr [edx + 2]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014b710: add ebx, dword ptr [edx + 4]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013a76d: add ebx, dword ptr [edx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00134679: add ebx, dword ptr [edx]; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x00126ff4: add ebx, dword ptr [edx]; add cl, byte ptr [edx]; ret; 
0x00133484: add ebx, dword ptr [edx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0014369d: add ebx, dword ptr [esi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00136f04: add ebx, dword ptr [esi + 1]; push cs; adc al, 0x41; ret; 
0x0012e564: add ebx, dword ptr [esi + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014682c: add ebx, dword ptr [esi]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x001303cc: add ebx, dword ptr [esp + eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0012e563: add ebx, dword ptr fs:[esi + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00147ef0: add ebx, ebp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0005bce1: add ebx, ecx; add edx, ebx; pop ebx; ret; 
0x0012da8b: add ebx, edx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0013efec: add ebx, esi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00044081: add ecx, 0x10d003; mov eax, dword ptr [ecx + 0x6400]; ret; 
0x000315b7: add ecx, 0x11facd; mov eax, dword ptr [esp + 4]; mov dword ptr [ecx + 0x1314], eax; ret; 
0x0002a1d1: add ecx, 0x126eb3; mov eax, dword ptr [ecx + 0x35d0]; ret; 
0x0010a665: add ecx, 0x46a1f; mov eax, dword ptr [ecx - 0x2ec]; mov eax, dword ptr [eax]; ret; 
0x000ebaff: add ecx, 0x65585; mov eax, dword ptr [ecx - 0x1fc]; mov edx, dword ptr [esp + 4]; mov dword ptr [eax], edx; ret; 
0x000ebaeb: add ecx, 0x65599; mov eax, dword ptr [ecx - 0x1fc]; mov eax, dword ptr [eax]; ret; 
0x000ebad3: add ecx, 0x655b1; mov eax, dword ptr [ecx - 0x1b8]; mov edx, dword ptr [esp + 4]; mov dword ptr [eax], edx; ret; 
0x000ebabb: add ecx, 0x655c9; mov eax, dword ptr [ecx - 0xd4]; mov edx, dword ptr [esp + 4]; mov dword ptr [eax], edx; ret; 
0x000ebaa3: add ecx, 0x655e1; mov eax, dword ptr [ecx - 0xf0]; mov edx, dword ptr [esp + 4]; mov dword ptr [eax], edx; ret; 
0x000eba8f: add ecx, 0x655f5; mov eax, dword ptr [ecx - 0x2a4]; mov eax, dword ptr [eax]; ret; 
0x000eba7b: add ecx, 0x65609; mov eax, dword ptr [ecx - 0x7c]; mov eax, dword ptr [eax]; ret; 
0x000eba67: add ecx, 0x6561d; mov eax, dword ptr [ecx - 0x1b8]; mov eax, dword ptr [eax]; ret; 
0x000eba53: add ecx, 0x65631; mov eax, dword ptr [ecx - 0xd4]; mov eax, dword ptr [eax]; ret; 
0x000eba3f: add ecx, 0x65645; mov eax, dword ptr [ecx - 0xf0]; mov eax, dword ptr [eax]; ret; 
0x000e88d5: add ecx, 0x687af; mov eax, dword ptr [ecx - 0x110]; add eax, 0x1c0; ret; 
0x000e0711: add ecx, 0x70973; mov eax, dword ptr [esp + 4]; mov dword ptr [ecx + 0x2dc0], eax; ret; 
0x000e0172: add ecx, 0x70f12; lea eax, dword ptr [ecx + 0xe57c]; ret; 
0x000e0135: add ecx, 0x70f4f; mov eax, dword ptr [ecx - 0x1c4]; ret; 
0x000db551: add ecx, 0x75b33; mov eax, dword ptr [ecx - 0x110]; mov edx, dword ptr [esp + 4]; mov dword ptr [eax + 0x1bc], edx; ret; 
0x000db535: add ecx, 0x75b4f; mov eax, dword ptr [ecx - 0x110]; mov edx, dword ptr [esp + 4]; mov dword ptr [eax + 0x1b8], edx; ret; 
0x0009c1d2: add ecx, 0xb4eb2; mov eax, dword ptr [ecx + 0x22cc]; ret; 
0x00090a0d: add ecx, 0xc0677; mov eax, dword ptr [ecx + 0xb7c4]; ret; 
0x000909fb: add ecx, 0xc0689; mov eax, dword ptr [ecx + 0xb7c8]; ret; 
0x000909e9: add ecx, 0xc069b; mov eax, dword ptr [ecx + 0xb7cc]; ret; 
0x000909d7: add ecx, 0xc06ad; mov eax, dword ptr [ecx + 0xb7d0]; ret; 
0x000909c5: add ecx, 0xc06bf; mov eax, dword ptr [ecx + 0xb7d4]; ret; 
0x000909b3: add ecx, 0xc06d1; mov eax, dword ptr [ecx + 0xb7d8]; ret; 
0x0008ea44: add ecx, 0xc2640; mov eax, dword ptr [esp + 4]; mov dword ptr [ecx + 0x2220], eax; ret; 
0x0005a024: add ecx, 0xf7060; lea eax, dword ptr [ecx + 0x142c]; ret; 
0x00126cb8: add ecx, dword ptr [0x140e0a01]; inc ecx; ret; 
0x0014c514: add ecx, dword ptr [eax + 0x140e0a01]; inc ecx; ret; 
0x0012b04c: add ecx, dword ptr [eax + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00138519: add ecx, dword ptr [eax]; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0012d7b5: add ecx, dword ptr [ebp + 0x140e0a03]; inc ecx; ret; 
0x0014b7c0: add ecx, dword ptr [ebp + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014225d: add ecx, dword ptr [ebp + 7]; push cs; adc al, 0x41; ret; 
0x00132bdd: add ecx, dword ptr [ebx + 0x140e0a03]; inc ecx; ret; 
0x00140dcc: add ecx, dword ptr [ebx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b585: add ecx, dword ptr [ebx + 2]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0004ae54: add ecx, dword ptr [ebx - 0x2cfb7abc]; call 0x831bb2e7; ret 0x8301; 
0x0004aee6: add ecx, dword ptr [ebx - 0x2cff7abc]; call 0x831ab379; ret 0x8301; 
0x001443b0: add ecx, dword ptr [ebx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0014c2e9: add ecx, dword ptr [ecx + 0x140e0a02]; inc ecx; ret; 
0x0012fc62: add ecx, dword ptr [ecx + 2]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001272ed: add ecx, dword ptr [ecx + 4]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00131813: add ecx, dword ptr [ecx + eax + 0x41140e0a]; ret; 
0x0013dd80: add ecx, dword ptr [ecx + eax + 0xa]; ret; 
0x00131374: add ecx, dword ptr [ecx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0002e561: add ecx, dword ptr [ecx - 0x2776fbad]; pop ebx; ret 4; 
0x0002c1ed: add ecx, dword ptr [ecx - 0x3b7cf7ba]; adc byte ptr [ebx + 0x5e], bl; ret; 
0x000d7086: add ecx, dword ptr [ecx - 0x74fbdbbc]; inc ecx; sbb byte ptr [ecx - 0x2517dbfc], cl; ret 0xfff4; 
0x000abc0a: add ecx, dword ptr [ecx]; ret 0x5189; 
0x0013f0f4: add ecx, dword ptr [edi + 0x140e0a01]; inc ecx; ret; 
0x0013cc90: add ecx, dword ptr [edi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00137450: add ecx, dword ptr [edi]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x000f9f35: add ecx, dword ptr [edi]; mov bh, 0x45; or bh, byte ptr [ecx]; ret 0xdb7d; 
0x00080bd1: add ecx, dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc105; 
0x0014b675: add ecx, dword ptr [edx + 0x140e0a02]; inc ecx; ret; 
0x0012fe10: add ecx, dword ptr [edx + 0x140e0a04]; inc ecx; ret; 
0x0013346c: add ecx, dword ptr [edx + 3]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00134a9c: add ecx, dword ptr [edx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0006b362: add ecx, dword ptr [edx]; add byte ptr [ecx + 0xe5d1fc3], al; add byte ptr [ebx - 0x76dbdbbc], cl; ret 0xe283; 
0x0012f7dc: add ecx, dword ptr [edx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00125b7b: add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0013de0e: add ecx, dword ptr [edx]; ret; 
0x0012a3c8: add ecx, dword ptr [esi + 0x140e0a01]; inc ecx; ret; 
0x0014c20c: add ecx, dword ptr [esi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00141dd7: add ecx, dword ptr [esi]; adc al, 0x41; ret; 
0x0013b944: add ecx, dword ptr [esi]; add al, 0xa; ret; 
0x0014b1a4: add ecx, dword ptr [esi]; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0014ba08: add ecx, dword ptr [esi]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0014b68e: add ecx, dword ptr es:[edx]; push cs; adc al, 0x41; ret; 
0x0014bde9: add ecx, dword ptr gs:[edx]; push cs; adc al, 0x41; ret; 
0x000c5245: add ecx, eax; mov dword ptr [edx + 0xc], ecx; ret; 
0x0012a299: add ecx, ebp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0008fca7: add ecx, ebp; test eax, 0xc6fffffe; add cl, byte ptr [ebx + eax*4]; ret 0xe901; 
0x00139f2c: add ecx, ebx; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0012b504: add ecx, edi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x001299c0: add ecx, esp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0012be0c: add edi, dword ptr [0x140e0a01]; inc ecx; ret; 
0x0012a2dd: add edi, dword ptr [0x140e0a03]; inc ecx; ret; 
0x0014c4d4: add edi, dword ptr [0x140e0a04]; inc ecx; ret; 
0x00129a19: add edi, dword ptr [eax + 3]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00142afd: add edi, dword ptr [eax]; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0013ea2c: add edi, dword ptr [eax]; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x00140e0d: add edi, dword ptr [ebp + 4]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012934c: add edi, dword ptr [ebx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0012b225: add edi, dword ptr [ecx + 0x140e0a01]; inc ecx; ret; 
0x0013ba04: add edi, dword ptr [ecx + 0x140e0a03]; inc ecx; ret; 
0x00143468: add edi, dword ptr [ecx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00144b14: add edi, dword ptr [ecx + eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0014213c: add edi, dword ptr [ecx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00047e59: add edi, dword ptr [ecx]; ret 0x6472; 
0x00145125: add edi, dword ptr [edi + 0x140e0a02]; inc ecx; ret; 
0x00130159: add edi, dword ptr [edi]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00141c2c: add edi, dword ptr [edi]; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0012bafd: add edi, dword ptr [edx + 0x140e0a01]; inc ecx; ret; 
0x0013c9b5: add edi, dword ptr [edx + 0x140e0a03]; inc ecx; ret; 
0x0014bd5e: add edi, dword ptr [edx + 0xa]; ret; 
0x0013ba80: add edi, dword ptr [edx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001302c9: add edi, dword ptr [edx + 4]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00144223: add edi, dword ptr [edx + eax + 0x41140e0a]; ret; 
0x0012a501: add edi, dword ptr [edx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126bb0: add edi, dword ptr [edx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0012b75d: add edi, dword ptr [esi + 0x140e0a01]; inc ecx; ret; 
0x00137381: add edi, dword ptr [esi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012f2a3: add edi, dword ptr [esi - 0x3b]; ret; 
0x0013def4: add edi, dword ptr [esi]; add dword ptr [edx], ecx; ret; 
0x0012bba5: add edi, ecx; adc ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0010b6f0: add edi, edi; add esp, 0x1c; pop ebx; pop esi; ret; 
0x00138c00: add edi, edx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0012afc0: add edi, esi; add dword ptr [edx], ecx; ret; 
0x0010a1a4: add edi, esi; ret 0x8080; 
0x000fb665: add edi, esi; shl byte ptr [ecx], 1; ret 0xc2f7; 
0x001349a5: add edi, esp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00065425: add edi, esp; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00144091: add edx, dword ptr [0x140e0a02]; inc ecx; ret; 
0x0013e4bd: add edx, dword ptr [eax + 0x140e0a01]; inc ecx; ret; 
0x00141568: add edx, dword ptr [eax + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013227d: add edx, dword ptr [eax]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0014526d: add edx, dword ptr [ebp + 0x140e0a02]; inc ecx; ret; 
0x0012b158: add edx, dword ptr [ebp + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013befd: add edx, dword ptr [ebx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00133904: add edx, dword ptr [ebx + 3]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00130250: add edx, dword ptr [ebx]; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x00137b28: add edx, dword ptr [ebx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00134889: add edx, dword ptr [ecx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00143a38: add edx, dword ptr [ecx + eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00144bdc: add edx, dword ptr [ecx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00140a5c: add edx, dword ptr [ecx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x001297e0: add edx, dword ptr [edi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001419b8: add edx, dword ptr [edi + 2]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013b789: add edx, dword ptr [edi + 3]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014bbd5: add edx, dword ptr [edi + eax + 0xa]; push cs; adc al, 0x41; ret; 
0x001428c8: add edx, dword ptr [edi]; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0014c414: add edx, dword ptr [edi]; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0012907c: add edx, dword ptr [edx + 0x140e0a01]; inc ecx; ret; 
0x00132fd4: add edx, dword ptr [edx]; add al, 0xa; push cs; adc al, 0x41; ret; 
0x0012930c: add edx, dword ptr [edx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x001372fd: add edx, dword ptr [esi + 0x140e0a01]; inc ecx; ret; 
0x00143ae8: add edx, dword ptr [esi]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00044083: add edx, eax; adc byte ptr [eax], al; mov eax, dword ptr [ecx + 0x6400]; ret; 
0x00129234: add edx, ebp; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x00143b2d: add edx, ebp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x001317e4: add edx, ebx; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0005bce3: add edx, ebx; pop ebx; ret; 
0x00137b57: add edx, ecx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0004e618: add edx, ecx; mov dword ptr [esp + 4], edx; fldenv dword ptr [esp]; add esp, 0x1c; ret; 
0x0014aa58: add edx, edi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0013d769: add edx, edi; or byte ptr [edx], cl; push cs; adc al, 0x41; ret; 
0x00131c98: add edx, edx; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x001455cc: add edx, esp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0014c135: add esi, dword ptr [0x140e0a01]; inc ecx; ret; 
0x00140635: add esi, dword ptr [eax + 2]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012a068: add esi, dword ptr [eax]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00127b00: add esi, dword ptr [ebp + 0x140e0a01]; inc ecx; ret; 
0x000dfda8: add esi, dword ptr [ebp + 0xe]; lea eax, dword ptr [ecx - 0x3620d]; ret; 
0x00140ed9: add esi, dword ptr [ebp + 2]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0002c4e0: add esi, dword ptr [ebp + 4]; mov edi, edx; pop esi; ret; 
0x00108fd0: add esi, dword ptr [ebp + 8]; mov eax, dword ptr [esp + 8]; mov edi, edx; pop esi; ret; 
0x000483a4: add esi, dword ptr [ebp + ebx - 0x7d]; std; add dword ptr [edx + ebp - 0x77], esi; ret 0xeac1; 
0x001432ad: add esi, dword ptr [ebx + 0x140e0a01]; inc ecx; ret; 
0x0012ccb4: add esi, dword ptr [ebx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001272a9: add esi, dword ptr [ebx]; add al, 0xa; push cs; adc al, 0x41; ret; 
0x001300e8: add esi, dword ptr [ebx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00126b58: add esi, dword ptr [ecx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014c664: add esi, dword ptr [ecx + eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0014ae44: add esi, dword ptr [ecx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000f77e6: add esi, dword ptr [ecx]; rol byte ptr [ebx - 0x2a76fe40], 0x83; ret 0xf01; 
0x0013fc81: add esi, dword ptr [edi + 0x140e0a01]; inc ecx; ret; 
0x0014496d: add esi, dword ptr [edi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000c538e: add esi, dword ptr [edi + 4]; xor eax, eax; pop esi; ret; 
0x000c606a: add esi, dword ptr [edi + 8]; mov eax, dword ptr [ecx + eax*4 - 0x38834]; ret; 
0x0013a2c3: add esi, dword ptr [edi - 0x3b]; ret; 
0x0014a0c7: add esi, dword ptr [edi]; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x00144b84: add esi, dword ptr [edi]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00126e55: add esi, dword ptr [edx + 0x140e0a01]; inc ecx; ret; 
0x001252dc: add esi, dword ptr [edx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00136819: add esi, dword ptr [edx + 2]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00149a98: add esi, dword ptr [edx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00143349: add esi, dword ptr [edx]; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0013b7cd: add esi, dword ptr [edx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0012d7f9: add esi, dword ptr [esi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001292f4: add esi, dword ptr [esi]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0012a4bd: add esi, dword ptr [esp + eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00131854: add esi, ebp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00139450: add esi, edi; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x00139f9c: add esi, edi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0013f7d1: add esi, edx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x000c6ce9: add esi, esi; dec dword ptr [ebp + 0xe08c83]; add bl, ch; ret 0x6c7; 
0x0013a3b0: add esi, esp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0007fc2b: add esp, 0x10; pop ebx; pop edi; ret; 
0x000a2e5d: add esp, 0x10; pop ebx; pop esi; pop ebp; ret; 
0x0002c0b9: add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00027bc2: add esp, 0x10; pop ebx; pop esi; ret; 
0x00029bc3: add esp, 0x10; pop ebx; ret; 
0x0005d3de: add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x0006ac7b: add esp, 0x10; pop esi; ret; 
0x0005d12a: add esp, 0x10; ret; 
0x000fd9ba: add esp, 0x14; pop ebx; pop ebp; ret; 
0x000ea04c: add esp, 0x14; pop ebx; pop esi; pop ebp; ret; 
0x00029b36: add esp, 0x14; pop ebx; pop esi; pop edi; ret; 
0x0002bc71: add esp, 0x14; pop ebx; pop esi; ret; 
0x00029f1d: add esp, 0x14; pop ebx; ret; 
0x000ab841: add esp, 0x14; pop esi; pop edi; pop ebp; ret; 
0x0005fae1: add esp, 0x14; ret; 
0x000f27d9: add esp, 0x18; pop ebx; pop edi; ret; 
0x00029fc1: add esp, 0x18; pop ebx; pop esi; pop edi; ret; 
0x00034823: add esp, 0x18; pop ebx; pop esi; ret; 
0x00029aa3: add esp, 0x18; pop ebx; ret; 
0x0005d33c: add esp, 0x18; pop esi; pop edi; pop ebp; ret; 
0x0005ed0f: add esp, 0x1c; pop ebx; pop esi; pop edi; ret; 
0x00052a71: add esp, 0x1c; pop ebx; pop esi; ret; 
0x0002a1c7: add esp, 0x1c; pop ebx; ret; 
0x00051af1: add esp, 0x1c; pop esi; pop edi; pop ebp; ret; 
0x0004e621: add esp, 0x1c; ret; 
0x0006501d: add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0004385a: add esp, 0x20; pop ebx; pop esi; ret; 
0x0002a36d: add esp, 0x20; pop ebx; ret; 
0x00051731: add esp, 0x20; pop esi; pop edi; pop ebp; ret; 
0x0005f9fd: add esp, 0x20; pop esi; ret 4; 
0x0005fb32: add esp, 0x20; ret; 
0x000355f1: add esp, 0x24; pop ebx; pop esi; pop edi; ret; 
0x00043909: add esp, 0x24; pop ebx; pop esi; ret; 
0x000437cf: add esp, 0x24; pop ebx; ret; 
0x000513b8: add esp, 0x24; pop esi; pop edi; pop ebp; ret; 
0x0004f0b0: add esp, 0x28; pop ebx; pop esi; pop edi; ret; 
0x0004209c: add esp, 0x28; pop ebx; pop esi; ret; 
0x0005d6d8: add esp, 0x28; pop ebx; ret; 
0x00051cee: add esp, 0x28; pop esi; pop edi; pop ebp; ret; 
0x0008d578: add esp, 0x2c; pop ebx; pop esi; pop edi; ret; 
0x0004d7bb: add esp, 0x2c; pop ebx; pop esi; ret; 
0x000893f8: add esp, 0x2c; pop ebx; ret; 
0x000d2330: add esp, 0x2c; pop esi; pop edi; pop ebp; ret; 
0x000964f0: add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000c5a3f: add esp, 0x30; pop ebx; pop esi; ret; 
0x00089589: add esp, 0x30; pop ebx; ret; 
0x00028271: add esp, 0x34; pop ebx; pop esi; pop edi; ret; 
0x000645d2: add esp, 0x34; pop ebx; ret; 
0x00037904: add esp, 0x38; pop ebx; pop esi; pop edi; ret; 
0x000439e3: add esp, 0x38; pop ebx; pop esi; ret; 
0x0006461a: add esp, 0x38; pop ebx; ret; 
0x000652b6: add esp, 0x3c; pop ebx; pop esi; pop edi; ret; 
0x00090aaa: add esp, 0x3c; pop ebx; pop esi; ret; 
0x00059ffb: add esp, 0x3c; pop ebx; ret; 
0x000654be: add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x000bef0d: add esp, 0x40; pop ebx; pop esi; ret; 
0x000660aa: add esp, 0x40; pop ebx; ret; 
0x0005b7c7: add esp, 0x40; pop esi; pop edi; pop ebp; ret; 
0x00083eec: add esp, 0x44; pop ebx; pop esi; pop edi; ret; 
0x00036e73: add esp, 0x44; pop ebx; pop esi; ret; 
0x00064cb8: add esp, 0x48; pop ebx; pop esi; pop edi; ret; 
0x0006a94f: add esp, 0x48; pop ebx; pop esi; ret; 
0x00059f75: add esp, 0x50; pop ebx; pop esi; ret; 
0x00064b59: add esp, 0x54; pop ebx; pop esi; pop edi; ret; 
0x00044b21: add esp, 0x54; pop esi; pop edi; pop ebp; ret; 
0x00059d0c: add esp, 0x58; pop ebx; ret; 
0x00064a21: add esp, 0x5c; pop ebx; pop esi; pop edi; ret; 
0x000915ae: add esp, 0x5c; pop ebx; pop esi; ret; 
0x000d6158: add esp, 0x5c; pop esi; pop edi; pop ebp; ret; 
0x00065652: add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x000656d0: add esp, 0x64; pop ebx; pop esi; pop edi; ret; 
0x000cada2: add esp, 0x68; pop ebx; pop esi; pop edi; ret; 
0x0004c980: add esp, 0x70; pop esi; pop edi; pop ebp; ret; 
0x000fb048: add esp, 0x88; pop ebx; pop esi; ret; 
0x000354da: add esp, 0x8c; pop ebx; pop esi; ret; 
0x000c64dc: add esp, 0x94; pop ebx; pop esi; ret; 
0x000f3832: add esp, 0x98; pop ebx; pop esi; pop edi; ret; 
0x000a3cfa: add esp, 0x9c; pop ebx; pop esi; pop edi; ret; 
0x0002a48b: add esp, 0xc; pop ebp; ret; 
0x00034605: add esp, 0xc; pop ebx; pop ebp; ret; 
0x00080c7f: add esp, 0xc; pop ebx; pop edi; ret; 
0x000a32f4: add esp, 0xc; pop ebx; pop esi; pop ebp; ret; 
0x00036bc6: add esp, 0xc; pop ebx; pop esi; pop edi; ret; 
0x00028642: add esp, 0xc; pop ebx; pop esi; ret; 
0x0004e46d: add esp, 0xc; pop ebx; xor eax, eax; ret; 
0x00028551: add esp, 0xc; pop ebx; ret; 
0x00035baf: add esp, 0xc; pop esi; pop edi; pop ebp; ret; 
0x00037105: add esp, 0xc; pop esi; pop edi; ret; 
0x00035b68: add esp, 0xc; ret; 
0x000500e4: add esp, 1; pop esi; pop edi; pop ebp; ret; 
0x0002a487: add esp, 4; pop ebx; add esp, 0xc; pop ebp; ret; 
0x000a2eef: add esp, 4; pop ebx; pop ebp; ret; 
0x0007fc78: add esp, 4; pop ebx; pop edi; ret; 
0x0002d6d1: add esp, 4; pop ebx; pop esi; pop edi; ret; 
0x0003286f: add esp, 4; pop ebx; pop esi; ret; 
0x0002a02a: add esp, 4; pop ebx; ret; 
0x000629dd: add esp, 4; pop esi; pop edi; pop ebp; ret; 
0x0005237f: add esp, 4; pop esi; pop edi; ret; 
0x00052326: add esp, 4; pop esi; ret; 
0x0004e5d5: add esp, 4; ret; 
0x0002a50e: add esp, 5; pop esi; pop edi; pop ebp; ret; 
0x00096cb1: add esp, 8; pop ebx; pop ebp; ret; 
0x0009dc9e: add esp, 8; pop ebx; pop edi; ret; 
0x00035961: add esp, 8; pop ebx; pop esi; pop edi; ret; 
0x000285ee: add esp, 8; pop ebx; pop esi; ret; 
0x0003262d: add esp, 8; pop ebx; ret; 
0x00027b15: add esp, 8; pop edi; pop ebx; ret; 
0x0005d278: add esp, 8; pop esi; pop edi; pop ebp; ret; 
0x0005bfb6: add esp, 8; pop esi; pop edi; ret; 
0x000617b2: add esp, 8; pop esi; ret; 
0x000cf662: add esp, 8; ret 4; 
0x000ba3e2: add esp, 8; ret; 
0x0012a9c0: add esp, dword ptr [0x140e0a01]; inc ecx; ret; 
0x00143970: add esp, dword ptr [eax + 0x140e0a01]; inc ecx; ret; 
0x00130341: add esp, dword ptr [eax]; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0014aa18: add esp, dword ptr [eax]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0013d0bc: add esp, dword ptr [eax]; or byte ptr [edx], cl; push cs; adc al, 0x41; ret; 
0x00128dd1: add esp, dword ptr [ebp + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014bde8: add esp, dword ptr [ebp + 3]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013c7d4: add esp, dword ptr [ebx + 0x140e0a01]; inc ecx; ret; 
0x0012a42c: add esp, dword ptr [ebx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013d03c: add esp, dword ptr [ebx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00147ddd: add esp, dword ptr [ecx + 0x140e0a01]; inc ecx; ret; 
0x0013830d: add esp, dword ptr [ecx + 0x140e0a02]; inc ecx; ret; 
0x001388e4: add esp, dword ptr [ecx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013ecb0: add esp, dword ptr [ecx + eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0013e424: add esp, dword ptr [ecx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001391f1: add esp, dword ptr [edi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013c95c: add esp, dword ptr [edx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00136754: add esp, dword ptr [edx + 3]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012ab94: add esp, dword ptr [edx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012ece4: add esp, dword ptr [edx]; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0012f017: add esp, dword ptr [esi + 0xa]; ret; 
0x0013c680: add esp, dword ptr [esi + 1]; push cs; adc al, 0x41; ret; 
0x0013a68c: add esp, dword ptr [esi + 2]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000f3cfd: add esp, dword ptr [esi - 0x70]; ret; 
0x0013ee05: add esp, dword ptr [esi]; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0014b68d: add esp, dword ptr [esi]; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x00127b2f: add esp, ecx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x001297c8: add esp, esi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0013c681: add word ptr [esi], cx; adc al, 0x41; ret; 
0x0005cfe7: addps xmm0, xmm1; movsd qword ptr [esp + 4], xmm0; fld qword ptr [esp + 4]; ret; 
0x0005cfe6: addsd xmm0, xmm1; movsd qword ptr [esp + 4], xmm0; fld qword ptr [esp + 4]; ret; 
0x0006292c: and ah, bh; inc dword ptr [ebx + 0x5e5b04c4]; pop edi; ret; 
0x000c6eaa: and al, 0; add byte ptr [eax], al; add al, ch; mov esp, 0x89fff5fa; ret 0xc085; 
0x000403b3: and al, 0; add byte ptr [eax], al; add al, ch; ret; 
0x000286e1: and al, 0; add byte ptr [eax], al; int 0x80; ret; 
0x000a953a: and al, 0; add byte ptr [ebx + 0x5e], bl; ret; 
0x000a9534: and al, 0; add byte ptr [ecx + 0x24608b], cl; add byte ptr [ebx + 0x5e], bl; ret; 
0x000a998d: and al, 0; add byte ptr [ecx - 0x1717dbd4], cl; ret; 
0x000385f0: and al, 0x10; add byte ptr [eax], 0; add cl, ch; ret 0xfffe; 
0x0002bd7f: and al, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x000ba3e0: and al, 0x10; add esp, 8; ret; 
0x000b9061: and al, 0x10; call 0xb8aa1; add esp, 8; pop ebx; ret; 
0x000f9c60: and al, 0x10; mov byte ptr [edx], al; xor eax, eax; ret; 
0x000c53e5: and al, 0x10; mov dword ptr [eax + 0x14], edx; pop ebx; ret; 
0x00109384: and al, 0x10; mov dword ptr [eax + 0x424], edx; ret; 
0x000cf67b: and al, 0x10; mov dword ptr [eax + 8], edx; ret 4; 
0x000f96d8: and al, 0x10; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x000f96b6: and al, 0x10; mov dword ptr [eax], 0xffffffff; mov eax, 0x55; ret; 
0x000f9ac8: and al, 0x10; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x000c5482: and al, 0x10; mov dword ptr [ebx + 0xe080], eax; add esp, 0x18; pop ebx; ret; 
0x000f9a1a: and al, 0x10; mov dword ptr [ecx], edx; ret; 
0x000f96cf: and al, 0x10; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000658e9: and al, 0x10; mov dword ptr [esp], eax; call 0x91465; add esp, 0xc; ret; 
0x00099d47: and al, 0x10; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0003f9eb: and al, 0x10; pop esi; pop edi; pop ebp; ret; 
0x0003575e: and al, 0x14; add esp, 0x18; pop ebx; pop esi; ret; 
0x0002a001: and al, 0x14; add esp, 0x18; pop ebx; ret; 
0x00095bb9: and al, 0x14; add esp, 0x20; pop ebx; ret; 
0x000f9714: and al, 0x14; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x000f9707: and al, 0x14; mov dword ptr [eax], 0xfffffffe; xor eax, eax; ret; 
0x000f9b6d: and al, 0x14; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x000370be: and al, 0x14; mov dword ptr [ecx], eax; mov eax, 1; add esp, 0xc; ret; 
0x000f96fe: and al, 0x14; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000643d6: and al, 0x14; mov dword ptr [esp], eax; call 0x64068; add esp, 0x10; ret; 
0x000a2b51: and al, 0x14; mov dword ptr [esp], eax; call 0xa2598; add esp, 0x10; ret; 
0x00099e00: and al, 0x18; add esp, 0x24; pop ebx; ret; 
0x0005d6d6: and al, 0x18; add esp, 0x28; pop ebx; ret; 
0x0009d34b: and al, 0x18; add esp, 0x3c; pop ebx; pop esi; ret; 
0x00095564: and al, 0x18; call 0x94920; add esp, 0x14; ret; 
0x000f9b13: and al, 0x18; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x000f9b06: and al, 0x18; mov dword ptr [eax], 0xfffffffe; xor eax, eax; ret; 
0x000f9afd: and al, 0x18; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00043858: and al, 0x1c; add esp, 0x20; pop ebx; pop esi; ret; 
0x00090b0b: and al, 0x1c; add esp, 0x2c; pop ebx; ret; 
0x00036e7b: and al, 0x1c; add esp, 0x44; pop ebx; pop esi; ret; 
0x0009579b: and al, 0x1c; call 0x94920; add esp, 0x14; pop ebx; ret; 
0x000f9bc8: and al, 0x1c; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x000f9b8b: and al, 0x1c; mov dword ptr [eax], 0xffffffff; mov eax, 7; ret; 
0x000f9bbb: and al, 0x1c; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x000660d8: and al, 0x1c; mov dword ptr [edx], ecx; add esp, 0x10; pop ebx; ret; 
0x00065328: and al, 0x1e; cld; inc dword ptr [ebx + 0x5e5b20c4]; ret; 
0x000ba41b: and al, 0x20; add esp, 0x10; pop ebx; pop esi; ret; 
0x000437cd: and al, 0x20; add esp, 0x24; pop ebx; ret; 
0x0003bf82: and al, 0x20; mov dword ptr [edx], eax; add esp, 0x18; pop ebx; ret; 
0x000f983e: and al, 0x20; mov dword ptr [esp], eax; call 0xf972c; add esp, 0x1c; ret; 
0x000f99ec: and al, 0x20; mov dword ptr [esp], eax; call 0xf9881; add esp, 0x1c; ret; 
0x000561d2: and al, 0x24; add bl, ch; ret; 
0x0004e61f: and al, 0x24; add esp, 0x1c; ret; 
0x000e697c: and al, 0x24; add esp, 0x20; ret; 
0x0008937f: and al, 0x24; add esp, 0x28; pop ebx; ret; 
0x0010a613: and al, 0x24; add esp, 0x3c; pop ebx; pop esi; ret; 
0x000e2074: and al, 0x25; add byte ptr [eax], al; add al, ch; ret 0xf458; 
0x000893ff: and al, 0x28; add esp, 0x2c; pop ebx; ret; 
0x000f31bf: and al, 0x29; ret 0xfa83; 
0x00097b0a: and al, 0x2c; add byte ptr [eax], al; add al, ch; pushfd; ret; 
0x00032103: and al, 0x30; add dword ptr [eax], eax; add al, ch; ret; 
0x000b5379: and al, 0x34; add byte ptr [edi], cl; mov es, word ptr [edx + ecx]; add byte ptr [ebx - 0x7cd7dbac], cl; ret 0xc731; 
0x000f4a53: and al, 0x40; add dword ptr [eax], eax; add byte ptr [ecx - 0x76e3dbbc], cl; ret 0x73e9; 
0x00055191: and al, 0x48; or byte ptr [eax], al; add byte ptr [ebx + 0xf102444], cl; test dword ptr [ecx - 0x18000000], ebx; ret; 
0x0002d97a: and al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x000355f3: and al, 0x5b; pop esi; pop edi; ret; 
0x0004390b: and al, 0x5b; pop esi; ret; 
0x000437d1: and al, 0x5b; ret; 
0x000513ba: and al, 0x5e; pop edi; pop ebp; ret; 
0x0012d5e1: and al, 0x66; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001262bf: and al, 0x6a; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00145dfb: and al, 0x6d; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129df5: and al, 0x73; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012d6ad: and al, 0x76; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001383cb: and al, 0x77; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014910f: and al, 0x78; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00147c9b: and al, 0x7a; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129eb7: and al, 0x7e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00077125: and al, 0x7f; add byte ptr [eax], al; add al, ch; xchg eax, ecx; ret; 
0x0014032f: and al, 0x7f; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000780e4: and al, 0x80; add byte ptr [eax], al; add al, ch; ret 0xfabd; 
0x00098f61: and al, 0x80; add byte ptr [eax], al; add byte ptr [ecx + 0x42e82404], cl; ret 0xfff8; 
0x000b1ba4: and al, 0x80; add byte ptr [eax], al; add cl, ch; ret; 
0x000d57b5: and al, 0x83; ret 0x3906; 
0x0005baa4: and al, 0x83; ret 0x8921; 
0x000d8782: and al, 0x83; ret 0xf01; 
0x0007fed3: and al, 0x85; test byte ptr [edi], 0x84; add dword ptr [eax], 0x3d8d0000; ret 0x8b; 
0x000b61f6: and al, 0x85; test byte ptr [edi], 0x84; ret 0; 
0x000ed84f: and al, 0x88; add byte ptr [eax], al; add byte ptr [ebx + 0x348b01c0], al; ret 0xf685; 
0x0006aa0f: and al, 0x89; push eax; and byte ptr [ebx + 0x50892850], cl; and al, 0x5b; ret; 
0x0006ce39: and al, 0x89; ret 0x24e8; 
0x0005490c: and al, 0x89; ret 0x27e8; 
0x000d571f: and al, 0x89; ret 0x4488; 
0x00053b1e: and al, 0x89; ret 0x4489; 
0x0003af69: and al, 0x89; ret 0x448b; 
0x000fbb12: and al, 0x89; ret 0x6c89; 
0x000b7971: and al, 0x89; ret 0x848b; 
0x0006ecdc: and al, 0x89; ret 0xafe8; 
0x00088fc1: and al, 0x89; ret 0xc889; 
0x0004e668: and al, 0x89; ret 0xd0f7; 
0x0006729e: and al, 0x89; ret 0xe283; 
0x000c8c76: and al, 0x89; ret 0xe889; 
0x000dc3c5: and al, 0x89; ret 0xf089; 
0x000dd3d4: and al, 0x89; ret 0xf589; 
0x00034879: and al, 0x89; ret 0xf889; 
0x0004e695: and al, 0x8b; add al, 0x24; and eax, 0x3f; add esp, 4; ret; 
0x000611a8: and al, 0x8b; pop ebp; cld; leave; ret; 
0x000bc486: and al, 0x8c; adc al, byte ptr [eax]; add byte ptr [ecx], ch; ret 0xd089; 
0x00099212: and al, 0x8c; add byte ptr [eax], al; add bh, dh; ret 0xffff; 
0x000af018: and al, 0x8c; add byte ptr [eax], al; add cl, ch; ret; 
0x000d992f: and al, 0x90; add byte ptr [eax], al; add byte ptr [ecx - 0x2b17dbfc], cl; ret; 
0x000b07c9: and al, 0x94; add byte ptr [eax], al; add cl, ch; ret 0xfff3; 
0x00047ff4: and al, 0x98; add byte ptr [eax], al; add byte ptr [ecx + 0xf], dh; popfd; ret 0xc283; 
0x00005d28: and al, 0x9c; adc byte ptr [eax], al; ret 0; 
0x000ced4c: and al, 0xa0; adc al, byte ptr [eax]; add byte ptr [ebx - 0x7bf0fd1b], al; ret; 
0x00047e7f: and al, 0xa0; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xbc83; 
0x000ca011: and al, 0xa8; add byte ptr [eax], al; add byte ptr [ebx + 0x148d0fe0], al; ret 0x28b; 
0x000b7ad0: and al, 0xc; add byte ptr [eax], al; add al, ch; salc; ret; 
0x00060bfa: and al, 0xc; cmpxchg dword ptr [edx], ecx; ret; 
0x00060bda: and al, 0xc; lock cmpxchg dword ptr [edx], ecx; ret; 
0x000f9a57: and al, 0xc; mov dword ptr [eax], 0xffffffff; xor eax, eax; ret; 
0x000f9721: and al, 0xc; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x000bf695: and al, 0xc; mov dword ptr [ecx], eax; mov eax, 1; pop ebx; ret; 
0x00051e4b: and al, 0xc; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x000f9a4e: and al, 0xc; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0002bb59: and al, 0xc; mov dword ptr [esi + 0x1c], 1; xor eax, eax; pop esi; ret; 
0x000bd2c4: and al, 0xc; mov edx, dword ptr [ecx]; mov dword ptr [eax + 8], edx; mov eax, 1; ret; 
0x00065961: and al, 0xc; sbb al, 0x75; add eax, 0x5b10c483; ret; 
0x000b0512: and al, 0xc0; add byte ptr [eax], al; add byte ptr [ecx - 0x769bdbac], cl; ret 0xb489; 
0x000af6d6: and al, 0xc4; add byte ptr [eax], al; add byte ptr [ebx - 0x78f0f807], al; mov edx, 0x83000007; ret 0x8b08; 
0x0005c93d: and al, 0xc9; ret; 
0x0005c916: and al, 0xd9; add al, 0x24; add esp, 4; ret; 
0x0004e5d1: and al, 0xd9; sub al, 0x24; add esp, 4; ret; 
0x0005cb13: and al, 0xd9; ret; 
0x0009d3b0: and al, 0xdd; add al, 0x24; leave; ret; 
0x0007fc25: and al, 0xe8; aad 0x76; cli; inc dword ptr [ebx + 0x5f5b10c4]; ret; 
0x000a2ee9: and al, 0xe8; adc dword ptr [edx - 8], eax; inc dword ptr [ebx + 0x5d5b04c4]; ret; 
0x000969dd: and al, 0xe8; adc eax, 0x8100074d; ret; 
0x000db766: and al, 0xe8; add al, 0x80; hlt; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x00065c88: and al, 0xe8; add dl, dh; sti; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000ebb27: and al, 0xe8; add dword ptr [ebx - 0x3b7c000d], 4; pop ebx; ret; 
0x0008ccd7: and al, 0xe8; add ebp, dword ptr [ecx - 0x3b7c0007]; adc al, 0x5b; ret; 
0x000c6ce6: and al, 0xe8; add esi, esi; dec dword ptr [ebp + 0xe08c83]; add bl, ch; ret 0x6c7; 
0x00065326: and al, 0xe8; and al, 0x1e; cld; inc dword ptr [ebx + 0x5e5b20c4]; ret; 
0x00035456: and al, 0xe8; and bh, bh; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000db50a: and al, 0xe8; and byte ptr [edx - 0x3b7c000c], dh; sbb al, 0x5b; pop esi; ret; 
0x000e06f8: and al, 0xe8; and ch, byte ptr [ecx]; hlt; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000c5434: and al, 0xe8; and dh, dh; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x0002a208: and al, 0xe8; bound ebx, qword ptr [edx - 0x3b7c0001]; or al, 0x5b; ret; 
0x0003ef30: and al, 0xe8; cmp cl, byte ptr [ebp - 2]; inc dword ptr [ebx + 0x5e5b18c4]; ret; 
0x000c5e1d: and al, 0xe8; cmp eax, 0x89fff611; ret 0x45c6; 
0x000c8077: and al, 0xe8; cmp ecx, 0xf5; inc dword ptr [ebx + 0x5e5b0cc4]; ret; 
0x00027b0f: and al, 0xe8; cmp edi, dword ptr [esi - 0x3b7c0001]; or byte ptr [edi + 0x5b], bl; ret; 
0x00107fcd: and al, 0xe8; dec ebp; ret; 
0x00065c31: and al, 0xe8; dec ecx; or eax, 0xc483fffc; or al, 0x5b; ret; 
0x000d95b0: and al, 0xe8; dec edx; ret; 
0x0009c70c: and al, 0xe8; dec esi; cmp eax, 0x8c483ff; pop ebx; ret; 
0x0007e42c: and al, 0xe8; dec esi; jns 0x7e42b; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000983fc: and al, 0xe8; dec esi; ret; 
0x000d711e: and al, 0xe8; dec esp; ret 0xfff4; 
0x0008e3a0: and al, 0xe8; fidivr dword ptr [ecx - 7]; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0009c29b: and al, 0xe8; fild qword ptr [esi - 0x3b7c0008]; or al, 0x5b; ret; 
0x000ee27b: and al, 0xe8; fisttp word ptr [eax - 0x3b7c000d]; adc byte ptr [ebx + 0x5e], bl; ret; 
0x000e073e: and al, 0xe8; fmul qword ptr [eax - 0xc]; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x000f82ad: and al, 0xe8; fxch st(0), st(0); inc dword ptr [ebp - 0x14298a40]; ret; 
0x0002e0df: and al, 0xe8; imul ecx, dword ptr [ebp - 0x3b7c0001], 0x10; pop ebx; pop esi; ret; 
0x000e866f: and al, 0xe8; imul edi, dword ptr [edx - 0x3b7c000d], 0x14; pop ebx; ret; 
0x0005ac6e: and al, 0xe8; in al, dx; ret 0xfffc; 
0x000e48ed: and al, 0xe8; in eax, dx; ljmp 0x5b18:0xc483fff3; ret; 
0x000b919a: and al, 0xe8; inc eax; ret; 
0x000ba6f7: and al, 0xe8; inc ebx; ret; 
0x0002bba3: and al, 0xe8; inc edi; mov ecx, 0xc483ffff; or al, 0x5b; ret; 
0x00098f68: and al, 0xe8; inc edx; ret 0xfff8; 
0x00108888: and al, 0xe8; inc edx; ret; 
0x0005b764: and al, 0xe8; inc esi; mov ah, 0xfc; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000b7654: and al, 0xe8; inc esi; ret 0xfff6; 
0x000e85b4: and al, 0xe8; inc esi; sal ebx, cl; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0006552e: and al, 0xe8; insb byte ptr es:[edi], dx; add bh, ah; inc dword ptr [ebx + 0x5e5b20c4]; ret; 
0x0010b64d: and al, 0xe8; insd dword ptr es:[edi], dx; ret; 
0x000c7817: and al, 0xe8; jecxz 0xc77fb; cmc; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x00059f6f: and al, 0xe8; jnp 0x59f05; cld; inc dword ptr [ebx + 0x5e5b50c4]; ret; 
0x0007e60a: and al, 0xe8; jo 0x7e685; cli; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x0005d7d0: and al, 0xe8; jp 0x5d76a; cld; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x00081630: and al, 0xe8; lcall 0x10c4:0x83fffa25; pop ebx; ret; 
0x000a78be: and al, 0xe8; lodsb al, byte ptr [esi]; ret; 
0x00056c7a: and al, 0xe8; mov al, byte ptr [0x89fffcea]; ret 0xc085; 
0x000e8150: and al, 0xe8; mov byte ptr [0x81000235], al; ret; 
0x00043750: and al, 0xe8; mov byte ptr [0x81000c7f], al; ret; 
0x0007e3f2: and al, 0xe8; mov byte ptr [ecx - 6], bh; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x00087dc5: and al, 0xe8; mov ch, 0xdf; stc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000db494: and al, 0xe8; mov dh, 0xc0; hlt; inc dword ptr [ebx + 0x5e5b2cc4]; ret; 
0x000f3447: and al, 0xe8; mov dword ptr [0x89fff30f], eax; ret 0x71e9; 
0x0006b9f7: and al, 0xe8; mov dword ptr [0xe9fffb91], eax; ret; 
0x0009ce71: and al, 0xe8; mov dword ptr [eax + edi*8 - 1], esp; add esp, 0x10; pop ebx; ret; 
0x0008b241: and al, 0xe8; mov dword ptr [edx - 0x3b7c0007], edi; add al, 0x5b; ret; 
0x000ebfc1: and al, 0xe8; mov dword ptr [esi - 0x3b7c000d], ebp; add al, 0x5b; ret; 
0x000d78bf: and al, 0xe8; mov esi, ebp; hlt; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000571fe: and al, 0xe8; mov esp, 0x89fffd00; ret 0x8389; 
0x0009112e: and al, 0xe8; mov word ptr [ebx - 7], ss; dec dword ptr [ebx - 0x7cc7dbac]; ret 0x8901; 
0x00041566: and al, 0xe8; movsb byte ptr es:[edi], byte ptr [esi]; and al, 0xfe; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000ecbce: and al, 0xe8; or al, 0xac; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x0009d182: and al, 0xe8; or byte ptr [eax + edi*8 - 1], ah; add esp, 0xc; pop ebx; ret; 
0x000e3781: and al, 0xe8; or dword ptr [eax - 0xc], eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000b8f31: and al, 0xe8; or dword ptr [ebp - 0x3b7c000a], esi; and al, 0x5b; ret; 
0x000a62e5: and al, 0xe8; or eax, 0x81000654; ret; 
0x000428e5: and al, 0xe8; or eax, 0x81000c8e; ret; 
0x0009c66f: and al, 0xe8; or ebp, dword ptr [ebx - 0x3b7c0008]; or al, 0x5b; ret; 
0x000d6a1f: and al, 0xe8; or ecx, dword ptr [esi*8 + 0xcc483ff]; pop ebx; ret; 
0x000e4b7f: and al, 0xe8; or esi, eax; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000c7764: and al, 0xe8; out 0xf6, al; cmc; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000d8024: and al, 0xe8; out dx, al; hlt; inc dword ptr [ebx + 0x5e5b0cc4]; ret; 
0x000ebf0b: and al, 0xe8; outsd dx, dword ptr [esi]; xchg eax, edi; inc dword ptr [ebx + 0x5f5b08c4]; ret; 
0x00035e9d: and al, 0xe8; pop ebp; call 0xc4875ea3; or al, 0x5b; ret; 
0x00058cfd: and al, 0xe8; pop ebp; mov dword ptr [0xc483fffc], eax; or al, 0x5b; ret; 
0x00096b1f: and al, 0xe8; pop ebx; clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000683ef: and al, 0xe8; pop ebx; ret; 
0x000f27d3: and al, 0xe8; pop es; inc eax; inc dword ptr [ebx + 0x5f5b18c4]; ret; 
0x000ea8fc: and al, 0xe8; pop esi; ret 0xfff3; 
0x0002c05b: and al, 0xe8; push dword ptr [eax - 1]; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0008920a: and al, 0xe8; push eax; in eax, -7; inc dword ptr [ebp - 0x76f68b40]; ret 0xf089; 
0x00088943: and al, 0xe8; push edi; ret 0xfff9; 
0x000980e4: and al, 0xe8; push es; ret 0xfff8; 
0x00059b24: and al, 0xe8; push es; ret; 
0x000a9a24: and al, 0xe8; push esi; ret; 
0x000c339e: and al, 0xe8; push esp; add dword ptr [eax + eax], -0x7f; ret; 
0x000fd9b4: and al, 0xe8; push ss; sahf; inc dword ptr [ebx + 0x5d5b14c4]; ret; 
0x000c99ca: and al, 0xe8; rcr byte ptr [ebx - 0x3b7c000b], 1; or al, 0x5b; ret; 
0x000b880a: and al, 0xe8; rcr dl, 0xf6; dec dword ptr [ecx - 0x5717dbcc]; ret; 
0x0004ef69: and al, 0xe8; rcr dword ptr [ebx - 3], -1; add esp, 0xc; pop ebx; ret; 
0x0003a130: and al, 0xe8; ret 0xd15; 
0x00108808: and al, 0xe8; ret 0xf1c3; 
0x001004d8: and al, 0xe8; ret 0xf246; 
0x000f6448: and al, 0xe8; ret 0xf2d9; 
0x000f7388: and al, 0xe8; ret 0xf2fc; 
0x000f1e98: and al, 0xe8; ret 0xf358; 
0x000ee8d8: and al, 0xe8; ret 0xf362; 
0x000e68a8: and al, 0xe8; ret 0xf3d3; 
0x000d68d8: and al, 0xe8; ret 0xf4e2; 
0x000d2588: and al, 0xe8; ret 0xf524; 
0x000d0d88: and al, 0xe8; ret 0xf543; 
0x000c4148: and al, 0xe8; ret 0xf5ef; 
0x000c4f48: and al, 0xe8; ret 0xf5fb; 
0x000c23d8: and al, 0xe8; ret 0xf627; 
0x000bbc88: and al, 0xe8; ret 0xf6b1; 
0x000b5688: and al, 0xe8; ret 0xf6de; 
0x000a32e8: and al, 0xe8; ret 0xf816; 
0x000a3f98: and al, 0xe8; ret 0xf835; 
0x0008a5f8: and al, 0xe8; ret 0xf9c8; 
0x0007b368: and al, 0xe8; ret 0xfab0; 
0x00067758: and al, 0xe8; ret 0xfbb9; 
0x00064388: and al, 0xe8; ret 0xfc2a; 
0x0005d7c8: and al, 0xe8; ret 0xfc8e; 
0x00054118: and al, 0xe8; ret 0xfd0b; 
0x000445d8: and al, 0xe8; ret 0xfe05; 
0x00040c38: and al, 0xe8; ret 0xfe27; 
0x00037688: and al, 0xe8; ret 0xfef1; 
0x000a28d0: and al, 0xe8; ret 0xfffc; 
0x000653c9: and al, 0xe8; rol dword ptr [esi], 1; cld; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000ea659: and al, 0xe8; ror dword ptr [ecx - 0x3b7c000d], 0xc; pop ebx; ret; 
0x00082909: and al, 0xe8; sar dword ptr [edi], -6; inc dword ptr [ebx + 0x5e5b24c4]; ret; 
0x0010a4a9: and al, 0xe8; sar dword ptr [esi - 0x3b7c000f], 8; pop ebx; ret; 
0x0005d72e: and al, 0xe8; sbb al, 0x70; cld; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000f6190: and al, 0xe8; sbb dh, al; dec dword ptr [ecx - 0x7a8bdbbc]; ror byte ptr [edi], 0x84; ret; 
0x0005bfd7: and al, 0xe8; sbb dword ptr [esi - 0x3b7c0004], 4; pop ebx; ret; 
0x00041287: and al, 0xe8; sbb eax, 0xc483fffe; sbb al, 0x5b; ret; 
0x0009c35f: and al, 0xe8; sbb ebp, dword ptr [esi - 0x3b7c0008]; or al, 0x5b; ret; 
0x000fe22f: and al, 0xe8; sbb ecx, dword ptr [esi - 0xe]; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000b902f: and al, 0xe8; sbb esi, dword ptr [ebp - 0x3b7c000a]; or al, 0x5b; ret; 
0x000f20dc: and al, 0xe8; scasb al, byte ptr es:[edi]; adc eax, 0xc483fff3; adc byte ptr [ebx + 0x5e], bl; ret; 
0x0008a01c: and al, 0xe8; scasb al, byte ptr es:[edi]; ret 0xfff9; 
0x000c5c4b: and al, 0xe8; scasd eax, dword ptr es:[edi]; or dh, dh; inc dword ptr [ebx + 0x5e5b1cc4]; ret; 
0x000688eb: and al, 0xe8; scasd eax, dword ptr es:[edi]; ret 0xfffb; 
0x000969cb: and al, 0xe8; scasd eax, dword ptr es:[edi]; clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0008b1a9: and al, 0xe8; shl dword ptr [edx - 0x3b7c0007], 1; add al, 0x5b; ret; 
0x000c9169: and al, 0xe8; shl esp, -0xb; inc dword ptr [ebx + 0x5f5b0cc4]; ret; 
0x000797cf: and al, 0xe8; stosd dword ptr es:[edi], eax; ret; 
0x00050c8e: and al, 0xe8; sub al, 0x4d; std; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x000a2a80: and al, 0xe8; sub bl, byte ptr [edi]; clc; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0007d292: and al, 0xe8; sub byte ptr [ebx - 0x3b7c0006], cl; adc byte ptr [ebx + 0x5e], bl; ret; 
0x000920f2: and al, 0xe8; sub byte ptr [ecx], ah; stc; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0009dec5: and al, 0xe8; sub eax, 0x810006d8; ret; 
0x000862c5: and al, 0xe8; sub eax, 0x81000854; ret; 
0x0010b66f: and al, 0xe8; sub eax, esp; int1; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000fafa2: and al, 0xe8; test al, 0xb9; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x00050d49: and al, 0xe8; test eax, 0x81000ba9; ret; 
0x000d35b1: and al, 0xe8; test eax, 0x89fff541; ret 0x4489; 
0x000ec004: and al, 0xe8; xchg byte ptr [ebp - 0x3b7c000d], cl; add al, 0x5b; pop esi; ret; 
0x0009d424: and al, 0xe8; xchg byte ptr [esi + 0x3dfff8], dl; add dword ptr [eax], eax; add byte ptr [esp + ecx*2 - 0x77], dh; ret 0xe283; 
0x00108905: and al, 0xe8; xchg eax, ebp; ret 0xfff1; 
0x000f23b7: and al, 0xe8; xchg eax, ebx; dec edx; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0009bab7: and al, 0xe8; xchg eax, ebx; mov bl, 0xf8; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000a8209: and al, 0xe8; xchg eax, ecx; ret; 
0x0005e2b8: and al, 0xe8; xchg eax, edx; mov edi, esp; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000c59b4: and al, 0xe8; xchg eax, esi; adc al, 0xf6; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000ea9f8: and al, 0xe8; xor ah, byte ptr [ecx - 0x3b7c000d]; or al, 0x5b; ret; 
0x000db5da: and al, 0xe8; xor byte ptr [edi - 0x3b7c000c], bh; adc al, 0x5b; pop esi; ret; 
0x0006b128: and al, 0xe8; xor cl, byte ptr [ecx - 0x3b7c0005]; or al, 0x5b; ret; 
0x0009c549: and al, 0xe8; xor dword ptr [eax + edi*8 + 0xcc483ff], ebp; pop ebx; ret; 
0x001090e7: and al, 0xe8; xor edi, dword ptr [esi - 0x3b7c000f]; or al, 0x5b; pop esi; ret; 
0x000f81b9: and al, 0xe8; xor esi, 0xc483fff2; add al, 0x5b; ret; 
0x0010a53b: and al, 0xe8; aas; mov eax, 0xc483fff1; or byte ptr [ebx + 0x5e], bl; ret; 
0x00076e62: and al, 0xe8; clc; ret 0xfffa; 
0x000f9652: and al, 0xe8; clc; xlatb; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0005aa7c: and al, 0xe8; into; ret; 
0x00052a6b: and al, 0xe8; iretd; or bh, ch; inc dword ptr [ebx + 0x5e5b1cc4]; ret; 
0x000b8c81: and al, 0xe8; leave; ret; 
0x000b656a: and al, 0xe8; nop; in al, -0xa; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000f8ee9: and al, 0xe8; popal; loope 0xf8ee0; dec dword ptr [ecx - 0x76e3dbbc]; ret 0xc085; 
0x00039bd7: and al, 0xe8; ret; 
0x0005b5ac: and al, 0xe8; sahf; mov eax, 0xc483fffc; adc byte ptr [ebx + 0x5e], bl; ret; 
0x000a9a8d: and al, 0xe8; std; mov esp, 0xc483fff7; or al, 0x5b; ret; 
0x0003481d: and al, 0xe8; std; or al, 0xff; inc dword ptr [ebx + 0x5e5b18c4]; ret; 
0x000f1dcf: and al, 0xe8; sti; dec eax; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000d69e3: and al, 0xe8; xlatb; ljmp 0x5b0c:0xc483fff4; ret; 
0x000a7893: and al, 0xe8; xlatb; ret; 
0x000a2696: and al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc104; 
0x000a26a9: and al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc106; 
0x000e51f1: and al, 0xf4; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00122521: and al, 0xf7; dec dword ptr [eax]; xchg eax, esi; add dword ptr [eax], eax; ret; 
0x00060c12: and al, 0xfc; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0004e6a6: and al, 0xfc; and eax, 0xc00; ret; 
0x0004e64d: and al, 0xfc; fldcw word ptr [esp - 4]; ret; 
0x0004e6a2: and al, 0xfc; mov eax, dword ptr [esp - 4]; and eax, 0xc00; ret; 
0x0004e651: and al, 0xfc; ret; 
0x00041569: and al, 0xfe; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x00035bf2: and al, 0xff; push ecx; or al, 0xc9; ret; 
0x000ba3dd: and al, 0xff; push esp; and al, 0x10; add esp, 8; ret; 
0x000e6979: and al, 0xff; push esp; and al, 0x24; add esp, 0x20; ret; 
0x00108b9e: and al, 0xff; xchg eax, esi; lock add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b1cc4], al; ret; 
0x00035123: and al, 1; add byte ptr [eax], al; add al, ch; ret; 
0x0013e425: and al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000da213: and al, 2; add byte ptr [eax], al; add al, ch; ret; 
0x00128533: and al, 2; bound ecx, qword ptr [edx]; push cs; adc al, 0x41; ret; 
0x00147f47: and al, 2; dec ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001264fb: and al, 2; dec ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127d63: and al, 2; dec edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001263c7: and al, 2; dec esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00148fa5: and al, 2; dec esi; push cs; or al, 0x41; ret; 
0x00126da3: and al, 2; dec esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129a6f: and al, 2; fimul word ptr [edx]; push cs; adc al, 0x41; ret; 
0x0014c35b: and al, 2; fisttp qword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0014908f: and al, 2; inc eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126267: and al, 2; inc ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127533: and al, 2; inc ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014096f: and al, 2; inc ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013ff9b: and al, 2; inc edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00143ff1: and al, 2; inc edx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012689f: and al, 2; inc esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00128355: and al, 2; inc esi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001290ff: and al, 2; insb byte ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001354c7: and al, 2; insd dword ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00137003: and al, 2; jno 0x137011; push cs; adc al, 0x41; ret; 
0x0013e7d9: and al, 2; jno 0x13e7e7; push cs; or al, 0x41; ret; 
0x0013f70b: and al, 2; jno 0x13f719; push cs; adc al, 0x41; ret; 
0x00146553: and al, 2; jno 0x146561; push cs; adc al, 0x41; ret; 
0x00142007: and al, 2; jns 0x142015; push cs; adc al, 0x41; ret; 
0x001310e3: and al, 2; jo 0x1310f1; push cs; adc al, 0x41; ret; 
0x00147fbb: and al, 2; jo 0x147fc9; push cs; adc al, 0x41; ret; 
0x00129b47: and al, 2; jp 0x129b55; push cs; adc al, 0x41; ret; 
0x0012fcd3: and al, 2; lea ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x00129ffb: and al, 2; lodsb al, byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001318d7: and al, 2; mov al, 0xa; push cs; adc al, 0x41; ret; 
0x0014b517: and al, 2; mov al, byte ptr [0x41140e0a]; ret; 
0x00126cf7: and al, 2; mov byte ptr [edx], cl; push cs; adc al, 0x41; ret; 
0x00135857: and al, 2; mov cl, 0xa; push cs; adc al, 0x41; ret; 
0x001358c3: and al, 2; mov dh, 0xa; push cs; adc al, 0x41; ret; 
0x00133e8f: and al, 2; mov dl, 0xa; push cs; adc al, 0x41; ret; 
0x001431eb: and al, 2; mov eax, dword ptr [0x41140e0a]; ret; 
0x0013ebd7: and al, 2; mov ebx, 0x41140e0a; ret; 
0x001468c3: and al, 2; mov ecx, 0x41140e0a; ret; 
0x0014a93f: and al, 2; mov edx, 0x41140e0a; ret; 
0x00134457: and al, 2; mov word ptr [edx], cs; push cs; adc al, 0x41; ret; 
0x00134e8b: and al, 2; movsb byte ptr es:[edi], byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013c2ef: and al, 2; or byte ptr [edx], 0xe; adc al, 0x41; ret; 
0x0014918f: and al, 2; or cl, byte ptr [0x4114]; ret; 
0x00125abf: and al, 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001490cf: and al, 2; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x00129cab: and al, 2; or cl, byte ptr gs:[esi]; adc al, 0x41; ret; 
0x0012bf9b: and al, 2; or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x00126d4b: and al, 2; outsb dx, byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127a67: and al, 2; outsd dx, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013a463: and al, 2; pop eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001266b3: and al, 2; pop ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126603: and al, 2; pop ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001278df: and al, 2; pop edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012caa5: and al, 2; pop edi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001269af: and al, 2; pop edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013aedd: and al, 2; push 0x410c0e0a; ret; 
0x00129e77: and al, 2; push eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013542b: and al, 2; push ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013c283: and al, 2; push edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001418d3: and al, 2; push edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00142667: and al, 2; push esi; push cs; adc al, 0x41; ret; 
0x0012dbd3: and al, 2; scasb al, byte ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001288b7: and al, 2; test dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0013481b: and al, 2; xchg eax, ebp; push cs; adc al, 0x41; ret; 
0x0014a8bf: and al, 2; xchg eax, ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012880b: and al, 2; xchg eax, esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00128863: and al, 2; cmc; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001385d3: and al, 2; int1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014019f: and al, 2; lahf; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00139b93: and al, 2; nop; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126dfb: and al, 2; popal; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127ce9: and al, 2; popal; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013c387: and al, 2; pushal; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00132dab: and al, 2; pushfd; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001420fb: and al, 2; sti; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014751f: and al, 2; wait; push cs; adc al, 0x41; ret; 
0x00140a5b: and al, 3; adc dword ptr [ecx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014213b: and al, 3; cmp al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013d03d: and al, 3; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013c82b: and al, 3; push es; add dword ptr [esi], ecx; adc al, 0x41; ret; 
0x0013f278: and al, 3; rol dword ptr [edx], 0xa; push cs; adc al, 0x41; ret; 
0x00109388: and al, 4; add byte ptr [eax], al; ret; 
0x00036cea: and al, 4; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x00060532: and al, 4; add dword ptr [ebx + 0x39042444], ecx; inc edi; adc al, 0x77; ret 0xf631; 
0x000be89c: and al, 4; add dword ptr [ecx], 0x838d0000; ret 0xfc6f; 
0x000ead9c: and al, 4; add eax, 0x20; ret; 
0x00037d67: and al, 4; add esp, 8; pop ebx; pop esi; ret; 
0x0004f7e6: and al, 4; and eax, 0x7f; ret; 
0x0004e6e2: and al, 4; bswap eax; ret; 
0x0006abaf: and al, 4; call 0x24350; add esp, 0xc; pop ebx; ret; 
0x0005cf48: and al, 4; fadd qword ptr [esp + 4]; ret; 
0x0005d00c: and al, 4; fild qword ptr [esp + 4]; ret; 
0x0004e072: and al, 4; fistp dword ptr [esp + 4]; mov eax, dword ptr [esp + 4]; ret; 
0x0005cfb5: and al, 4; fld dword ptr [esp + 4]; ret; 
0x0005cfee: and al, 4; fld qword ptr [esp + 4]; ret; 
0x000611a4: and al, 4; fld qword ptr [esp]; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0005c939: and al, 4; fld qword ptr [esp]; leave; ret; 
0x0004e61c: and al, 4; fldenv dword ptr [esp]; add esp, 0x1c; ret; 
0x0005d02c: and al, 4; fstp dword ptr [esp + 4]; fld dword ptr [esp + 4]; ret; 
0x0002bb38: and al, 4; lea eax, dword ptr [eax + eax*2]; mov dword ptr [ecx + eax*4 + 0x3680], 0; xor eax, eax; ret; 
0x0002bb1e: and al, 4; lea eax, dword ptr [eax + eax*2]; mov eax, dword ptr [ecx + eax*4 + 0x367c]; ret; 
0x00060b52: and al, 4; lock dec dword ptr [edx]; ret; 
0x00060b72: and al, 4; lock inc dword ptr [edx]; ret; 
0x000db543: and al, 4; mov dword ptr [eax + 0x1b8], edx; ret; 
0x000db55f: and al, 4; mov dword ptr [eax + 0x1bc], edx; ret; 
0x000524e7: and al, 4; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x000f9a9b: and al, 4; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x000524c9: and al, 4; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x000524d9: and al, 4; mov dword ptr [eax + 8], edx; xor eax, eax; ret; 
0x0006b64a: and al, 4; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0006b657: and al, 4; mov dword ptr [eax], 0xffffffff; xor eax, eax; ret; 
0x000cf65b: and al, 4; mov dword ptr [eax], edx; mov dword ptr [eax + 4], ecx; add esp, 8; ret 4; 
0x000ebab1: and al, 4; mov dword ptr [eax], edx; ret; 
0x000315bf: and al, 4; mov dword ptr [ecx + 0x1314], eax; ret; 
0x0008ea4c: and al, 4; mov dword ptr [ecx + 0x2220], eax; ret; 
0x000e0719: and al, 4; mov dword ptr [ecx + 0x2dc0], eax; ret; 
0x00076fab: and al, 4; mov dword ptr [ecx], eax; mov dword ptr [ecx + 4], edx; xor eax, eax; ret; 
0x00060d1b: and al, 4; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000f2352: and al, 4; mov dword ptr [esp], eax; call dword ptr [eax + 0x2c]; add esp, 0xc; ret; 
0x000f2373: and al, 4; mov dword ptr [esp], eax; call dword ptr [eax + 0x30]; add esp, 0xc; ret; 
0x000370de: and al, 4; mov dword ptr [esp], eax; call dword ptr [edx + 4]; add esp, 0xc; ret; 
0x0005fb2b: and al, 4; mov dword ptr [esp], edx; call ecx; add esp, 0x20; ret; 
0x00060b62: and al, 4; mov eax, 0xffffffff; lock xadd dword ptr [edx], eax; dec eax; ret; 
0x00036d09: and al, 4; mov eax, dword ptr [eax + 0x14]; ret; 
0x0005f9a8: and al, 4; mov eax, dword ptr [eax + 0x1c]; mov eax, dword ptr [eax + 0x114]; ret; 
0x0005f986: and al, 4; mov eax, dword ptr [eax + 0x1c]; mov eax, dword ptr [eax + 0x12c]; ret; 
0x000d7df2: and al, 4; mov eax, dword ptr [eax + 0x20]; ret; 
0x000f1d86: and al, 4; mov eax, dword ptr [eax + 0xc]; ret; 
0x000f819a: and al, 4; mov eax, dword ptr [eax]; add eax, 0xc; ret; 
0x000c51ff: and al, 4; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0004e053: and al, 4; mov eax, dword ptr [esp + 4]; or eax, 0x80000000; ret; 
0x0004e034: and al, 4; mov eax, dword ptr [esp + 4]; ret; 
0x00060af2: and al, 4; mov eax, dword ptr [esp + 8]; lock add dword ptr [edx], eax; ret; 
0x00060b22: and al, 4; mov eax, dword ptr [esp + 8]; lock and dword ptr [edx], eax; ret; 
0x00060b92: and al, 4; mov eax, dword ptr [esp + 8]; lock or dword ptr [edx], eax; ret; 
0x00060bc2: and al, 4; mov eax, dword ptr [esp + 8]; xchg dword ptr [edx], eax; ret; 
0x000524bb: and al, 4; mov word ptr [eax], dx; xor eax, eax; ret; 
0x000a788b: and al, 4; movsd dword ptr es:[edi], dword ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x2817dbcc], cl; ret; 
0x0005cf42: and al, 4; movsd qword ptr [esp + 4], xmm0; fadd qword ptr [esp + 4]; ret; 
0x000ead39: and al, 4; movsx eax, word ptr [eax + edx*2 + 2]; ret; 
0x000eaba1: and al, 4; movzx eax, word ptr [eax + edx*2 + 2]; and eax, 0x10; movzx eax, ax; ret; 
0x000eac29: and al, 4; movzx eax, word ptr [eax + edx*2 + 2]; and eax, 0x20; movzx eax, ax; ret; 
0x000eac6c: and al, 4; movzx eax, word ptr [eax + edx*2 + 2]; and eax, 0x40; movzx eax, ax; ret; 
0x000eaa56: and al, 4; movzx eax, word ptr [eax + edx*2 + 2]; and eax, 1; ret; 
0x000eaad8: and al, 4; movzx eax, word ptr [eax + edx*2 + 2]; and eax, 2; movzx eax, ax; ret; 
0x000eab1b: and al, 4; movzx eax, word ptr [eax + edx*2 + 2]; and eax, 4; movzx eax, ax; ret; 
0x000eaa19: and al, 4; movzx eax, word ptr [eax + edx*2 + 2]; and eax, 5; ret; 
0x000eab5e: and al, 4; movzx eax, word ptr [eax + edx*2 + 2]; and eax, 8; movzx eax, ax; ret; 
0x0004e057: and al, 4; or eax, 0x80000000; ret; 
0x0004e647: and al, 4; or edx, ecx; mov dword ptr [esp - 4], edx; fldcw word ptr [esp - 4]; ret; 
0x000bab32: and al, 4; ret 0; 
0x0009395f: and al, 4; ret 1; 
0x00054569: and al, 4; ret 2; 
0x0008ca5f: and al, 4; ret 4; 
0x0002bc2b: and al, 4; sete al; movzx eax, al; ret; 
0x0004e19e: and al, 4; shr eax, 0x1f; ret; 
0x0005d126: and al, 4; shr eax, cl; add esp, 0x10; ret; 
0x000ead94: and al, 4; sub eax, 0x20; ret; 
0x0002e572: and al, 4; test eax, eax; jns 0x2e57a; neg eax; ret; 
0x0002e5a2: and al, 4; test eax, eax; jns 0x2e5aa; neg eax; ret; 
0x00052426: and al, 4; test edx, edx; sete al; neg eax; ret; 
0x0004e6f3: and al, 4; xchg ah, al; ret; 
0x0007fad2: and al, 4; xor edx, edx; div dword ptr [esp + 8]; ret; 
0x0007fae2: and al, 4; cdq; idiv dword ptr [esp + 8]; ret; 
0x000980dc: and al, 4; das; add byte ptr [eax], al; add byte ptr [ecx + 0x6e8243c], cl; ret 0xfff8; 
0x0004e6d2: and al, 4; fabs; ret; 
0x0002c3a8: and al, 4; ret; 
0x000a3ce3: and al, 8; add byte ptr [eax], al; add al, ch; ret; 
0x0003e681: and al, 8; add dh, byte ptr [ebp + 0x19]; ret; 
0x0003e713: and al, 8; add dword ptr [ebp - 0x1b], esi; ret; 
0x0003e6b8: and al, 8; add dword ptr [ebp - 0x1e], esi; ret; 
0x000915ac: and al, 8; add esp, 0x5c; pop ebx; pop esi; ret; 
0x000cf637: and al, 8; add esp, 0xc; pop ebx; pop esi; ret; 
0x000d670f: and al, 8; add esp, 0xc; pop ebx; ret; 
0x000d8617: and al, 8; div ecx; mov edx, ebx; pop ebx; ret; 
0x0003ea8d: and al, 8; lea eax, dword ptr [eax + eax + 1]; shl eax, 3; ret; 
0x00060af6: and al, 8; lock add dword ptr [edx], eax; ret; 
0x00060b26: and al, 8; lock and dword ptr [edx], eax; ret; 
0x00060b96: and al, 8; lock or dword ptr [edx], eax; ret; 
0x000f9877: and al, 8; mov byte ptr [ecx], al; xor eax, eax; ret; 
0x00037071: and al, 8; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 0x14], 0; mov dword ptr [eax + 0x10], 0; ret; 
0x0005244a: and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0002bb05: and al, 8; mov dword ptr [ecx + eax*4 + 0x367c], edx; xor eax, eax; ret; 
0x000f2384: and al, 8; mov dword ptr [esp], eax; call dword ptr [eax + 0x34]; add esp, 4; ret; 
0x0005f978: and al, 8; mov dword ptr [esp], eax; call dword ptr [eax + 4]; add esp, 4; ret; 
0x000e6975: and al, 8; mov dword ptr [esp], eax; call dword ptr [esp + 0x24]; add esp, 0x20; ret; 
0x000524e3: and al, 8; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x000524c5: and al, 8; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x000524b7: and al, 8; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00061075: and al, 8; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00060bf6: and al, 8; mov ecx, dword ptr [esp + 0xc]; cmpxchg dword ptr [edx], ecx; ret; 
0x00060bd6: and al, 8; mov ecx, dword ptr [esp + 0xc]; lock cmpxchg dword ptr [edx], ecx; ret; 
0x00060b06: and al, 8; mov ecx, eax; lock xadd dword ptr [edx], eax; add eax, ecx; ret; 
0x00108fd5: and al, 8; mov edi, edx; pop esi; ret; 
0x00052439: and al, 8; mov word ptr [eax], dx; xor eax, eax; ret; 
0x000e8946: and al, 8; movzx ecx, dh; mov byte ptr [eax], cl; mov byte ptr [eax + 1], dl; ret; 
0x0002c459: and al, 8; pop ebx; ret; 
0x00106730: and al, 8; pop edi; ret; 
0x0005d002: and al, 8; punpckldq xmm0, xmm1; movq qword ptr [esp + 4], xmm0; fild qword ptr [esp + 4]; ret; 
0x0003e736: and al, 8; shl eax, 4; add eax, 0x14; ret; 
0x000cb999: and al, 8; sub eax, dword ptr [edx + 4]; ret; 
0x00060bc6: and al, 8; xchg dword ptr [edx], eax; ret; 
0x0007fad8: and al, 8; ret; 
0x0004e092: and al, 9; shr eax, 0x1f; leave; ret; 
0x000a603e: and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x10; pop ebx; ret; 
0x0008a1c7: and al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x0000f950: and al, byte ptr [eax]; or byte ptr [eax], al; ret 0x1f; 
0x00013b50: and al, byte ptr [eax]; or byte ptr [eax], al; ret 0x29; 
0x00010500: and al, byte ptr [eax]; or byte ptr [eax], al; ret 0x34; 
0x00006b20: and al, byte ptr [eax]; or byte ptr [eax], al; ret 0x38; 
0x00012960: and al, byte ptr [eax]; or byte ptr [eax], al; ret 0x41; 
0x0000c980: and al, byte ptr [eax]; or byte ptr [eax], al; ret 0x64; 
0x000089c0: and al, byte ptr [eax]; or byte ptr [eax], al; ret; 
0x000c64db: and al, byte ptr [ecx + 0x94c4]; add byte ptr [ebx + 0x5e], bl; ret; 
0x0012ece5: and al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001496d8: and al, byte ptr [edx]; mov eax, 0x41140e0a; ret; 
0x000abb0a: and al, ch; call 0x810ac10c; ret; 
0x0008de51: and al, ch; mov eax, dword ptr [0x810007d8]; ret; 
0x00082e51: and al, ch; mov eax, dword ptr [0x81000888]; ret; 
0x00103c38: and al, ch; mov edx, 0x8100007a; ret; 
0x00050b38: and al, ch; mov edx, 0x81000bab; ret; 
0x00064fc5: and al, ch; sub eax, 0x81000a67; ret; 
0x000481c5: and al, ch; sub eax, 0x81000c35; ret; 
0x000657bd: and al, ch; xor eax, 0x81000a5f; ret; 
0x000eacfb: and ax, 0x100; movzx eax, ax; ret; 
0x000eaa9a: and ax, 0x200; movzx eax, ax; ret; 
0x000eabeb: and ax, 0x400; movzx eax, ax; ret; 
0x0004e1c3: and ax, 0x7f80; cmp ax, 0x7f80; setne al; movzx eax, al; ret; 
0x000eacb6: and ax, 0x80; movzx eax, ax; ret; 
0x00035459: and bh, bh; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0012a1fd: and byte ptr [eax + 0xa], bh; push cs; or al, 0x41; ret; 
0x0013d879: and byte ptr [eax + 0xa], ch; push cs; or al, 0x41; ret; 
0x001382b3: and byte ptr [eax + 0xa], dh; push cs; adc al, 0x41; ret; 
0x00138b79: and byte ptr [eax + 0xe], bh; or al, 0x41; ret; 
0x00059b88: and byte ptr [eax + eax], dl; add byte ptr [ebx + 0x5e5b0cc4], al; ret; 
0x000337e7: and byte ptr [eax + ecx + 0x3c], dh; or dword ptr [ebp + 0x75002674], ecx; mov cl, 0x83; ret 0xf01; 
0x0005d3f2: and byte ptr [eax + edx*8 - 0x77], dh; ret 0xc031; 
0x0005dbcb: and byte ptr [eax], al; add al, ch; and eax, 0x81000adb; ret; 
0x00009a1c: and byte ptr [eax], al; add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x26; 
0x0003c411: and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x39182454], cl; ret 0x860f; 
0x00030aa7: and byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret 0xfffc; 
0x000c5477: and byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x001315c8: and byte ptr [eax], al; add byte ptr [eax], al; xchg eax, esp; ret; 
0x000f886c: and byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000fe491: and byte ptr [eax], al; add byte ptr [edi], cl; xchg eax, esp; ret 0x1789; 
0x0013d0bd: and byte ptr [eax], cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000a8131: and byte ptr [ebp + 0x3120d054], cl; ror byte ptr [ecx + 0x442893a], 0x83; rol byte ptr [ecx], 0x83; ret 0x3908; 
0x0014c1b7: and byte ptr [ebp + 0xa], ah; push cs; adc al, 0x41; ret; 
0x000f3d53: and byte ptr [ebp - 0x24], dh; ret; 
0x000e3ad5: and byte ptr [ebp - 0x727bf013], al; add byte ptr [eax], al; add byte ptr [ebx - 0x76e7dbbc], cl; ret 0xea29; 
0x000dc516: and byte ptr [ebx + 0x292c2444], cl; ret 0x4c8b; 
0x0003a787: and byte ptr [ebx + 0x39282454], cl; ret 0x860f; 
0x0003ae10: and byte ptr [ebx + 0x39302454], cl; ret 0x860f; 
0x000d7118: and byte ptr [ebx + 0x4892840], cl; and al, 0xe8; dec esp; ret 0xfff4; 
0x0006aa12: and byte ptr [ebx + 0x50892850], cl; and al, 0x5b; ret; 
0x000d6c23: and byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000ba41c: and byte ptr [ebx + 0x5e5b10c4], al; ret; 
0x0002e28e: and byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0006501f: and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0004385c: and byte ptr [ebx + 0x5e], bl; ret; 
0x000583b8: and byte ptr [ebx + 0x5f5e0cc4], al; pop ebp; ret; 
0x00130c41: and byte ptr [ebx + 0xa], bh; push cs; or al, 0x41; ret; 
0x000a2692: and byte ptr [ebx + 0xf242454], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc104; 
0x000a26a5: and byte ptr [ebx + 0xf242454], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc106; 
0x000f3cf3: and byte ptr [ebx + ecx - 0x80], dh; ljmp 0x376:0x4fa8009; nop; ret; 
0x000b61f2: and byte ptr [ebx - 0x7adbdb84], cl; test byte ptr [edi], 0x84; ret 0; 
0x0014396f: and byte ptr [ebx], al; mov al, byte ptr [0x140e0a01]; inc ecx; ret; 
0x00001fe0: and byte ptr [ebx], cl; add byte ptr [eax], al; ret; 
0x000fb65f: and byte ptr [ecx + 0x10101ea], al; add edi, esi; shl byte ptr [ecx], 1; ret 0xc2f7; 
0x000912a1: and byte ptr [ecx + 0x10c483d0], cl; pop ebx; pop edi; ret; 
0x0008166f: and byte ptr [ecx + 0x14c483d0], cl; pop ebx; pop esi; ret; 
0x0003bf83: and byte ptr [ecx + 0x18c48302], cl; pop ebx; ret; 
0x0007811d: and byte ptr [ecx + 0x1ae82404], cl; ret 0xfffa; 
0x00036fa0: and byte ptr [ecx + 0x1b802], cl; add byte ptr [eax], al; add esp, 0x14; pop ebx; ret; 
0x00046aa8: and byte ptr [ecx + 0x39f129c1], cl; ret 0x840f; 
0x000d7080: and byte ptr [ecx - 0x1f3ee3af], cl; add ecx, dword ptr [ecx - 0x74fbdbbc]; inc ecx; sbb byte ptr [ecx - 0x2517dbfc], cl; ret 0xfff4; 
0x0014aa19: and byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00063922: and byte ptr [ecx], al; ret 0x5489; 
0x0004ab8f: and byte ptr [ecx], al; ret 0xe889; 
0x000d735c: and byte ptr [ecx], al; ret 0xfa83; 
0x0010b5d6: and byte ptr [ecx], bh; ret 0x1776; 
0x0002e3d3: and byte ptr [ecx], bh; ret 0x830f; 
0x0010b5ed: and byte ptr [ecx], bh; ret 0xe977; 
0x0004531f: and byte ptr [ecx], cl; ret 0x3f74; 
0x0003009a: and byte ptr [ecx], cl; ret 0x5574; 
0x0004aadd: and byte ptr [ecx], dh; ret 0xcac1; 
0x000a8013: and byte ptr [ecx], dh; ror byte ptr [ecx + 0x4428932], 0x83; rol byte ptr [ecx], 0x83; ret 0x3908; 
0x000a8135: and byte ptr [ecx], dh; ror byte ptr [ecx + 0x442893a], 0x83; rol byte ptr [ecx], 0x83; ret 0x3908; 
0x00128401: and byte ptr [edi + 0xa], bh; push cs; or al, 0x41; ret; 
0x00125f25: and byte ptr [edi + 0xa], dh; push cs; or al, 0x41; ret; 
0x000eac32: and byte ptr [edi], cl; mov bh, 0xc0; ret; 
0x000d3aaa: and byte ptr [edi], cl; xchg eax, esp; ror byte ptr [edi], 0x95; ret 0xe0d3; 
0x00125fad: and byte ptr [edx + ecx + 0xe], bh; or al, 0x41; ret; 
0x00135821: and byte ptr [edx + ecx + 0xe], dh; or al, 0x41; ret; 
0x000f3e19: and byte ptr [edx + ecx - 0x80], dh; ljmp 0x276:0x4fa8009; pop esi; ret; 
0x000db50c: and byte ptr [edx - 0x3b7c000c], dh; sbb al, 0x5b; pop esi; ret; 
0x0008ea50: and byte ptr [edx], ah; add byte ptr [eax], al; ret; 
0x00125733: and byte ptr [edx], al; dec ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00142d29: and byte ptr [edx], al; dec ebp; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00134231: and byte ptr [edx], al; dec ecx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001267c5: and byte ptr [edx], al; dec edx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00144655: and byte ptr [edx], al; dec esp; push cs; or al, 0x41; ret; 
0x0014badf: and byte ptr [edx], al; fisttp qword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0012f881: and byte ptr [edx], al; inc eax; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00148ef7: and byte ptr [edx], al; inc ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012e34f: and byte ptr [edx], al; inc edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014486b: and byte ptr [edx], al; inc edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00138725: and byte ptr [edx], al; inc edx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0014693d: and byte ptr [edx], al; inc esi; push cs; or al, 0x41; ret; 
0x00128385: and byte ptr [edx], al; inc esp; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0014387d: and byte ptr [edx], al; insb byte ptr es:[edi], dx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00145551: and byte ptr [edx], al; jnp 0x14555f; push cs; or al, 0x41; ret; 
0x0012e10f: and byte ptr [edx], al; mov cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0012a927: and byte ptr [edx], al; mov dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0013e0a2: and byte ptr [edx], al; mov eax, 0x41100e0a; ret; 
0x0013c72f: and byte ptr [edx], al; mov eax, dword ptr [0x41140e0a]; ret; 
0x0014133b: and byte ptr [edx], al; mov ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x001403b3: and byte ptr [edx], al; movsb byte ptr es:[edi], byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012ff53: and byte ptr [edx], al; or cl, byte ptr [0x4114]; ret; 
0x00130342: and byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00143005: and byte ptr [edx], al; or cl, byte ptr fs:[esi]; or al, 0x41; ret; 
0x00139c11: and byte ptr [edx], al; outsb dx, byte ptr [esi]; push cs; or al, 0x41; ret; 
0x0014afa7: and byte ptr [edx], al; outsd dx, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012a8d3: and byte ptr [edx], al; pop eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00136be9: and byte ptr [edx], al; pop eax; push cs; or al, 0x41; ret; 
0x0012f357: and byte ptr [edx], al; pop ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00149613: and byte ptr [edx], al; pop ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014ae83: and byte ptr [edx], al; pop esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b457: and byte ptr [edx], al; push 0x41140e0a; ret; 
0x00134e4f: and byte ptr [edx], al; push cs; adc al, 0x41; ret; 
0x0012dc63: and byte ptr [edx], al; push eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014c0f3: and byte ptr [edx], al; push ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013dbf9: and byte ptr [edx], al; push ebp; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00140677: and byte ptr [edx], al; push ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127cb9: and byte ptr [edx], al; push ebx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012c013: and byte ptr [edx], al; ret 0xe0a; 
0x0014a9d7: and byte ptr [edx], al; ror dword ptr [edx], cl; push cs; adc al, 0x41; ret; 
0x0013c583: and byte ptr [edx], al; scasd eax, dword ptr es:[edi]; push cs; adc al, 0x41; ret; 
0x00149bbf: and byte ptr [edx], al; stosb byte ptr es:[edi], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014bf9b: and byte ptr [edx], al; test byte ptr [edx], 0xe; adc al, 0x41; ret; 
0x0014229b: and byte ptr [edx], al; hlt; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013ae8d: and byte ptr [edx], al; pushal; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00144e37: and byte ptr [edx], al; sahf; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001398a7: and byte ptr [edx], al; wait; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000cf4f1: and byte ptr [esi + 0x39], ah; ret 0x840f; 
0x00051733: and byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x0012b5bd: and byte ptr [esi + 0xa], bh; push cs; or al, 0x41; ret; 
0x001343a9: and byte ptr [esi + 0xa], dh; push cs; or al, 0x41; ret; 
0x00050e53: and byte ptr [esi - 0x77], ah; dec edi; or cl, byte ptr [ebx - 0x7ce3dbac]; ret 0x8901; 
0x0005d20f: and byte ptr [esp + eax - 0x77], dh; ret 0xc031; 
0x0005d1f8: and byte ptr [esp + eax - 0x77], dh; sal byte ptr [ecx], 1; rcr byte ptr [esi + 0x5d], cl; ret; 
0x00060e9e: and byte ptr [esp + eax - 0x77], dh; sal byte ptr [ecx], 1; ror byte ptr [edi], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x0005d16c: and byte ptr [esp + eax - 0x77], dh; sal byte ptr [ecx], 1; ror cl, cl; ret; 
0x000e06fa: and ch, byte ptr [ecx]; hlt; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x00098f5a: and cl, byte ptr [ecx - 0x74fbdbac]; test byte ptr [eax + eax*4], ah; add byte ptr [eax], al; add byte ptr [ecx + 0x42e82404], cl; ret 0xfff8; 
0x000c5437: and dh, dh; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x000d7156: and dh, dh; ret 0x7406; 
0x00109618: and dl, 0xfd; or al, dl; mov byte ptr [ecx + 0x18], al; xor eax, eax; ret; 
0x000ea07b: and dword ptr [eax + 1], edi; ret; 
0x001097d5: and dword ptr [eax + eax], eax; add byte ptr [ecx + ebp*2 + 0xf], dh; mov bh, 0x56; or al, 0xf6; ret 0x7408; 
0x000c5b90: and dword ptr [eax - 0x2a], 0xffffffff; push dword ptr [ecx]; sar byte ptr [ecx], cl; or byte ptr [esp + edx - 0x7d], dh; ret 0x8301; 
0x0006292b: and dword ptr [eax], 0xc483fffc; add al, 0x5b; pop esi; pop edi; ret; 
0x000e89a4: and dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x00118d9b: and dword ptr [ebp + 0x38e9b5db], 0x5bf348b5; ret 0x3956; 
0x0004e9b5: and dword ptr [ebp - 0x67ffebe], ecx; sub byte ptr [edx + ebp - 0x80], dh; stc; sub dword ptr [esp + eax - 0x77], esi; ret 0xdfeb; 
0x000ba63a: and dword ptr [ebx], 0x6b; cld; dec dword ptr [ecx + 0x19e82404]; ret 0xfff6; 
0x000575aa: and dword ptr [edi], ecx; test ah, cl; add al, byte ptr [eax]; add byte ptr [eax - 0x7bf0a106], al; ret; 
0x0004fa1a: and dword ptr [edx + esi*4], eax; xor eax, eax; pop ebx; pop esi; ret; 
0x0006b6c0: and dword ptr [edx], eax; xor eax, eax; pop ebx; ret; 
0x00060b29: and dword ptr [edx], eax; ret; 
0x000d1186: and dword ptr [esi + 8], 0xfffffffe; add esp, 4; pop ebx; pop esi; ret; 
0x0002a2c6: and dword ptr [esi + edx*4], eax; xor eax, eax; pop ebx; pop esi; ret; 
0x000eaba8: and eax, 0x10; movzx eax, ax; ret; 
0x0012a9c1: and eax, 0x140e0a01; inc ecx; ret; 
0x000eac30: and eax, 0x20; movzx eax, ax; ret; 
0x0004e699: and eax, 0x3f; add esp, 4; ret; 
0x0005c898: and eax, 0x3f; ret; 
0x000eac73: and eax, 0x40; movzx eax, ax; ret; 
0x0005b6be: and eax, 0x7e; add byte ptr [eax], al; add esp, 4; pop ebx; ret; 
0x0005bfb3: and eax, 0x7f; add esp, 8; pop esi; pop edi; ret; 
0x0004f7e8: and eax, 0x7f; ret; 
0x00051e44: and eax, 0x7fff; mov ecx, dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x00031555: and eax, 0x7fffffff; add esp, 0x10; pop ebx; pop esi; ret; 
0x0004e274: and eax, 0x7fffffff; cmp eax, 0x7f800000; sete al; movzx eax, al; ret; 
0x000a9560: and eax, 0x7fffffff; mov dword ptr [edx], eax; pop ebx; pop esi; ret; 
0x000315ac: and eax, 0x7fffffff; ret; 
0x000ee1cf: and eax, 0x810001d5; ret; 
0x000b23cf: and eax, 0x81000593; ret; 
0x000a2ecf: and eax, 0x81000688; ret; 
0x0007e2cf: and eax, 0x810008d4; ret; 
0x0005dbcf: and eax, 0x81000adb; ret; 
0x00057ccf: and eax, 0x81000b3a; ret; 
0x000283cf: and eax, 0x81000e33; ret; 
0x00050153: and eax, 0x90fffffe; ret; 
0x0004e6a8: and eax, 0xc00; ret; 
0x000f411e: and eax, 0xc483fff3; add al, 0x5b; ret; 
0x00092530: and eax, 0xc483fff9; or al, 0x5b; ret; 
0x00142888: and eax, 0xe0a6f02; adc al, 0x41; ret; 
0x000e2075: and eax, 0xe8000000; ret 0xf458; 
0x000474d2: and eax, 0xffffff; ret; 
0x0005c8bf: and eax, 1; ret; 
0x000eaadf: and eax, 2; movzx eax, ax; ret; 
0x0004e5ec: and eax, 3; add esp, 4; ret; 
0x000f7235: and eax, 3; ret; 
0x000eab22: and eax, 4; movzx eax, ax; ret; 
0x000eaa20: and eax, 5; ret; 
0x000eab65: and eax, 8; movzx eax, ax; ret; 
0x0002ba74: and eax, dword ptr [eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000a87f6: and eax, dword ptr [eax]; add byte ptr [ebx + 0x1482454], cl; ret 0xfa21; 
0x000a8745: and eax, dword ptr [eax]; add byte ptr [ebx - 0x7bf00008], al; add al, byte ptr [eax]; add byte ptr [ecx - 0x817dbfc], cl; ret; 
0x0010b474: and eax, dword ptr [eax]; add byte ptr [ecx + 0x21e82404], cl; ret 0xfff1; 
0x000a8269: and eax, dword ptr [eax]; add byte ptr [ecx + 0x2ce82404], cl; ret; 
0x000a8204: and eax, dword ptr [eax]; add byte ptr [ecx - 0x6e17dbfc], cl; ret; 
0x000df0df: and eax, dword ptr [edx + ecx*8]; mov ecx, dword ptr [edx + ecx*8 + 4]; shr eax, cl; pop ebx; ret; 
0x001029a7: and eax, dword ptr [esi + 0x30]; add esp, 8; pop esi; ret; 
0x0005c683: and eax, ecx; add eax, edx; pop esi; ret; 
0x000cb98a: and eax, edx; ret; 
0x0004efd9: and eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x000ba63b: and ebp, dword ptr [ebx - 4]; dec dword ptr [ecx + 0x19e82404]; ret 0xfff6; 
0x0005c8b5: and ecx, 0xf; mov eax, 0x6996; sar eax, cl; and eax, 1; ret; 
0x00047488: and ecx, 0xffffff; or edx, ecx; bswap edx; mov dword ptr [eax], edx; ret 4; 
0x000f722b: and ecx, 6; mov eax, 0x2d; sar eax, cl; and eax, 3; ret; 
0x0005574b: and ecx, dword ptr [ecx - 0x76ebdbbc]; ret 0xc889; 
0x000b8fa9: and ecx, ecx; idiv bh; add esp, 8; pop ebx; ret; 
0x000920f5: and ecx, edi; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0005be53: and edx, 0x20; add eax, edx; pop esi; ret; 
0x0004e2b6: and edx, 0x7fffff; setne al; ret; 
0x0004e21e: and edx, 0x81667f80; cli; cmp byte ptr [edi + 0x74], 3; xor eax, eax; ret; 
0x0005b6cf: and esp, 0x7e; add byte ptr [eax], al; add esp, 4; pop ebx; ret; 
0x000612e3: and esp, 0xfffffff8; fild dword ptr [ebp + 0xc]; fisubr dword ptr [ebp + 8]; leave; ret; 
0x000bb27b: and esp, eax; idiv bh; add esp, 8; pop ebx; ret; 
0x000439e0: arpl word ptr [eax], ax; add byte ptr [ebx + 0x5e5b38c4], al; ret; 
0x0012a42d: arpl word ptr [ecx], ax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001294c9: arpl word ptr [edx], cx; push cs; adc al, 0x41; ret; 
0x0013b27e: arpl word ptr [edx], cx; push cs; or al, 0x41; ret; 
0x0012b4e1: bound eax, qword ptr [eax]; add al, al; ret 0xfff1; 
0x00136755: bound eax, qword ptr [ebx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013c95d: bound eax, qword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0002a20a: bound ebx, qword ptr [edx - 0x3b7c0001]; or al, 0x5b; ret; 
0x00128535: bound ecx, qword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0014794c: bound ecx, qword ptr [edx]; ret; 
0x0005be23: bsf eax, eax; add eax, 1; ret; 
0x0005be50: bsf eax, eax; and edx, 0x20; add eax, edx; pop esi; ret; 
0x0005be2a: bsf eax, edx; add eax, 0x21; ret; 
0x000f29a0: bswap eax; add esp, 0x10; pop ebx; ret; 
0x0005ee56: bswap eax; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000ca94f: bswap eax; pop ebp; ret; 
0x0004e6e4: bswap eax; ret; 
0x000ca94d: bswap edx; bswap eax; pop ebp; ret; 
0x000c2871: bswap edx; mov dword ptr [eax], edx; mov eax, 1; pop esi; ret; 
0x00047490: bswap edx; mov dword ptr [eax], edx; ret 4; 
0x0010b590: call 0x10b637; call 0x242b0; pop ebx; ret; 
0x0004407c: call 0x10b6fc; add ecx, 0x10d003; mov eax, dword ptr [ecx + 0x6400]; ret; 
0x0002a1cc: call 0x10b6fc; add ecx, 0x126eb3; mov eax, dword ptr [ecx + 0x35d0]; ret; 
0x0010a660: call 0x10b6fc; add ecx, 0x46a1f; mov eax, dword ptr [ecx - 0x2ec]; mov eax, dword ptr [eax]; ret; 
0x000e016d: call 0x10b6fc; add ecx, 0x70f12; lea eax, dword ptr [ecx + 0xe57c]; ret; 
0x000e0130: call 0x10b6fc; add ecx, 0x70f4f; mov eax, dword ptr [ecx - 0x1c4]; ret; 
0x0009c1cd: call 0x10b6fc; add ecx, 0xb4eb2; mov eax, dword ptr [ecx + 0x22cc]; ret; 
0x00090a08: call 0x10b6fc; add ecx, 0xc0677; mov eax, dword ptr [ecx + 0xb7c4]; ret; 
0x000909f6: call 0x10b6fc; add ecx, 0xc0689; mov eax, dword ptr [ecx + 0xb7c8]; ret; 
0x000909d2: call 0x10b6fc; add ecx, 0xc06ad; mov eax, dword ptr [ecx + 0xb7d0]; ret; 
0x000909c0: call 0x10b6fc; add ecx, 0xc06bf; mov eax, dword ptr [ecx + 0xb7d4]; ret; 
0x000909ae: call 0x10b6fc; add ecx, 0xc06d1; mov eax, dword ptr [ecx + 0xb7d8]; ret; 
0x0008ea3f: call 0x10b6fc; add ecx, 0xc2640; mov eax, dword ptr [esp + 4]; mov dword ptr [ecx + 0x2220], eax; ret; 
0x0005a01f: call 0x10b6fc; add ecx, 0xf7060; lea eax, dword ptr [ecx + 0x142c]; ret; 
0x0012abd6: call 0x1420b5dc; inc ecx; ret; 
0x0009c780: call 0x22fe0; add esp, 8; pop ebx; ret; 
0x00036b74: call 0x23000; add esp, 0xc; pop ebx; ret; 
0x00036a69: call 0x23020; add esp, 0x10; pop ebx; pop esi; ret; 
0x000ea65a: call 0x23020; add esp, 0xc; pop ebx; ret; 
0x00035347: call 0x23030; add esp, 0x10; pop ebx; pop esi; ret; 
0x000fe230: call 0x23050; add esp, 0x10; pop ebx; pop esi; ret; 
0x00058cfe: call 0x23060; add esp, 0xc; pop ebx; ret; 
0x00041288: call 0x23080; add esp, 0x1c; pop ebx; ret; 
0x0004834b: call 0x23130; add esp, 8; pop ebx; ret; 
0x0002c05c: call 0x23160; add esp, 0x10; pop ebx; pop esi; ret; 
0x0002bc6c: call 0x23160; add esp, 0x14; pop ebx; pop esi; ret; 
0x00032506: call 0x23160; add esp, 0xc; pop ebx; ret; 
0x0008a1c0: call 0x23170; mov dword ptr [eax], 0x22; xor eax, eax; pop ebx; ret; 
0x000db6d7: call 0x231a0; add esp, 0x20; pop ebx; pop esi; ret; 
0x00059f70: call 0x231f0; add esp, 0x50; pop ebx; pop esi; ret; 
0x000b1f94: call 0x23230; add esp, 8; pop ebx; ret; 
0x00065c89: call 0x23290; add esp, 0x10; pop ebx; pop esi; ret; 
0x0009cb15: call 0x232c0; add esp, 0xc; pop ebx; ret; 
0x000c51f4: call 0x232d0; nop; nop; ret; 
0x0009ce72: call 0x23300; add esp, 0x10; pop ebx; ret; 
0x0009cd97: call 0x23310; add esp, 0x10; pop ebx; ret; 
0x000ebbb2: call 0x23370; add esp, 8; pop ebx; ret; 
0x000e48ee: call 0x233e0; add esp, 0x18; pop ebx; ret; 
0x00050b28: call 0x23400; add esp, 0xc; pop ebx; ret; 
0x000db41a: call 0x23410; add esp, 8; pop ebx; ret; 
0x0009c638: call 0x234a0; add esp, 8; pop ebx; ret; 
0x000a2ebc: call 0x234e0; add esp, 8; pop ebx; pop ebp; ret; 
0x0004932d: call 0x23520; add esp, 0x18; pop ebx; ret; 
0x00090ba0: call 0x23540; add esp, 0x14; pop ebx; ret; 
0x00052a6c: call 0x23540; add esp, 0x1c; pop ebx; pop esi; ret; 
0x000b2648: call 0x23580; add esp, 0x18; pop ebx; ret; 
0x0009d183: call 0x23590; add esp, 0xc; pop ebx; ret; 
0x000c99cb: call 0x235a0; add esp, 0xc; pop ebx; ret; 
0x000a2f59: call 0x235b0; add esp, 8; pop ebx; pop ebp; ret; 
0x0006472e: call 0x235c0; add esp, 8; pop ebx; ret; 
0x0004153a: call 0x23620; add esp, 0x1c; pop ebx; ret; 
0x00064f16: call 0x23680; add esp, 0x20; pop ebx; ret; 
0x000f20dd: call 0x23690; add esp, 0x10; pop ebx; pop esi; ret; 
0x000db767: call 0x23770; add esp, 8; pop ebx; pop esi; ret; 
0x0009c8c4: call 0x23800; add esp, 8; pop ebx; ret; 
0x0009c38a: call 0x23880; add esp, 8; pop ebx; ret; 
0x00027b10: call 0x23950; add esp, 8; pop edi; pop ebx; ret; 
0x0006458d: call 0x23970; add esp, 4; pop ebx; ret; 
0x00041567: call 0x23a10; add esp, 0x10; pop ebx; pop esi; ret; 
0x00065809: call 0x23a20; add esp, 0x20; pop ebx; ret; 
0x0009c574: call 0x23a30; add esp, 8; pop ebx; ret; 
0x0004efa2: call 0x23a40; add esp, 0x10; pop ebx; ret; 
0x0006b129: call 0x23a60; add esp, 0xc; pop ebx; ret; 
0x0009c3ec: call 0x23a70; add esp, 8; pop ebx; ret; 
0x000891bf: call 0x23b00; add esp, 0x14; pop ebx; ret; 
0x00089304: call 0x23b00; add esp, 0x18; pop ebx; ret; 
0x000829aa: call 0x23b00; add esp, 0x20; pop ebx; ret; 
0x0008590d: call 0x23b00; add esp, 0x3c; pop ebx; ret; 
0x000a2c6b: call 0x23b30; add esp, 8; pop ebx; ret; 
0x000e4aea: call 0x23b90; add esp, 0x10; pop ebx; pop esi; ret; 
0x000815c1: call 0x23bd0; add esp, 0x10; pop ebx; ret; 
0x00068d10: call 0x23be0; pop ebx; ret; 
0x000912ea: call 0x23bf0; add esp, 0x18; pop ebx; ret; 
0x0003ef31: call 0x23c70; add esp, 0x18; pop ebx; pop esi; ret; 
0x0005aa20: call 0x23c70; add esp, 0xc; pop ebx; pop esi; ret; 
0x0002a209: call 0x23c70; add esp, 0xc; pop ebx; ret; 
0x000fd9ee: call 0x23c90; add esp, 0x10; pop ebx; ret; 
0x000d69ab: call 0x23ca0; add esp, 0xc; pop ebx; ret; 
0x000354d5: call 0x23cd0; add esp, 0x8c; pop ebx; pop esi; ret; 
0x000336bb: call 0x23d70; mov eax, dword ptr [esp + 0x14]; add esp, 0x18; pop ebx; ret; 
0x000b9215: call 0x23d90; add esp, 0x24; pop ebx; ret; 
0x0003fae2: call 0x23da0; add esp, 0x18; pop ebx; ret; 
0x000a9aae: call 0x23df0; add esp, 4; pop ebx; ret; 
0x000f4b00: call 0x23e40; add esp, 0x18; pop ebx; ret; 
0x000ebb28: call 0x23eb0; add esp, 4; pop ebx; ret; 
0x000e8113: call 0x23eb0; mov dword ptr [ebx + 0x129ac], eax; add esp, 4; pop ebx; ret; 
0x0002a172: call 0x23ec0; add esp, 0xc; pop ebx; ret; 
0x000a3fe3: call 0x23f20; add esp, 0xc; pop ebx; ret; 
0x000a3570: call 0x23f60; add esp, 0xc; pop ebx; ret; 
0x00035090: call 0x23fa0; add esp, 0x10; pop ebx; ret; 
0x0009c1ff: call 0x23fb0; add esp, 8; pop ebx; ret; 
0x000645cd: call 0x24010; add esp, 0x34; pop ebx; ret; 
0x00064615: call 0x24010; add esp, 0x38; pop ebx; ret; 
0x000a3538: call 0x24010; add esp, 8; pop ebx; ret; 
0x000a3bef: call 0x24020; add esp, 0x10; pop ebx; ret; 
0x00036ea0: call 0x24030; add esp, 4; pop ebx; ret; 
0x0004971a: call 0x240c0; add esp, 0x18; pop ebx; ret; 
0x000e8670: call 0x240e0; add esp, 0x14; pop ebx; ret; 
0x0009f02e: call 0x240f0; add esp, 0x14; pop ebx; ret; 
0x000655f8: call 0x24130; add esp, 0xc; pop ebx; ret; 
0x00077d38: call 0x24170; add esp, 4; pop ebx; ret; 
0x000c51cc: call 0x241a0; add esp, 8; pop ebx; ret; 
0x000920f3: call 0x24220; add esp, 0x10; pop ebx; pop esi; ret; 
0x000c515a: call 0x24250; add esp, 8; pop ebx; ret; 
0x0010b595: call 0x242b0; pop ebx; ret; 
0x0009cbe1: call 0x24300; add esp, 0xc; pop ebx; ret; 
0x00109077: call 0x24320; add esp, 0xc; pop ebx; ret; 
0x0006abb1: call 0x24350; add esp, 0xc; pop ebx; ret; 
0x00099d40: call 0x24360; fld xword ptr [esp + 0x10]; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000edcfb: call 0x24370; add esp, 0xc; pop ebx; ret; 
0x000334df: call 0x24380; add esp, 8; pop ebx; ret; 
0x0009c983: call 0x243f0; add esp, 8; pop ebx; pop esi; ret; 
0x0009c6e3: call 0x243f0; add esp, 8; pop ebx; ret; 
0x000b5ecc: call 0x24410; add esp, 4; pop ebx; ret; 
0x000b8f32: call 0x24440; add esp, 0x24; pop ebx; ret; 
0x000bb074: call 0x24440; add esp, 0x28; pop ebx; ret; 
0x000644f0: call 0x24450; add esp, 8; pop ebx; ret; 
0x000d1f22: call 0x24460; add esp, 8; pop ebx; ret; 
0x000aafc4: call 0x244ee8da; or byte ptr [edx + 7], dh; seta al; movzx eax, al; ret; 
0x000ca87c: call 0x244f0; add esp, 0xc; pop ebx; ret; 
0x0005a1de: call 0x24540; add esp, 8; pop ebx; ret; 
0x000b9030: call 0x24550; add esp, 0xc; pop ebx; ret; 
0x00034e5f: call 0x24570; add esp, 0xc; pop ebx; ret; 
0x000db3bc: call 0x245e0; add esp, 0x10; pop ebx; pop esi; ret; 
0x00065076: call 0x245f0; add esp, 0x18; pop ebx; ret; 
0x0004f012: call 0x24670; add esp, 0x10; pop ebx; ret; 
0x0009a84c: call 0x246a0; add esp, 0xc; pop ebx; ret; 
0x00034fb0: call 0x24700; add esp, 0xc; pop ebx; ret; 
0x0005d72f: call 0x24750; add esp, 0x10; pop ebx; pop esi; ret; 
0x00032628: call 0x24750; add esp, 8; pop ebx; ret; 
0x000db588: call 0x247a0; add esp, 8; pop ebx; ret; 
0x000f4072: call 0x247b0; add esp, 0x10; pop ebx; ret; 
0x00046005: call 0x24800; add esp, 8; pop ebx; ret; 
0x00044fdd: call 0x24840; add esp, 0x14; pop ebx; ret; 
0x0009c70d: call 0x24860; add esp, 8; pop ebx; ret; 
0x0008cbfd: call 0x248d0; add esp, 0x14; pop ebx; ret; 
0x000660a5: call 0x24900; add esp, 0x40; pop ebx; ret; 
0x00037363: call 0x249b0; add esp, 4; pop ebx; pop esi; ret; 
0x000b656b: call 0x24a00; add esp, 0x10; pop ebx; pop esi; ret; 
0x00035053: call 0x24a00; add esp, 0xc; pop ebx; ret; 
0x0009252e: call 0x24a40; add esp, 0xc; pop ebx; ret; 
0x000db734: call 0x24a50; add esp, 0x14; pop ebx; ret; 
0x000db3ed: call 0x24a90; add esp, 0xc; pop ebx; ret; 
0x0005d655: call 0x24ac0; add esp, 8; pop ebx; ret; 
0x0004ef6a: call 0x24b30; add esp, 0xc; pop ebx; ret; 
0x00029d26: call 0x24b40; add esp, 0x18; pop ebx; ret; 
0x0007716a: call 0x24b60; add esp, 8; pop ebx; ret; 
0x0010a013: call 0x24ba0; add esp, 0x10; pop ebx; ret; 
0x00035222: call 0x24bf0; add esp, 0x10; pop ebx; ret; 
0x000647c5: call 0x24c30; add esp, 8; pop ebx; ret; 
0x000651ae: call 0x24c50; add esp, 0x20; pop ebx; ret; 
0x000db5fe: call 0x24c80; add esp, 4; pop ebx; ret; 
0x0009c5d6: call 0x24d10; add esp, 8; pop ebx; ret; 
0x000d21b7: call 0x24d1a4bd; pop ebx; pop esi; pop edi; ret; 
0x000b2c1a: call 0x24d60; add esp, 8; pop ebx; ret; 
0x0002cfbf: call 0x24d70; add esp, 0x10; pop ebx; ret; 
0x000ec005: call 0x24d90; add esp, 4; pop ebx; pop esi; ret; 
0x00034e9c: call 0x24dc0; add esp, 0x10; pop ebx; ret; 
0x00045056: call 0x24de0; add esp, 0x10; pop ebx; ret; 
0x0008bebc: call 0x24e10; add esp, 4; pop ebx; ret; 
0x00064f76: call 0x24e90; add esp, 0x20; pop ebx; ret; 
0x0002d142: call 0x24ec0; add esp, 0xc; pop ebx; ret; 
0x001090e8: call 0x24f20; add esp, 0xc; pop ebx; pop esi; ret; 
0x000e88c6: call 0x24f40; add esp, 4; pop ebx; ret; 
0x000db659: call 0x24fa0; add esp, 0x1c; pop ebx; pop esi; ret; 
0x000e36b3: call 0x24fc0; add esp, 0x14; pop ebx; ret; 
0x000e885d: call 0x24ff0; add esp, 8; pop ebx; ret; 
0x000e073f: call 0x25020; add esp, 8; pop ebx; pop esi; ret; 
0x00096771: call 0x25020; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00036efb: call 0x25080; add esp, 4; pop ebx; ret; 
0x000c4fc7: call 0x25090; add esp, 8; pop ebx; ret; 
0x000e9663: call 0x250c0; add esp, 0x18; pop ebx; ret; 
0x00029d86: call 0x250e0; add esp, 0xc; pop ebx; ret; 
0x00035547: call 0x25110; add esp, 8; pop ebx; ret; 
0x0009ccbc: call 0x25140; add esp, 0x10; pop ebx; ret; 
0x000bca64: call 0x25160; add esp, 0x2c; pop ebx; ret; 
0x00064fb2: call 0x25170; add esp, 0x10; pop ebx; ret; 
0x00064e5e: call 0x25190; add esp, 0x14; pop ebx; ret; 
0x000f4dc9: call 0x25260; add esp, 8; pop ebx; ret; 
0x000c61d2: call 0x252a0; add esp, 0x20; pop ebx; pop esi; ret; 
0x000ea5f2: call 0x252b0; add esp, 0x10; pop ebx; ret; 
0x0009dce5: call 0x25310; add esp, 8; pop ebx; pop esi; ret; 
0x0004cf1a: call 0x25360; add esp, 0x18; pop ebx; ret; 
0x00064eb6: call 0x25370; add esp, 0x1c; pop ebx; ret; 
0x00029d56: call 0x25400; add esp, 0xc; pop ebx; ret; 
0x000333c9: call 0x25410; add esp, 0x10; pop ebx; ret; 
0x0005d56a: call 0x25420; add esp, 8; pop ebx; ret; 
0x0008b1aa: call 0x25480; add esp, 4; pop ebx; ret; 
0x000d69e4: call 0x254c0; add esp, 0xc; pop ebx; ret; 
0x00029ae6: call 0x25510; add esp, 0x18; pop ebx; ret; 
0x000347ac: call 0x25520; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003481e: call 0x25520; add esp, 0x18; pop ebx; pop esi; ret; 
0x000369c2: call 0x25580; add esp, 0xc; pop ebx; ret; 
0x000b1eb3: call 0x25590; add esp, 0x10; pop ebx; ret; 
0x000369fa: call 0x255c0; add esp, 0x10; pop ebx; ret; 
0x00101506: call 0x25620; add esp, 0x14; pop ebx; ret; 
0x000d6943: call 0x25660; add esp, 0x10; pop ebx; ret; 
0x000671f5: call 0x25670; add esp, 0x18; pop ebx; ret; 
0x000ebf0c: call 0x25680; add esp, 8; pop ebx; pop edi; ret; 
0x0007d256: call 0x256a0; add esp, 0xc; pop ebx; ret; 
0x00029bbe: call 0x256b0; add esp, 0x10; pop ebx; ret; 
0x0010a720: call 0x25700; pop ebx; ret; 
0x0002a1c2: call 0x25760; add esp, 0x1c; pop ebx; ret; 
0x000a9a8e: call 0x25790; add esp, 0xc; pop ebx; ret; 
0x0006552f: call 0x257a0; add esp, 0x20; pop ebx; pop esi; ret; 
0x00076f0e: call 0x257b0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00065423: call 0x257e0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0002bbcd: call 0x25830; mov eax, 0x2d; add esp, 4; pop ebx; ret; 
0x0002b806: call 0x25830; xor eax, eax; add esp, 4; pop ebx; ret; 
0x000fa1a5: call 0x25870; add esp, 4; pop ebx; ret; 
0x000b8fa8: call 0x258d0; add esp, 8; pop ebx; ret; 
0x000c7818: call 0x25900; add esp, 0x10; pop ebx; pop esi; ret; 
0x000e8445: call 0x25900; add esp, 0xc; pop ebx; ret; 
0x00055662: call 0x25940; add esp, 4; pop ebx; ret; 
0x000e3700: call 0x25950; add esp, 0x18; pop ebx; ret; 
0x00029cde: call 0x259b0; add esp, 0x18; pop ebx; ret; 
0x00050c8f: call 0x259c0; add esp, 8; pop ebx; pop esi; ret; 
0x00034df0: call 0x25a10; add esp, 0xc; pop ebx; ret; 
0x000db1b7: call 0x25a30; add esp, 8; pop ebx; pop esi; ret; 
0x0004507e: call 0x25a40; add esp, 8; pop ebx; ret; 
0x000b2871: call 0x25a80; add esp, 0x10; pop ebx; ret; 
0x000653ca: call 0x25aa0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0006615d: call 0x25ac0; add esp, 0x3c; pop ebx; ret; 
0x0009efe9: call 0x25ae0; add esp, 0x18; pop ebx; ret; 
0x000ecae2: call 0x25af0; add esp, 8; pop ebx; ret; 
0x000d6a6a: call 0x25bb0; add esp, 0xc; pop ebx; ret; 
0x0009c804: call 0x25be0; add esp, 8; pop ebx; ret; 
0x0009ca33: call 0x25c60; add esp, 8; pop ebx; ret; 
0x000eaf39: call 0x25c80; add esp, 8; pop ebx; ret; 
0x00065572: call 0x25cf0; add esp, 0x14; pop ebx; ret; 
0x0008be20: call 0x25d70; add esp, 4; pop ebx; ret; 
0x00087ce0: call 0x25d80; add esp, 0x14; pop ebx; pop esi; ret; 
0x0007e42d: call 0x25d80; add esp, 4; pop ebx; pop esi; ret; 
0x000c8018: call 0x25d80; add esp, 4; pop ebx; ret; 
0x00050cbb: call 0x25d80; add esp, 8; pop ebx; pop esi; ret; 
0x0007d293: call 0x25dc0; add esp, 0x10; pop ebx; pop esi; ret; 
0x000928c5: call 0x25dc0; add esp, 0x10; pop ebx; ret; 
0x0003348b: call 0x25e40; add esp, 0x10; pop ebx; ret; 
0x0003350f: call 0x25e40; add esp, 0xc; pop ebx; ret; 
0x0009c264: call 0x25e50; add esp, 8; pop ebx; ret; 
0x0005bfd8: call 0x25e60; add esp, 4; pop ebx; ret; 
0x00034e2a: call 0x25e70; add esp, 0x10; pop ebx; ret; 
0x00040736: call 0x25ea0; add esp, 0xc; pop ebx; ret; 
0x000d8fad: call 0x25ec0; add esp, 0xc; pop ebx; ret; 
0x000e366e: call 0x25ed0; add esp, 0x1c; pop ebx; ret; 
0x0005657e: call 0x25ee0; add esp, 0x18; pop ebx; ret; 
0x0002a025: call 0x25ef0; add esp, 4; pop ebx; ret; 
0x0002b0d7: call 0x25f40; add esp, 0x10; pop ebx; ret; 
0x000f4cd4: call 0x25f50; add esp, 0xc; pop ebx; ret; 
0x0006574f: call 0x25fb0; add esp, 0x20; pop ebx; ret; 
0x00048f3d: call 0x25fd0; add esp, 0x18; pop ebx; ret; 
0x0009c4b0: call 0x26010; add esp, 8; pop ebx; ret; 
0x0002dbec: call 0x26040; add esp, 0xc; pop ebx; ret; 
0x0002a368: call 0x260e0; add esp, 0x20; pop ebx; ret; 
0x00037a7e: call 0x260e0; mov dword ptr [ebx + 0x563c], eax; add esp, 8; pop ebx; ret; 
0x0010a653: call 0x26100; add esp, 8; pop ebx; ret; 
0x0004b2ba: call 0x26160; add esp, 0x18; pop ebx; ret; 
0x000e9301: call 0x261c0; add esp, 0x10; pop ebx; ret; 
0x000f3ec6: call 0x262f0; add esp, 0x20; pop ebx; ret; 
0x0006514e: call 0x26310; add esp, 0x1c; pop ebx; ret; 
0x000f4b40: call 0x26320; add esp, 0x14; pop ebx; ret; 
0x00029e36: call 0x26340; add esp, 0x18; pop ebx; ret; 
0x00029c96: call 0x26360; add esp, 0x18; pop ebx; ret; 
0x0010a4aa: call 0x26370; add esp, 8; pop ebx; ret; 
0x000354e3: call 0x26380; add esp, 0x8c; pop ebx; pop esi; ret; 
0x0003529a: call 0x263c0; add esp, 0x14; pop ebx; ret; 
0x000b2b62: call 0x26430; add esp, 8; pop ebx; ret; 
0x0009c9bf: call 0x26440; add esp, 8; pop ebx; ret; 
0x0009d20b: call 0x26470; add esp, 0x50; pop ebx; pop esi; ret; 
0x0006aaea: call 0x26490; add esp, 0x10; pop ebx; ret; 
0x000bf9af: call 0x26500; add esp, 8; pop ebx; ret; 
0x000351ea: call 0x26510; add esp, 0xc; pop ebx; ret; 
0x000450b0: call 0x26570; add esp, 0xc; pop ebx; ret; 
0x00036ce3: call 0x265b0; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0003525a: call 0x265c0; add esp, 0x10; pop ebx; ret; 
0x00048b3d: call 0x26620; add esp, 0x18; pop ebx; ret; 
0x0005d6fa: call 0x26640; add esp, 4; pop ebx; ret; 
0x0006ba3e: call 0x26660; add esp, 8; pop ebx; ret; 
0x000bf5ae: call 0x26680; add esp, 0x24; pop ebx; ret; 
0x00076276: call 0x266a0; add esp, 8; pop ebx; ret; 
0x000f1dd0: call 0x266d0; add esp, 4; pop ebx; pop esi; ret; 
0x000f1da2: call 0x266d0; add esp, 4; pop ebx; ret; 
0x000c5c4c: call 0x26700; add esp, 0x1c; pop ebx; pop esi; ret; 
0x000f411c: call 0x26720; add esp, 4; pop ebx; ret; 
0x000db50b: call 0x26730; add esp, 0x1c; pop ebx; pop esi; ret; 
0x000764c4: call 0x26750; add esp, 0x14; pop ebx; ret; 
0x000c6552: call 0x26790; add esp, 0x18; pop ebx; ret; 
0x0009c69a: call 0x267a0; add esp, 8; pop ebx; ret; 
0x000f27d4: call 0x267e0; add esp, 0x18; pop ebx; pop edi; ret; 
0x000ea002: call 0x26810; add esp, 8; pop ebx; ret; 
0x000905bc: call 0x26890; mov dword ptr [ebx + 0xb7bc], eax; add esp, 8; pop ebx; ret; 
0x0004e3d5: call 0x268b0; add esp, 4; pop ebx; ret; 
0x0008290a: call 0x268d0; add esp, 0x24; pop ebx; pop esi; ret; 
0x00059cd6: call 0x268d0; add esp, 8; pop ebx; ret; 
0x0004fdfa: call 0x268f0; add esp, 0x24; pop ebx; ret; 
0x000fafa3: call 0x26950; add esp, 0x10; pop ebx; pop esi; ret; 
0x000b2aaa: call 0x26960; add esp, 0x14; pop ebx; ret; 
0x0002dbb8: call 0x26970; add esp, 0xc; pop ebx; ret; 
0x00065c32: call 0x26980; add esp, 0xc; pop ebx; ret; 
0x0009c44e: call 0x26990; add esp, 8; pop ebx; ret; 
0x00048089: call 0x26a10; xor eax, eax; add esp, 4; pop ebx; ret; 
0x000b9149: call 0x26a50; add esp, 0x24; pop ebx; ret; 
0x00036ab0: call 0x26b00; add esp, 0x10; pop ebx; ret; 
0x0005d5ba: call 0x26b40; add esp, 8; pop ebx; ret; 
0x000e0f00: call 0x26b60; add esp, 0x10; pop ebx; pop esi; ret; 
0x0010a581: call 0x26b60; add esp, 8; pop ebx; ret; 
0x000657ac: call 0x26b70; add esp, 0x20; pop ebx; ret; 
0x0005b765: call 0x26bb0; add esp, 4; pop ebx; pop esi; ret; 
0x0005a79d: call 0x26bb0; add esp, 4; pop ebx; ret; 
0x0009c2c6: call 0x26bc0; add esp, 8; pop ebx; ret; 
0x00095bb2: call 0x26c10; mov eax, dword ptr [esp + 0x14]; add esp, 0x20; pop ebx; ret; 
0x000f4efd: call 0x26c10; xor eax, eax; add esp, 0x14; pop ebx; ret; 
0x0009255e: call 0x26cb0; add esp, 0xc; pop ebx; ret; 
0x0008b242: call 0x26cd0; add esp, 4; pop ebx; ret; 
0x000672cb: call 0x26d80; add esp, 0x10; pop ebx; ret; 
0x0008a6c1: call 0x26d90; add esp, 4; pop ebx; ret; 
0x0002a141: call 0x26da0; add esp, 0x10; pop ebx; ret; 
0x000e8812: call 0x26dd0; add esp, 4; pop ebx; pop esi; ret; 
0x000e878a: call 0x26dd0; add esp, 4; pop ebx; ret; 
0x000f4ea6: call 0x26e00; add esp, 0x18; pop ebx; ret; 
0x0002e0e0: call 0x26e50; add esp, 0x10; pop ebx; pop esi; ret; 
0x000d8025: call 0x26e50; add esp, 0xc; pop ebx; pop esi; ret; 
0x0005e2b9: call 0x26e50; add esp, 4; pop ebx; pop esi; ret; 
0x0002a398: call 0x26e50; add esp, 4; pop ebx; ret; 
0x00077153: call 0x26e50; add esp, 8; pop ebx; ret; 
0x0008a630: call 0x26ec0; add esp, 4; pop ebx; ret; 
0x001014d0: call 0x26ee0; add esp, 0x14; pop ebx; ret; 
0x0010b62d: call 0x26ef0; add esp, 8; pop ebx; ret; 
0x0005d592: call 0x26f90; add esp, 8; pop ebx; ret; 
0x00051f79: call 0x26fb0; add esp, 8; pop ebx; ret; 
0x000e07d2: call 0x27010; add esp, 4; pop ebx; ret; 
0x00064759: call 0x270b0; add esp, 4; pop ebx; ret; 
0x00064e16: call 0x270c0; add esp, 0x24; pop ebx; ret; 
0x000a2eea: call 0x27100; add esp, 4; pop ebx; pop ebp; ret; 
0x00065327: call 0x27150; add esp, 0x20; pop ebx; pop esi; ret; 
0x000f4ca4: call 0x27170; add esp, 0x10; pop ebx; ret; 
0x0009c23a: call 0x27180; add esp, 0xc; pop ebx; ret; 
0x0009c942: call 0x27190; add esp, 0xc; pop ebx; ret; 
0x000b9079: call 0x271e0; pop ebx; ret; 
0x000b2402: call 0x27220; add esp, 0x14; pop ebx; ret; 
0x00029f18: call 0x27250; add esp, 0x14; pop ebx; ret; 
0x00029a9e: call 0x27260; add esp, 0x18; pop ebx; ret; 
0x00029f50: call 0x27270; add esp, 0x10; pop ebx; ret; 
0x0009d0b8: call 0x27290; add esp, 0x18; pop ebx; ret; 
0x0007fc26: call 0x27300; add esp, 0x10; pop ebx; pop edi; ret; 
0x00080ae8: call 0x27300; add esp, 0x10; pop ebx; ret; 
0x0002db86: call 0x27350; add esp, 0x10; pop ebx; ret; 
0x00034600: call 0x27360; add esp, 0xc; pop ebx; pop ebp; ret; 
0x000a3bb7: call 0x27370; add esp, 0x14; pop ebx; ret; 
0x000f4e5e: call 0x273e0; add esp, 0x10; pop ebx; ret; 
0x000e0782: call 0x27430; add esp, 4; pop ebx; ret; 
0x00067232: call 0x27470; add esp, 0x10; pop ebx; ret; 
0x00029c4e: call 0x274a0; add esp, 0x18; pop ebx; ret; 
0x00029c06: call 0x274d0; add esp, 0x18; pop ebx; ret; 
0x0004fcca: call 0x274f0; add esp, 0x1c; pop ebx; ret; 
0x0004e468: call 0x274f0; add esp, 0xc; pop ebx; xor eax, eax; ret; 
0x0002bba4: call 0x274f0; add esp, 0xc; pop ebx; ret; 
0x000db5db: call 0x27510; add esp, 0x14; pop ebx; pop esi; ret; 
0x000345ce: call 0x27540; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000db495: call 0x27550; add esp, 0x2c; pop ebx; pop esi; ret; 
0x000e88a6: call 0x27570; add esp, 4; pop ebx; ret; 
0x0003590e: call 0x27590; add esp, 0x10; pop ebx; ret; 
0x0008ccd8: call 0x275e0; add esp, 0x14; pop ebx; ret; 
0x0002a109: call 0x27610; add esp, 0x10; pop ebx; ret; 
0x000c916a: call 0x27630; add esp, 0xc; pop ebx; pop edi; ret; 
0x000d6a20: call 0x27630; add esp, 0xc; pop ebx; ret; 
0x000c99f3: call 0x27650; add esp, 8; pop ebx; ret; 
0x0010154e: call 0x27660; add esp, 0x14; pop ebx; ret; 
0x000e8886: call 0x27680; add esp, 8; pop ebx; ret; 
0x0009c512: call 0x27690; add esp, 8; pop ebx; ret; 
0x000c5435: call 0x276a0; add esp, 8; pop ebx; pop esi; ret; 
0x000b8cd7: call 0x276a0; add esp, 8; pop ebx; ret; 
0x00065216: call 0x276b0; add esp, 0x24; pop ebx; ret; 
0x00034fef: call 0x276c0; add esp, 0x10; pop ebx; pop esi; ret; 
0x00035ed6: call 0x276c0; add esp, 0x10; pop ebx; ret; 
0x00048736: call 0x27720; add esp, 0x18; pop ebx; ret; 
0x000ca8a4: call 0x27740; add esp, 8; pop ebx; ret; 
0x000e3782: call 0x27790; add esp, 0x14; pop ebx; pop esi; ret; 
0x0006591e: call 0x277c0; add esp, 0xc; pop ebx; ret; 
0x000fd9b5: call 0x277d0; add esp, 0x14; pop ebx; pop ebp; ret; 
0x000ecbcf: call 0x277e0; add esp, 8; pop ebx; pop esi; ret; 
0x00034637: call 0x27800; add esp, 0x10; pop ebx; pop esi; ret; 
0x000db7c4: call 0x27810; add esp, 0x10; pop ebx; ret; 
0x000f81ba: call 0x27840; add esp, 4; pop ebx; ret; 
0x00035838: call 0x278a0; add esp, 4; pop ebx; ret; 
0x00065892: call 0x278c0; add esp, 0x10; pop ebx; ret; 
0x000ecaa7: call 0x27940; add esp, 0x18; pop ebx; ret; 
0x0006536e: call 0x279a0; add esp, 0x14; pop ebx; ret; 
0x000c8078: call 0x27a00; add esp, 0xc; pop ebx; pop esi; ret; 
0x0010b670: call 0x27aa0; add esp, 0x10; pop ebx; pop esi; ret; 
0x00022fc3: call 0x27b1b; leave; ret; 
0x0009e094: call 0x2929d95a; ret 0x48d; 
0x000a2267: call 0x292a1b2d; ret 0x48d; 
0x000a5f5e: call 0x310c48e6; sal dh, cl; rcr dword ptr [edi], 0xf; xchg eax, ebp; ret 0xd789; 
0x0011facc: call 0x4011fb36; ret; 
0x00126e6e: call 0x41267c7d; ret; 
0x0012c222: call 0x4126d031; ret; 
0x001017ad: call 0x4799dfdb; add al, 0x83; ret 0x8902; 
0x0003e94a: call 0x5b14add2; pop esi; ret; 
0x000f3798: call 0x5d6e95f8; ret; 
0x000629dc: call 0x5e0aee64; pop edi; pop ebp; ret; 
0x000a0c4e: call 0x5e0ed0d6; pop edi; pop ebp; ret; 
0x000ab7d8: call 0x5e1b7c60; pop edi; pop ebp; ret; 
0x000ab840: call 0x5e1f7cc8; pop edi; pop ebp; ret; 
0x000ab8d0: call 0x5e1f7d58; pop edi; pop ebp; ret; 
0x000483bc: call 0x5ed4b4d0; pop edi; pop ebp; ret; 
0x000638a3: call 0x63873; not eax; pop esi; pop edi; ret; 
0x00064531: call 0x63ffe; add esp, 0x10; pop ebx; ret; 
0x000644c7: call 0x63ffe; add esp, 0x10; ret; 
0x000643db: call 0x64068; add esp, 0x10; ret; 
0x0003ea0c: call 0x8103f6dd; ret; 
0x0005660c: call 0x81057161; ret; 
0x0006740c: call 0x81067e53; ret; 
0x0007190c: call 0x810722ae; ret; 
0x0007210c: call 0x81072aa6; ret; 
0x0007e10c: call 0x8107e9e6; ret; 
0x0008370c: call 0x81083f90; ret; 
0x00087f0c: call 0x81088748; ret; 
0x0008950c: call 0x81089d32; ret; 
0x000abb0c: call 0x810ac10c; ret; 
0x000d6d0c: call 0x810d705a; ret; 
0x000a9e7d: call 0x81e6b; dec dword ptr [ebx + 0x29182454]; ret 0x7c83; 
0x0002d35f: call 0x830c4765; ret 0x8b04; 
0x0004aeec: call 0x831ab379; ret 0x8301; 
0x0004ae5a: call 0x831bb2e7; ret 0x8301; 
0x000d8754: call 0x83ccbbe6; ret 0xf01; 
0x000f854a: call 0x840bccd8; ret 0x8b04; 
0x0003f643: call 0x8805224b; inc edx; add dword ptr [eax + 2], edi; ret; 
0x00071871: call 0x89cf2178; ret 0xeac1; 
0x000732d5: call 0x89cf3bdc; ret 0xeac1; 
0x00074d93: call 0x89cf569a; ret 0xeac1; 
0x000a770a: call 0x89d28011; ret 0xeac1; 
0x000a78e4: call 0x89d281eb; ret 0xeac1; 
0x0007187f: call 0x89d7218c; ret 0xeac1; 
0x000732e3: call 0x89d73bf0; ret 0xeac1; 
0x00074da1: call 0x89d756ae; ret 0xeac1; 
0x000a7718: call 0x89da8025; ret 0xeac1; 
0x000a78f2: call 0x89da81ff; ret 0xeac1; 
0x000a86c2: call 0x89da8fc9; ret 0xeac1; 
0x000a86fc: call 0x89da9003; ret 0xeac1; 
0x000a870a: call 0x89da9017; ret 0xeac1; 
0x000ea777: call 0x89deb07e; ret 0xeac1; 
0x0009ca05: call 0x8ce4d28; pop ebx; ret; 
0x000658ee: call 0x91465; add esp, 0xc; ret; 
0x0009579d: call 0x94920; add esp, 0x14; pop ebx; ret; 
0x00095566: call 0x94920; add esp, 0x14; ret; 
0x0009c001: call 0x9ba37; mov eax, dword ptr [ebx + 0x22cc]; pop ebx; ret; 
0x000a1d31: call 0xa1d01; not eax; pop esi; pop edi; ret; 
0x000a2cac: call 0xa2529; add esp, 0x10; pop ebx; ret; 
0x000a2c42: call 0xa2529; add esp, 0x10; ret; 
0x000a2b56: call 0xa2598; add esp, 0x10; ret; 
0x000a3990: call 0xa3830; add esp, 0x10; pop ebx; ret; 
0x000a8b86: call 0xa6894; add esp, 0x18; pop ebx; pop esi; ret; 
0x0014893f: call 0xa9b8b4c; push cs; adc al, 0x41; ret; 
0x001389d3: call 0xadf8be8; push cs; adc al, 0x41; ret; 
0x000b9063: call 0xb8aa1; add esp, 8; pop ebx; ret; 
0x00035ea0: call 0xc4875ea3; or al, 0x5b; ret; 
0x0003ee6a: call 0xc487aea0; sbb byte ptr [ebx + 0x5e], bl; ret; 
0x000660a7: call 0xc48a60a7; inc eax; pop ebx; ret; 
0x00076f10: call 0xc48b6f0f; adc al, 0x5b; pop esi; ret; 
0x00036edb: call 0xcc7f1ff; pop ebx; ret; 
0x000d28f5: call 0xd2790; add esp, 0x18; pop ebx; ret; 
0x000d80b1: call 0xe2cf6b3f; adc byte ptr [ecx], dh; ret 0xf089; 
0x000d818d: call 0xe2cf6c1b; adc byte ptr [ecx], dh; ret 0xf089; 
0x000c21a4: call 0xe90c21a7; ret; 
0x000740f6: call 0xf699b5fc; rol dword ptr [eax + 0xf], -0x7c; ret; 
0x00068691: call 0xf699fb97; ret 0xf40; 
0x00098039: call 0xf69df53f; ret 0xf40; 
0x0004aedb: call 0xf7d637e2; rol dword ptr [ebx - 0x1e3efc1f], 1; add ecx, dword ptr [ebx - 0x2cff7abc]; call 0x831ab379; ret 0x8301; 
0x000f9843: call 0xf972c; add esp, 0x1c; ret; 
0x000f99f1: call 0xf9881; add esp, 0x1c; ret; 
0x000fb043: call 0xfad70; add esp, 0x88; pop ebx; pop esi; ret; 
0x000f2357: call dword ptr [eax + 0x2c]; add esp, 0xc; ret; 
0x000f2378: call dword ptr [eax + 0x30]; add esp, 0xc; ret; 
0x000f2389: call dword ptr [eax + 0x34]; add esp, 4; ret; 
0x00122223: call dword ptr [eax + 0x3d000180]; ret 0xfff6; 
0x0007face: call dword ptr [eax + 0x424448b]; xor edx, edx; div dword ptr [esp + 8]; ret; 
0x000b2c54: call dword ptr [eax + 0xc]; add esp, 0x10; pop ebx; pop esi; ret; 
0x000bef0a: call dword ptr [eax + 0xc]; add esp, 0x40; pop ebx; pop esi; ret; 
0x00035b65: call dword ptr [eax + 4]; add esp, 0xc; ret; 
0x0005f97d: call dword ptr [eax + 4]; add esp, 4; ret; 
0x00124663: call dword ptr [eax + eax*4]; add al, byte ptr [eax]; dec eax; ret; 
0x00123f43: call dword ptr [eax]; push eax; add al, byte ptr [eax]; scasb al, byte ptr es:[edi]; ret; 
0x000b23c9: call dword ptr [ebx - 0x7d]; in al, dx; adc al, 0xe8; and eax, 0x81000593; ret; 
0x00077fd1: call dword ptr [ebx - 0x7d]; in al, dx; adc al, ch; sbb eax, 0x81000937; ret; 
0x000ea5c1: call dword ptr [ebx - 0x7d]; in al, dx; adc al, ch; sub eax, 0x81000211; ret; 
0x0009ba36: call dword ptr [ebx - 0x7d]; in al, dx; add al, 0xe8; mov eax, 0x810006fc; ret; 
0x0009622f: call dword ptr [ebx - 0x7d]; in al, dx; add al, 0xe8; mov edi, 0x81000754; ret; 
0x0004374c: call dword ptr [ebx - 0x7d]; in al, dx; and al, 0xe8; mov byte ptr [0x81000c7f], al; ret; 
0x00089506: call dword ptr [ebx - 0x7d]; in al, dx; xor al, ch; call 0x81089d32; ret; 
0x00035bf3: call dword ptr [ecx + 0xc]; leave; ret; 
0x000370e3: call dword ptr [edx + 4]; add esp, 0xc; ret; 
0x00108b9f: call dword ptr [esi + 0x1f0]; add esp, 0x1c; pop ebx; pop esi; ret; 
0x00116de3: call dword ptr [esi]; ret; 
0x000ba3de: call dword ptr [esp + 0x10]; add esp, 8; ret; 
0x000e697a: call dword ptr [esp + 0x24]; add esp, 0x20; ret; 
0x0012520b: call dword ptr [esp + ebx*8]; add dword ptr [eax], eax; ret; 
0x000c9012: call eax; add esp, 0xc; pop ebx; ret; 
0x00122dbb: call eax; iretd; add dword ptr [eax], eax; ret; 
0x00124f83: call eax; ret; 
0x00118dda: call ebp; ret; 
0x0006b6bd: call ebx; shl byte ptr [ecx], 2; xor eax, eax; pop ebx; ret; 
0x0005fb30: call ecx; add esp, 0x20; ret; 
0x00116ddb: call edx; ret; 
0x00044a58: cmp ah, byte ptr [ecx - 0x76912615]; ret 0xf231; 
0x00146c40: cmp al, 0; add byte ptr [eax], al; or al, 0x1a; add al, byte ptr [eax]; ret; 
0x00141edc: cmp al, 0; add byte ptr [eax], al; test al, 0xcc; add dword ptr [eax], eax; ret; 
0x00141594: cmp al, 0; add byte ptr [eax], al; pushal; ret; 
0x00095a10: cmp al, 0x14; stc; inc dword ptr [ebx + 0x5e5b04c4]; pop edi; ret; 
0x0004e694: cmp al, 0x24; mov eax, dword ptr [esp]; and eax, 0x3f; add esp, 4; ret; 
0x0004e08d: cmp al, 0x24; movsx eax, byte ptr [esp + 9]; shr eax, 0x1f; leave; ret; 
0x000679e9: cmp al, 0x33; inc edi; cmp byte ptr [ecx], cl; ret 0xcd75; 
0x00037a85: cmp al, 0x56; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x000308b6: cmp al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x000652b8: cmp al, 0x5b; pop esi; pop edi; ret; 
0x00090aac: cmp al, 0x5b; pop esi; ret; 
0x00059ffd: cmp al, 0x5b; ret; 
0x0013e607: cmp al, 0x6c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00137637: cmp al, 0x74; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00038043: cmp al, 0x83; ret 0x101; 
0x000aa33b: cmp al, 0x85; ror byte ptr [edi], 0x84; ret; 
0x000c2f22: cmp al, 0x89; push eax; pop esp; mov eax, 1; ret; 
0x001033ea: cmp al, 0x89; ret 0xeac1; 
0x00109837: cmp al, 0x8b; push ecx; or byte ptr [ecx], ch; ret 0x5189; 
0x000bd5dd: cmp al, 0xe8; adc eax, 0x810004e1; ret; 
0x00065235: cmp al, 0xe8; mov ebp, 0x81000a64; ret; 
0x0003b162: cmp al, 0xe8; mov esp, 0x89ffffd9; ret 0x4483; 
0x000a160f: cmp al, 0xe9; ret 0xfffd; 
0x000b5c6b: cmp al, 0xf; mov gs, word ptr [ebx]; add dword ptr [eax], eax; add byte ptr [ebx - 0x7cd7dbac], cl; ret 0x8331; 
0x0002df76: cmp al, 1; add byte ptr [eax + ecx - 0x7d], dh; rol byte ptr [ecx], 0x39; sal byte ptr [ebp - 0xd], 1; ret; 
0x0014213d: cmp al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000e1b35: cmp al, 1; ret 0x5489; 
0x0012cdb7: cmp al, 2; fimul dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0013f363: cmp al, 2; mov dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x001292b3: cmp al, 2; mov ebp, 0x41140e0a; ret; 
0x0012a502: cmp al, 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012babb: cmp al, 2; or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x00127abf: cmp al, 2; ret 0xe0a; 
0x001375df: cmp al, 2; test dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0013126b: cmp al, 2; xchg eax, ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001406cb: cmp al, 2; xchg eax, ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001448ab: cmp al, 2; cld; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129233: cmp al, 3; aad 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013642f: cmp al, 3; add dword ptr cs:[edx], ecx; push cs; adc al, 0x41; ret; 
0x001292f3: cmp al, 3; add dword ptr ss:[edx], ecx; push cs; adc al, 0x41; ret; 
0x0012934b: cmp al, 3; cmp eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00146b97: cmp al, 3; fiadd dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001443af: cmp al, 3; or eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012a5fb: cmp al, 3; sbb eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014ad03: cmp al, 3; sub byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000c92e9: cmp al, byte ptr [ebx]; mov ah, 0x3b; mov esp, 0x89fffc7f; ret 0xcac1; 
0x00126bb1: cmp al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000e184a: cmp al, byte ptr [ecx]; ret 0x1689; 
0x001029b5: cmp al, ch; cmp eax, 0x8100008d; ret; 
0x00083939: cmp al, ch; mov ecx, 0x8100087d; ret; 
0x0004e1c7: cmp ax, 0x7f80; setne al; movzx eax, al; ret; 
0x0004e1af: cmp ax, 0x7ff0; setne al; movzx eax, al; pop ebp; ret; 
0x000a3fe4: cmp bh, bh; idiv edi; add esp, 0xc; pop ebx; ret; 
0x00090f17: cmp bh, cl; inc dword ptr [ebx + 0x5e5b04c4]; pop edi; ret; 
0x000440f6: cmp byte ptr [eax - 0x7cfea9b4], cl; ret 0x8301; 
0x0001141c: cmp byte ptr [eax], al; add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret; 
0x00030075: cmp byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00037906: cmp byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000439e5: cmp byte ptr [ebx + 0x5e], bl; ret; 
0x00051ced: cmp byte ptr [ebx + 0x5f5e28c4], al; pop ebp; ret; 
0x0013a68b: cmp byte ptr [ebx], al; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x00143c07: cmp byte ptr [ebx], al; add dword ptr cs:[edx], ecx; push cs; adc al, 0x41; ret; 
0x0012ece3: cmp byte ptr [ebx], al; and al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001470a3: cmp byte ptr [ebx], al; and eax, 0x140e0a01; inc ecx; ret; 
0x00136753: cmp byte ptr [ebx], al; bound eax, qword ptr [ebx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014c513: cmp byte ptr [ebx], al; mov byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013c7d3: cmp byte ptr [ebx], al; mov dword ptr [0x140e0a01], eax; inc ecx; ret; 
0x0013ea2d: cmp byte ptr [ebx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00136587: cmp byte ptr [ebx], al; or eax, 0x140e0a01; inc ecx; ret; 
0x0012d4cf: cmp byte ptr [ebx], al; sbb al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001452ef: cmp byte ptr [ebx], al; sbb eax, 0x140e0a01; inc ecx; ret; 
0x0014b4d7: cmp byte ptr [ebx], al; sub al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00135dd3: cmp byte ptr [ebx], al; sub eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00149a57: cmp byte ptr [ebx], al; xor al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001272a8: cmp byte ptr [ebx], al; xor eax, dword ptr [edx + ecx]; push cs; adc al, 0x41; ret; 
0x000a160b: cmp byte ptr [ecx - 0x16c3dbac], cl; ret 0xfffd; 
0x000bbfb1: cmp byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x000a1b44: cmp byte ptr [ecx], al; ret 0xc6; 
0x00104e56: cmp byte ptr [ecx], bh; ret 0x6677; 
0x000679ec: cmp byte ptr [ecx], cl; ret 0xcd75; 
0x000f98dd: cmp byte ptr [ecx], dh; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x0004e220: cmp byte ptr [edi + 0x66], 0x81; cli; cmp byte ptr [edi + 0x74], 3; xor eax, eax; ret; 
0x0004e225: cmp byte ptr [edi + 0x74], 3; xor eax, eax; ret; 
0x0004e2aa: cmp byte ptr [edi + 0x74], 6; mov eax, 2; ret; 
0x000c77cd: cmp byte ptr [edx - 4], 0xff; pop ebx; ret; 
0x00136f43: cmp byte ptr [edx], al; dec eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012c0dd: cmp byte ptr [edx], al; fisttp qword ptr [edx]; push cs; or al, 0x41; ret; 
0x00140c53: cmp byte ptr [edx], al; fmul qword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0014362f: cmp byte ptr [edx], al; jecxz 0x14363d; push cs; adc al, 0x41; ret; 
0x0013d07b: cmp byte ptr [edx], al; lodsd eax, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013e6ab: cmp byte ptr [edx], al; mov al, 0xa; push cs; adc al, 0x41; ret; 
0x001451d3: cmp byte ptr [edx], al; mov al, byte ptr [0x41140e0a]; ret; 
0x00139c47: cmp byte ptr [edx], al; mov bl, 0xa; push cs; adc al, 0x41; ret; 
0x0014cbcf: cmp byte ptr [edx], al; mov byte ptr [0x41140e0a], al; ret; 
0x0012ed3b: cmp byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126927: cmp byte ptr [edx], al; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x0012ac47: cmp byte ptr [edx], al; or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x0012e6b7: cmp byte ptr [edx], al; out 0xa, eax; push cs; adc al, 0x41; ret; 
0x0014ac97: cmp byte ptr [edx], al; out dx, eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012c933: cmp byte ptr [edx], al; outsb dx, byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013edab: cmp byte ptr [edx], al; pop edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014bf43: cmp byte ptr [edx], al; push edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001399f7: cmp byte ptr [edx], al; xchg eax, ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001427ef: cmp byte ptr [edx], al; xchg eax, edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001355bf: cmp byte ptr [edx], al; pushfd; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013afd7: cmp byte ptr [edx], al; std; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00006e14: cmp ch, byte ptr [ebp]; add ch, dl; xor dword ptr [eax + eax], ecx; ret; 
0x0003ef32: cmp cl, byte ptr [ebp - 2]; inc dword ptr [ebx + 0x5e5b18c4]; ret; 
0x0005909c: cmp dh, byte ptr [eax + edx - 0x73]; dec eax; add dword ptr [ecx - 0x7cd3dbb4], ecx; ret 0x3901; 
0x0008f817: cmp dh, byte ptr [eax + edx - 0x7d]; ret 0x8801; 
0x00122000: cmp dh, byte ptr [edi - 0xa]; push eax; outsd dx, dword ptr [esi]; add dword ptr [eax], eax; ret; 
0x0004a8ff: cmp dl, dh; shl dword ptr [edx - 0x36], -0x77; ret 0xf231; 
0x000cc8a3: cmp dword ptr [eax + 4], ecx; sete al; movzx eax, al; ret; 
0x0002a483: cmp dword ptr [eax - 0x3b7c0001], edx; add al, 0x5b; add esp, 0xc; pop ebp; ret; 
0x0007e6c7: cmp dword ptr [eax - 1], -1; dec dword ptr [ecx]; xor byte ptr [ebx + 0x5e5b08c4], al; ret; 
0x00063d0b: cmp dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x4975; 
0x000315a2: cmp dword ptr [eax], esi; add byte ptr [eax], al; mov dword ptr [ecx + 0x1314], eax; and eax, 0x7fffffff; ret; 
0x000d8ffe: cmp dword ptr [ebp - 0x70], -4; inc dword ptr [ebx + 0x5e5b18c4]; ret; 
0x0002c451: cmp dword ptr [ecx - 0x7c], eax; push dword ptr [ebp - 0x32]; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000905c2: cmp dword ptr [edi + esi*4 - 0x3b7d0000], 8; pop ebx; ret; 
0x000688e4: cmp dword ptr [edx + 4], -4; dec dword ptr [ecx - 0x5017dbfc]; ret 0xfffb; 
0x000b3eaf: cmp dword ptr [edx + ebp*8 - 0x80], esi; ret 0x8801; 
0x00030fd3: cmp dword ptr [edx - 0x16000449], 0x3f; add dword ptr [eax], eax; add byte ptr [ebx - 0x7cc7dbac], cl; ret 0x8b01; 
0x000c6553: cmp dword ptr [edx], eax; idiv bh; add esp, 0x18; pop ebx; ret; 
0x000c2c55: cmp dword ptr [esi + 0x28], eax; sete al; movzx eax, al; pop esi; ret; 
0x0008fa63: cmp dword ptr [esi - 7], esp; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00052e2a: cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x0002bc29: cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x0012be0d: cmp eax, 0x140e0a01; inc ecx; ret; 
0x0012a2de: cmp eax, 0x140e0a03; inc ecx; ret; 
0x0014c4d5: cmp eax, 0x140e0a04; inc ecx; ret; 
0x000b483b: cmp eax, 0x16747ff0; mov eax, 2; leave; ret; 
0x0004e1ec: cmp eax, 0x4747ff0; xor eax, eax; leave; ret; 
0x0004e0b5: cmp eax, 0x4747fff; xor eax, eax; leave; ret; 
0x0004e2a9: cmp eax, 0x6747f80; mov eax, 2; ret; 
0x0004e279: cmp eax, 0x7f800000; sete al; movzx eax, al; ret; 
0x001029b7: cmp eax, 0x8100008d; ret; 
0x000ebcb7: cmp eax, 0x810001fa; ret; 
0x000e74b7: cmp eax, 0x81000242; ret; 
0x000c53b7: cmp eax, 0x81000463; ret; 
0x0006b3b7: cmp eax, 0x81000a03; ret; 
0x000671b7: cmp eax, 0x81000a45; ret; 
0x0005ecb7: cmp eax, 0x81000aca; ret; 
0x00034ab7: cmp eax, 0x81000d6c; ret; 
0x000c5e1f: cmp eax, 0x89fff611; ret 0x45c6; 
0x0009c70f: cmp eax, 0x8c483ff; pop ebx; ret; 
0x0004e9d3: cmp eax, 0x8dfffffe; inc edx; add al, byte ptr [eax + 0xf00017a]; test byte ptr [edx - 0x76000002], dl; ret 0xbeeb; 
0x000a0be4: cmp eax, 0xc483fff8; add al, 0x5b; pop esi; pop edi; ret; 
0x0012934d: cmp eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0000c934: cmp ebp, dword ptr [ebp]; add ch, dl; xor dword ptr [eax + eax], ecx; ret; 
0x000c8079: cmp ecx, 0xf5; inc dword ptr [ebx + 0x5e5b0cc4]; ret; 
0x001033e6: cmp ecx, dword ptr [ebx - 0x76c3dbbc]; ret 0xeac1; 
0x00027b11: cmp edi, dword ptr [esi - 0x3b7c0001]; or byte ptr [edi + 0x5b], bl; ret; 
0x0004e223: cmp edx, 0x3747f80; xor eax, eax; ret; 
0x0004e29d: cmp edx, 1; sbb eax, eax; not eax; add eax, 4; ret; 
0x0003709a: cmp edx, 2; sete al; add esp, 0xc; ret; 
0x00062971: cmp esp, dword ptr [eax]; cld; inc dword ptr [ebx + 0x5e5b04c4]; pop edi; ret; 
0x0008eb0d: cmp esp, edi; dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; ret 2; 
0x001291b5: cmpsb byte ptr [esi], byte ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00008a68: cmpsb byte ptr [esi], byte ptr es:[edi]; ret 9; 
0x00027bbf: cmpsb byte ptr [esi], byte ptr es:[edi]; sti; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x00122c00: cmpsd dword ptr [esi], dword ptr es:[edi]; xor edi, eax; dec eax; ret; 
0x000890f8: cmpsd dword ptr [esi], dword ptr es:[edi]; stc; inc dword ptr [ebx + 0x5e5b18c4]; pop edi; ret; 
0x00060bdd: cmpxchg dword ptr [edx], ecx; ret; 
0x000d6c20: dec byte ptr [ecx - 0x3b7cdfba]; add al, 0x5b; pop esi; ret; 
0x000db8b0: dec byte ptr [edi]; xchg eax, edi; ret 0xd029; 
0x00122523: dec dword ptr [eax]; xchg eax, esi; add dword ptr [eax], eax; ret; 
0x00120833: dec dword ptr [eax]; ret; 
0x0003469c: dec dword ptr [ebp + 0x5e5bf865]; pop ebp; ret; 
0x000c6ceb: dec dword ptr [ebp + 0xe08c83]; add bl, ch; ret 0x6c7; 
0x00047dab: dec dword ptr [ebx + 0x10c2454]; ret 0x542b; 
0x00033b0a: dec dword ptr [ebx + 0x1c938b06]; adc eax, dword ptr [eax]; add byte ptr [ecx], al; ret 0x932b; 
0x000a9e82: dec dword ptr [ebx + 0x29182454]; ret 0x7c83; 
0x000fa71b: dec dword ptr [ebx + 0x408b0045]; sbb byte ptr [ebx - 0x16e7dbb4], cl; ret 0xfffe; 
0x000a6a69: dec dword ptr [ebx + 0x468b1456]; adc al, ch; ret 0xfffa; 
0x0005d7c2: dec dword ptr [ebx + 0x4890846]; and al, 0xe8; ret 0xfc8e; 
0x00097e81: dec dword ptr [ebx + 0x4891447]; and al, 0xe8; ret; 
0x000ab702: dec dword ptr [ebx + 0x568bae0c]; or dh, dh; ret 0x7401; 
0x0005a1b4: dec dword ptr [ebx + 0x74c08500]; add eax, 0x75003880; add eax, 0x5b08c483; ret; 
0x000aabbb: dec dword ptr [ebx - 0x16ebdbac]; ret 0xfffe; 
0x000406d9: dec dword ptr [ebx - 0x16efdbac]; ret 0xfffe; 
0x0002c26e: dec dword ptr [ebx - 0x3b7cd7ba]; adc byte ptr [ebx + 0x5e], bl; ret; 
0x0002c2c2: dec dword ptr [ebx - 0x3b7cdbba]; adc byte ptr [ebx + 0x5e], bl; ret; 
0x0004ee2a: dec dword ptr [ebx - 0x749fdb8c]; inc esi; or byte ptr [ecx], al; ror byte ptr [ecx - 0x16e3dbbc], 1; ret; 
0x000b53ee: dec dword ptr [ebx - 0x74a3dbbc]; push ebp; or al, 1; ret 0x5489; 
0x000e35b8: dec dword ptr [ebx - 0x76cfdbbc]; ret 0xbce8; 
0x000e2dc6: dec dword ptr [ebx - 0x76dfdbbc]; ret 0xaee8; 
0x0007cd14: dec dword ptr [ebx - 0x7c8fdbac]; ret 0x8301; 
0x0007c35d: dec dword ptr [ebx - 0x7c8fdbac]; ret 0x8901; 
0x000b1a81: dec dword ptr [ebx - 0x7c97dbac]; ret 0x8301; 
0x00091133: dec dword ptr [ebx - 0x7cc7dbac]; ret 0x8901; 
0x000311ee: dec dword ptr [ebx - 0x7cc7dbbc]; rol byte ptr [ecx], 0x89; ret 0x4489; 
0x0009b8c1: dec dword ptr [ebx - 0x7ce3dbbc]; ret 0xc701; 
0x00036ce7: dec dword ptr [ebx - 0x7cfbdbbc]; inc eax; adc al, 4; mov eax, 1; ret; 
0x000463ff: dec dword ptr [ecx + 0x10c483f0]; pop ebx; pop esi; ret; 
0x000d8f75: dec dword ptr [ecx + 0x18c483f0]; pop ebx; pop esi; ret; 
0x000ba63e: dec dword ptr [ecx + 0x19e82404]; ret 0xfff6; 
0x000bf6b3: dec dword ptr [ecx + 0x1b802]; add byte ptr [eax], al; pop ebx; ret; 
0x0007709e: dec dword ptr [ecx + 0x1cc483f0]; pop ebx; pop esi; ret; 
0x000f244c: dec dword ptr [ecx + 0x20c483f0]; pop ebx; pop esi; ret; 
0x000d5b54: dec dword ptr [ecx + 0x21d2f7ca]; ret 0xcd89; 
0x000ea8ef: dec dword ptr [ecx + 0x2444c7c7]; add al, 1; add byte ptr [eax], al; add byte ptr [ecx + 0x5ee82434], cl; ret 0xfff3; 
0x00043906: dec dword ptr [ecx + 0x24c483f0]; pop ebx; pop esi; ret; 
0x0004d7b8: dec dword ptr [ecx + 0x2cc483f0]; pop ebx; pop esi; ret; 
0x000e07ce: dec dword ptr [ecx + 0x39e82404]; push 0xc483fff4; add al, 0x5b; ret; 
0x000b67d3: dec dword ptr [ecx + 0x4c48306]; pop ebx; pop esi; ret; 
0x000983f9: dec dword ptr [ecx + 0x4ee82404]; ret; 
0x000a9a21: dec dword ptr [ecx + 0x56e8242c]; ret; 
0x00088940: dec dword ptr [ecx + 0x57e82404]; ret 0xfff9; 
0x000683ec: dec dword ptr [ecx + 0x5be82404]; ret; 
0x000a5115: dec dword ptr [ecx + 0x5d5f5ed0]; ret; 
0x000a4a68: dec dword ptr [ecx + 0x5d5f5ef0]; ret; 
0x000565f2: dec dword ptr [ecx + 0x709083]; add byte ptr [ebp - 0x76368b40], al; ret 0xf089; 
0x000e0761: dec dword ptr [ecx + 0x8c48306]; pop ebx; pop esi; ret; 
0x000eec20: dec dword ptr [ecx + 0x8c483f0]; pop ebx; pop esi; ret; 
0x000eb930: dec dword ptr [ecx + 0xb60f0a]; mov byte ptr [ebx + 0x13214], al; pop ebx; ret; 
0x00032e08: dec dword ptr [ecx + 0xcc483f0]; pop ebx; pop esi; ret; 
0x0005d850: dec dword ptr [ecx + 0xfa6f3ee]; xchg eax, edi; ror byte ptr [edi], 0x92; ret 0xd028; 
0x00080bc6: dec dword ptr [ecx + 0xfd789c6]; movsb byte ptr es:[edi], byte ptr [esi]; test dword ptr [ebx], 0xf03e6c1; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc105; 
0x0005323d: dec dword ptr [ecx + 0xffa89f0]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x101; 
0x000488af: dec dword ptr [ecx - 0x1717dbfc]; ret 0xfffd; 
0x000b8c7e: dec dword ptr [ecx - 0x3617dbec]; ret; 
0x000be895: dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; add dword ptr [ecx], 0x838d0000; ret 0xfc6f; 
0x000bab2b: dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; ret 0; 
0x00093958: dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; ret 1; 
0x00054562: dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; ret 2; 
0x0008ca58: dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; ret 4; 
0x0003b672: dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; ret; 
0x000e206d: dec dword ptr [ecx - 0x38fbdbbc]; add al, 0x24; and eax, 0xe8000000; ret 0xf458; 
0x000a2586: dec dword ptr [ecx - 0x3b7cd7b0]; or al, 0x5b; pop esi; ret; 
0x00064056: dec dword ptr [ecx - 0x3b7cd7b0]; or byte ptr [ebx + 0x5e], bl; ret; 
0x000e0fb1: dec dword ptr [ecx - 0x3b7cf38e]; sbb byte ptr [ebx + 0x5e], bl; ret; 
0x000487e4: dec dword ptr [ecx - 0x4c17dbfc]; ret; 
0x000688e8: dec dword ptr [ecx - 0x5017dbfc]; ret 0xfffb; 
0x0008a019: dec dword ptr [ecx - 0x5117dbc4]; ret 0xfff9; 
0x000b880f: dec dword ptr [ecx - 0x5717dbcc]; ret; 
0x00108902: dec dword ptr [ecx - 0x6a17dbfc]; ret 0xfff1; 
0x000a66fa: dec dword ptr [ecx - 0x6c74ef88]; push 0x890000c0; push eax; adc al, 0x89; ret 0x838d; 
0x00074a10: dec dword ptr [ecx - 0x72f3dbac]; xchg eax, ebx; ret 0xfc0b; 
0x000ba634: dec dword ptr [ecx - 0x72fbdbbc]; and dword ptr [ebx], 0x6b; cld; dec dword ptr [ecx + 0x19e82404]; ret 0xfff6; 
0x00100006: dec dword ptr [ecx - 0x76027617]; ret 0x1ce9; 
0x000f8eee: dec dword ptr [ecx - 0x76e3dbbc]; ret 0xc085; 
0x000a3f81: dec dword ptr [ecx - 0x76fd7718]; int 0x83; ret 0xe901; 
0x00088911: dec dword ptr [ecx - 0x7917dbfc]; ret 0xfff9; 
0x000f6195: dec dword ptr [ecx - 0x7a8bdbbc]; ror byte ptr [edi], 0x84; ret; 
0x000fa713: dec dword ptr [ecx - 0x7b17dbfc]; movsb byte ptr es:[edi], byte ptr [esi]; dec dword ptr [ebx + 0x408b0045]; sbb byte ptr [ebx - 0x16e7dbb4], cl; ret 0xfffe; 
0x0003d122: dec dword ptr [ecx - 0x7cfbdb94]; ret 0x2901; 
0x00098350: dec dword ptr [ecx - 0x817dbfc]; ret; 
0x000597e8: dec dword ptr [ecx - 0x8510d29]; ror dword ptr [ebp + 0x39fe0a44], 1; ret 0x975; 
0x000519bf: dec dword ptr [ecx - 0x9efdb84]; ret 0xf01; 
0x00060ec6: dec dword ptr [ecx]; ret 0x5489; 
0x000fd6aa: dec dword ptr [ecx]; ret 0x850f; 
0x0007e6cb: dec dword ptr [ecx]; xor byte ptr [ebx + 0x5e5b08c4], al; ret; 
0x0010df07: dec dword ptr [ecx]; ret; 
0x00036591: dec dword ptr [edi]; mov bh, 0x55; or al, 0xf6; ret 0x7540; 
0x001084f7: dec dword ptr [edi]; mov dh, 0x57; sub dh, dh; ret 0xf02; 
0x0007cef1: dec dword ptr [edi]; test byte ptr [esi - 0x76ffffff], dl; ret 0xe283; 
0x000a79a6: dec dword ptr [edi]; test dword ptr [0x83000001], ecx; ret 0x3901; 
0x000adc73: dec dword ptr [edi]; test dword ptr [edi - 0x16000003], edi; ret; 
0x000b4609: dec dword ptr [edi]; test dword ptr [esi + edi*8 - 1], ecx; push esi; ret 0xf01; 
0x000f64ca: dec dword ptr [edi]; test ecx, esp; or eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0xef77; 
0x00060b55: dec dword ptr [edx]; ret; 
0x001233e3: dec dword ptr [esi + edi*8]; add dword ptr [eax], eax; ret 0xf9e0; 
0x000c5223: dec eax; adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x00129967: dec eax; add ah, byte ptr [ebp + 0x41140e0a]; ret; 
0x00140583: dec eax; add ah, dh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014cea5: dec eax; add al, byte ptr [edi + 0x410c0e0a]; ret; 
0x0012b8eb: dec eax; add al, byte ptr [edx + 0x41140e0a]; ret; 
0x00125aff: dec eax; add bh, byte ptr [edi + 0x41140e0a]; ret; 
0x0013b0d5: dec eax; add bl, byte ptr [esi + 0x410c0e0a]; ret; 
0x00140d8b: dec eax; add ch, ah; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014560b: dec eax; add cl, byte ptr [edi + 0x41140e0a]; ret; 
0x0013668f: dec eax; add dh, byte ptr [eax + 0x41140e0a]; ret; 
0x00121ab5: dec eax; add dword ptr [eax], eax; ret 0xf56b; 
0x000e8966: dec eax; add dword ptr [ecx + 0x8e9c1d1], ecx; mov byte ptr [eax + 2], cl; mov byte ptr [eax + 3], dl; ret; 
0x000590a0: dec eax; add dword ptr [ecx - 0x7cd3dbb4], ecx; ret 0x3901; 
0x0012b04d: dec eax; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0013528f: dec eax; add eax, dword ptr [ebp + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014a55b: dec eax; add edx, dword ptr [edi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127aff: dec eax; add esi, dword ptr [ebp + 0x140e0a01]; inc ecx; ret; 
0x000f244a: dec eax; dec dword ptr [ecx + 0x20c483f0]; pop ebx; pop esi; ret; 
0x000f1dd2: dec eax; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000c531c: dec eax; or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x00055192: dec eax; or byte ptr [eax], al; add byte ptr [ebx + 0xf102444], cl; test dword ptr [ecx - 0x18000000], ebx; ret; 
0x000cf6f8: dec eax; or byte ptr [esi + 0x5f], bl; ret 4; 
0x00125334: dec eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00125fbc: dec eax; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00064cba: dec eax; pop ebx; pop esi; pop edi; ret; 
0x0006a951: dec eax; pop ebx; pop esi; ret; 
0x00118da2: dec eax; pop ebx; ret 0x3956; 
0x00091c95: dec eax; pop esi; pop edi; ret; 
0x00125360: dec eax; push cs; adc al, 0x41; ret; 
0x0012d0f6: dec eax; push cs; or al, 0x41; ret; 
0x0012082b: dec eax; ret 0; 
0x000d392e: dec eax; sbb al, 0x89; ret 0x65e9; 
0x0002c3a5: dec eax; sub eax, dword ptr [esp + 4]; ret; 
0x00127c59: dec eax; xchg byte ptr [ebx], al; add dword ptr [esi], 0xa; ret; 
0x000e0741: dec eax; hlt; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x00060b6d: dec eax; ret; 
0x000ff009: dec ebp; adc byte ptr [edi], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x0014b7c1: dec ebp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00125735: dec ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012d6bc: dec ebp; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0014225e: dec ebp; pop es; push cs; adc al, 0x41; ret; 
0x0014b49b: dec ebp; push cs; adc al, 0x41; ret; 
0x00107fcf: dec ebp; ret; 
0x00050c91: dec ebp; std; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x00022fc5: dec ebx; add byte ptr [eax], al; leave; ret; 
0x0012b586: dec ebx; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x00140dcd: dec ebx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0012776b: dec ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00128246: dec ebx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00149df8: dec ebx; push cs; adc al, 0x41; ret; 
0x0012e801: dec ebx; push cs; or al, 0x41; ret; 
0x001190ea: dec ebx; ret 0x51a3; 
0x00118ed6: dec ebx; ret 0xbe30; 
0x000f4e3b: dec ebx; ret 5; 
0x0005aa21: dec ebx; xchg eax, edx; cld; inc dword ptr [ebx + 0x5e5b0cc4]; ret; 
0x001304b1: dec ebx; ret; 
0x001272ee: dec ecx; add al, 0xa; push cs; adc al, 0x41; ret; 
0x0012fc63: dec ecx; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x001264fd: dec ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012db9c: dec ecx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00065c33: dec ecx; or eax, 0xc483fffc; or al, 0x5b; ret; 
0x0012e684: dec ecx; push cs; or al, 0x41; ret; 
0x0013b92d: dec ecx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011b03; ret; 
0x0013deed: dec ecx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa013e03; ret; 
0x0013dd79: dec ecx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa014c03; ret; 
0x0013dd1d: dec ecx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa015603; ret; 
0x0013865d: dec ecx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa015d03; ret; 
0x0014999d: dec ecx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa019e03; ret; 
0x0013b995: dec ecx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa022a03; ret; 
0x001427b1: dec ecx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa030503; ret; 
0x0013de05: dec ecx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa03a003; ret; 
0x00126c79: dec ecx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa053b03; ret; 
0x0013d835: dec ecx; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa068003; ret; 
0x0010b717: dec ecx; ret; 
0x000feca6: dec edi; adc byte ptr [edi], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x0013cc91: dec edi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x000cea61: dec edi; or byte ptr [eax - 0x7bf00107], al; ret 0; 
0x00050e56: dec edi; or cl, byte ptr [ebx - 0x7ce3dbac]; ret 0x8901; 
0x001266e1: dec edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013ad6c: dec edi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00132588: dec edi; push cs; adc al, 0x41; ret; 
0x00140b74: dec edi; push cs; or al, 0x41; ret; 
0x00035999: dec edx; add dword ptr [ecx + 0x2b60f08], ecx; add esp, 4; pop ebx; ret; 
0x0013346d: dec edx; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x000cb989: dec edx; and eax, edx; ret; 
0x000f23ba: dec edx; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000c25b5: dec edx; or al, 0x5e; pop edi; ret; 
0x00126d63: dec edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001267c7: dec edx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013ac5e: dec edx; push cs; adc al, 0x41; ret; 
0x00147923: dec edx; push cs; or al, 0x41; ret; 
0x000d95b2: dec edx; ret; 
0x00052ab4: dec edx; std; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00034a0d: dec esi; add al, 0x83; ret 0x8d01; 
0x0014c20d: dec esi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0009c70e: dec esi; cmp eax, 0x8c483ff; pop ebx; ret; 
0x000b2404: dec esi; idiv edi; add esp, 0x14; pop ebx; ret; 
0x000fe232: dec esi; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0007e42e: dec esi; jns 0x7e42b; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x00077038: dec esi; mov al, byte ptr [0x8fe8000d]; ret 0xfffa; 
0x000cd006: dec esi; or al, 0x83; ret 0x3910; 
0x000ab678: dec esi; or byte ptr [ebx + 0x5f5e08c4], al; pop ebp; ret; 
0x001263c9: dec esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012cab6: dec esi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0009c1d5: dec esi; or eax, dword ptr [eax]; mov eax, dword ptr [ecx + 0x22cc]; ret; 
0x000e4d3e: dec esi; out dx, al; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00143e7b: dec esi; push cs; adc al, 0x41; ret; 
0x00148fa7: dec esi; push cs; or al, 0x41; ret; 
0x00121830: dec esi; ret 0xfff4; 
0x000983fe: dec esi; ret; 
0x0014c2a3: dec esp; add ah, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x0013faf9: dec esp; add ah, byte ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x0013768f: dec esp; add ah, byte ptr [esi + 0x41140e0a]; ret; 
0x00130bb2: dec esp; add al, byte ptr [ebx + 0x41100e0a]; ret; 
0x0013fbb9: dec esp; add al, byte ptr [edi + 0xa]; push cs; or al, 0x41; ret; 
0x001449af: dec esp; add bl, byte ptr [ebx + 0x41140e0a]; ret; 
0x00135eb3: dec esp; add ch, byte ptr [edi + 0x41140e0a]; ret; 
0x00135ef3: dec esp; add dh, byte ptr [eax + 0x41140e0a]; ret; 
0x0013cc0f: dec esp; add dh, byte ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0013fb29: dec esp; add dl, byte ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x0013dd81: dec esp; add dword ptr [edx], ecx; ret; 
0x001394a7: dec esp; add eax, dword ptr [ebp + 2]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001297af: dec esp; add ebp, dword ptr [edi + 0x140e0a06]; inc ecx; ret; 
0x0014bc8b: dec esp; add esi, dword ptr [ebp + 0x140e0a01]; inc ecx; ret; 
0x000f9a19: dec esp; and al, 0x10; mov dword ptr [ecx], edx; ret; 
0x000f9afc: dec esp; and al, 0x18; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00060bf9: dec esp; and al, 0xc; cmpxchg dword ptr [edx], ecx; ret; 
0x00060bd9: dec esp; and al, 0xc; lock cmpxchg dword ptr [edx], ecx; ret; 
0x00051e4a: dec esp; and al, 0xc; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x00060d1a: dec esp; and al, 4; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000f9876: dec esp; and al, 8; mov byte ptr [ecx], al; xor eax, eax; ret; 
0x000e4da8: dec esp; imul eax, dword ptr [edx], 0xd8c38100; ret 6; 
0x000bf9b0: dec esp; imul esi, esi, -1; add esp, 8; pop ebx; ret; 
0x001262d7: dec esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012a0e7: dec esp; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00091ad7: dec esp; pop esi; pop edi; ret; 
0x00140988: dec esp; push cs; adc al, 0x41; ret; 
0x0013d40c: dec esp; push cs; or al, 0x41; ret; 
0x000d7120: dec esp; ret 0xfff4; 
0x00139245: dec esp; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa013503; ret; 
0x00134731: dec esp; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01ad03; ret; 
0x001348fd: dec esp; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa024003; ret; 
0x0012e941: dec esp; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa026b03; ret; 
0x0013d8b1: dec esp; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa050803; ret; 
0x0012083c: dec esp; ret; 
0x00067730: div byte ptr [eax + edx - 0x7d]; ret 0x8904; 
0x0002d16e: div byte ptr [eax + esi*2 - 0x77]; ret 0x88b; 
0x000bbd5b: div byte ptr [ebp - 0x14]; add esp, 0x10; pop ebx; pop esi; ret; 
0x0005aa4d: div byte ptr [ebp - 9]; pop ebx; pop esi; ret; 
0x00053880: div byte ptr [ebx - 0x7d]; ret 0x8301; 
0x0002c239: div byte ptr [ecx + ecx - 0x75]; inc esi; sub byte ptr [ebx + 0x5e5b10c4], al; ret; 
0x0006ac76: div byte ptr [edx + eax - 0x77]; push es; add esp, 0x10; pop esi; ret; 
0x001091d6: div byte ptr [esi + edi + 0xf]; mov dh, 0x56; sbb dh, dh; ret 0x7502; 
0x0002d601: div byte ptr [esi - 0x77]; ret 0x88b; 
0x000c7767: div ch; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0007fad6: div dword ptr [esp + 8]; ret; 
0x000c8ecf: div ecx; mov eax, edx; pop ebx; xor edx, edx; ret; 
0x000d8619: div ecx; mov edx, ebx; pop ebx; ret; 
0x00010fa4: divps xmm0, xmmword ptr [eax]; add dh, dh; ret; 
0x001096d8: fadd dword ptr [ebx + 0x5e5b04c4]; pop edi; ret; 
0x000583ff: fadd dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0003ea43: fadd dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0002bd12: fadd dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000d6cb4: fadd dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00050b96: fadd dword ptr [ebx + 0x5e5b20c4]; ret; 
0x000f4f8e: fadd dword ptr [ebx + 0x5e5b24c4]; ret; 
0x000326dc: fadd dword ptr [ebx - 0x2508ff2e]; pop ebp; ret; 
0x0002e53d: fadd dword ptr [ebx - 0x2508ff2e]; ret; 
0x0006aca7: fadd dword ptr [ecx]; add byte ptr [eax], al; mov dword ptr [eax + 0x1d4], edx; pop ebx; ret; 
0x000c4b5b: fadd qword ptr [eax]; add byte ptr [eax], al; ret; 
0x0005cf4a: fadd qword ptr [esp + 4]; ret; 
0x0005a020: fcom dword ptr [esi]; or eax, dword ptr [eax]; add ecx, 0xf7060; lea eax, dword ptr [ecx + 0x142c]; ret; 
0x00138cbf: fcom qword ptr [ecx]; add dh, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x000f3c4d: fcomp dword ptr [esi + 0x5f]; pop ebp; ret; 
0x000b1eb4: fdiv dword ptr [esi]; idiv edi; add esp, 0x10; pop ebx; ret; 
0x000572ad: fdiv qword ptr [eax + eax]; add esp, 0x10; pop ebx; pop esi; ret; 
0x0005724c: fdiv qword ptr [eax + eax]; pop ebx; ret; 
0x0008893d: fdiv qword ptr [edx]; cld; dec dword ptr [ecx + 0x57e82404]; ret 0xfff9; 
0x0008890e: fdiv qword ptr [edx]; cld; dec dword ptr [ecx - 0x7917dbfc]; ret 0xfff9; 
0x0000b788: fdiv st(0); add eax, dword ptr [eax]; ret 1; 
0x000e7899: fdiv st(3); inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000353ba: fdiv st(6), st(0); inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00035349: fdiv st(6), st(0); inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0007ca7c: fdivp st(7); dec dword ptr [ebx - 0x7c8fdbac]; ret 0x8901; 
0x0005c84f: fdivr dword ptr [ebx - 0x40610]; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0005c7c5: fdivr dword ptr [ebx - 0x40610]; pop ebx; ret; 
0x0012465c: fdivr qword ptr [edi + 2]; add byte ptr [eax], ah; ret; 
0x00124d78: fdivr qword ptr [edi - 0x4f9b0003]; add al, byte ptr [eax]; pushfd; ret; 
0x000565f0: fdivr st(4); dec dword ptr [ecx + 0x709083]; add byte ptr [ebp - 0x76368b40], al; ret 0xf089; 
0x000d8f73: fdivrp st(4); dec dword ptr [ecx + 0x18c483f0]; pop ebx; pop esi; ret; 
0x0005c00c: fiadd dword ptr [ebx + 0x5d5b0cc4]; ret; 
0x00076681: fiadd dword ptr [ecx]; add byte ptr [eax], al; int 0x80; ret; 
0x0012da8c: fiadd dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000041dc: fiadd dword ptr [edi]; add byte ptr [eax], al; ret; 
0x0013efed: fiadd word ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0008e3a2: fidivr dword ptr [ecx - 7]; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000f8452: fidivr dword ptr [ecx]; ret 0xf372; 
0x000c2c36: fidivr word ptr [eax + 1]; pop esi; ret; 
0x000612e6: fild dword ptr [ebp + 0xc]; fisubr dword ptr [ebp + 8]; leave; ret; 
0x0009c29d: fild qword ptr [esi - 0x3b7c0008]; or al, 0x5b; ret; 
0x0005d02a: fild qword ptr [esp + 4]; fstp dword ptr [esp + 4]; fld dword ptr [esp + 4]; ret; 
0x0005d00e: fild qword ptr [esp + 4]; ret; 
0x00076561: fild word ptr [ecx]; add byte ptr [eax], al; int 0x80; ret; 
0x000122cc: fild word ptr [edx]; add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret; 
0x000e9fad: fimul dword ptr [ebp + 0x5e5b0146]; pop edi; ret; 
0x0012cdb9: fimul dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0006250c: fimul word ptr [ecx - 0x7cf3db8c]; rol byte ptr [ecx], 0x83; ret 0x3b04; 
0x00129a71: fimul word ptr [edx]; push cs; adc al, 0x41; ret; 
0x0004e051: fistp dword ptr [esp + 4]; mov eax, dword ptr [esp + 4]; or eax, 0x80000000; ret; 
0x0004e032: fistp dword ptr [esp + 4]; mov eax, dword ptr [esp + 4]; ret; 
0x000565ea: fisttp dword ptr [ecx - 0x4217dbfc]; fdivr st(4); dec dword ptr [ecx + 0x709083]; add byte ptr [ebp - 0x76368b40], al; ret 0xf089; 
0x0013fdfd: fisttp dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x00064918: fisttp qword ptr [edi]; xchg eax, ebp; ret 0xb60f; 
0x0012e075: fisttp qword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0012c0df: fisttp qword ptr [edx]; push cs; or al, 0x41; ret; 
0x000ee27d: fisttp word ptr [eax - 0x3b7c000d]; adc byte ptr [ebx + 0x5e], bl; ret; 
0x00062ba8: fisttp word ptr [ecx - 0x7cff728c]; ret 0x8301; 
0x00129465: fisttp word ptr [edx]; push cs; adc al, 0x41; ret; 
0x000612e9: fisubr dword ptr [ebp + 8]; leave; ret; 
0x0005c7be: fld dword ptr [ebp + 0x5b0278c9]; ret; 
0x00099dfe: fld dword ptr [esp + 0x18]; add esp, 0x24; pop ebx; ret; 
0x0005cfb7: fld dword ptr [esp + 4]; ret; 
0x0005c917: fld dword ptr [esp]; add esp, 4; ret; 
0x00122f6d: fld qword ptr [ecx]; add byte ptr [eax - 0x40], ch; clc; ljmp ptr [eax + 0x200001dd]; ret 0xfff8; 
0x00122f75: fld qword ptr [ecx]; add byte ptr [eax], ah; ret 0xfff8; 
0x00147ef1: fld qword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0004e070: fld qword ptr [esp + 4]; fistp dword ptr [esp + 4]; mov eax, dword ptr [esp + 4]; ret; 
0x0005cf40: fld qword ptr [esp + 4]; movsd qword ptr [esp + 4], xmm0; fadd qword ptr [esp + 4]; ret; 
0x0004e6d0: fld qword ptr [esp + 4]; fabs; ret; 
0x0005cff0: fld qword ptr [esp + 4]; ret; 
0x00061073: fld qword ptr [esp + 8]; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000611a6: fld qword ptr [esp]; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0005c93b: fld qword ptr [esp]; leave; ret; 
0x00099d45: fld xword ptr [esp + 0x10]; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00044a5b: fldcw word ptr [esi - 0x77]; ret 0xf231; 
0x0004e64f: fldcw word ptr [esp - 4]; ret; 
0x0004e5d2: fldcw word ptr [esp]; add esp, 4; ret; 
0x0004e61e: fldenv dword ptr [esp]; add esp, 0x1c; ret; 
0x00054739: fmul dword ptr [ebx - 0x74ebdb8c]; inc esi; or al, 0x89; ret 0xce80; 
0x000a7917: fmul dword ptr [ecx]; ret 0xc283; 
0x0012c06d: fmul dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x000e0740: fmul qword ptr [eax - 0xc]; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x001452af: fmul qword ptr [edx]; add dh, byte ptr [edx + 0x41140e0a]; ret; 
0x0013d7c4: fmul qword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0012afd1: fmul qword ptr [edx]; ret; 
0x0004e6a0: fnstcw word ptr [esp - 4]; mov eax, dword ptr [esp - 4]; and eax, 0xc00; ret; 
0x0004e693: fnstsw dword ptr [esp]; mov eax, dword ptr [esp]; and eax, 0x3f; add esp, 4; ret; 
0x000655d1: fst qword ptr [ebx - 0x7d]; in al, dx; or al, 0xe8; sbb eax, 0x81000a61; ret; 
0x0005d02e: fstp dword ptr [esp + 4]; fld dword ptr [esp + 4]; ret; 
0x0005cb65: fstp qword ptr [edx + 8]; mov eax, edx; mov ebx, dword ptr [ebp - 4]; leave; ret 4; 
0x00061018: fstp st(1); fstp st(1); mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0006101a: fstp st(1); mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0004e08c: fstp xword ptr [esp]; movsx eax, byte ptr [esp + 9]; shr eax, 0x1f; leave; ret; 
0x001496d7: fsub dword ptr [edx]; add bh, byte ptr [eax + 0x41140e0a]; ret; 
0x00099d80: fsub qword ptr [ebp + 0x6cdbfff8]; and al, 0x10; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000f82af: fxch st(0), st(0); inc dword ptr [ebp - 0x14298a40]; ret; 
0x000b6456: idiv bh; add esp, 0x10; pop ebx; pop esi; ret; 
0x000b65d3: idiv bh; add esp, 0x10; pop ebx; ret; 
0x000c6555: idiv bh; add esp, 0x18; pop ebx; ret; 
0x000c5c4f: idiv bh; add esp, 0x1c; pop ebx; pop esi; ret; 
0x000b919e: idiv bh; add esp, 0x1c; pop ebx; ret; 
0x000b8f35: idiv bh; add esp, 0x24; pop ebx; ret; 
0x000bb077: idiv bh; add esp, 0x28; pop ebx; ret; 
0x000bca67: idiv bh; add esp, 0x2c; pop ebx; ret; 
0x000b9033: idiv bh; add esp, 0xc; pop ebx; ret; 
0x000bb2b2: idiv bh; add esp, 4; pop ebx; pop esi; ret; 
0x000b5ecf: idiv bh; add esp, 4; pop ebx; ret; 
0x000c5438: idiv bh; add esp, 8; pop ebx; pop esi; ret; 
0x000b8cda: idiv bh; add esp, 8; pop ebx; ret; 
0x000b907c: idiv bh; pop ebx; ret; 
0x00085453: idiv bh; push dword ptr [ecx]; rol byte ptr [ebx - 0x6bf0fe08], cl; ret 0x1689; 
0x0013c622: idiv bh; ret; 
0x0007fae5: idiv dword ptr [esp + 8]; ret; 
0x00047da9: idiv ebp; dec dword ptr [ebx + 0x10c2454]; ret 0x542b; 
0x000a35ae: idiv edi; add esp, 0x10; pop ebx; pop esi; ret; 
0x000b1eb6: idiv edi; add esp, 0x10; pop ebx; ret; 
0x000b21cc: idiv edi; add esp, 0x14; pop ebx; ret; 
0x000b264b: idiv edi; add esp, 0x18; pop ebx; ret; 
0x000a3fe6: idiv edi; add esp, 0xc; pop ebx; ret; 
0x000a8c29: idiv edi; add esp, 4; pop ebx; pop esi; ret; 
0x000a9ab1: idiv edi; add esp, 4; pop ebx; ret; 
0x000b1f97: idiv edi; add esp, 8; pop ebx; ret; 
0x000b4607: idiv edi; dec dword ptr [edi]; test dword ptr [esi + edi*8 - 1], ecx; push esi; ret 0xf01; 
0x00063602: idiv edi; inc dword ptr [ebx + 0x5f5e10c4]; pop ebp; ret; 
0x0012262a: idiv edi; inc esp; popfd; add dword ptr [eax], eax; ret 0xf75c; 
0x0013ed56: idiv edi; ret; 
0x000f9749: imul bl; adc al, 0x83; ret 0x8501; 
0x000f97b1: imul bl; sbb byte ptr [ebp - 0x7cf98b2e], al; ret 0x8304; 
0x000be3b2: imul cl; ret 0xfffe; 
0x00098793: imul eax, dword ptr [eax], 0; add byte ptr [ecx], ch; ret 0xd285; 
0x000e3dcb: imul eax, dword ptr [eax], 0x938d0000; hlt; mov al, byte ptr [0x1489fffc]; and al, 0xe8; ret; 
0x0013f89a: imul eax, dword ptr [ecx], 0x41140e0a; ret; 
0x0012b3b1: imul eax, dword ptr [ecx], 0xa; push cs; adc al, 0x41; ret; 
0x000f4daf: imul eax, dword ptr [ecx], 0xd2c38100; ret 5; 
0x0012e949: imul eax, dword ptr [edx], 0xa; ret; 
0x000e4da9: imul eax, dword ptr [edx], 0xd8c38100; ret 6; 
0x00044b2f: imul ecx, dword ptr [eax + eax], -0x7f; ret; 
0x0002e0e1: imul ecx, dword ptr [ebp - 0x3b7c0001], 0x10; pop ebx; pop esi; ret; 
0x001097da: imul ecx, dword ptr [edi], 0xf60c56b7; ret 0x7408; 
0x00064dc2: imul ecx, dword ptr [edx], 0xbfc38100; ret 0xe; 
0x00125b18: imul ecx, dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x0012721e: imul ecx, dword ptr [edx], 0xe; or al, 0x41; ret; 
0x0012b29f: imul ecx, dword ptr [esi], 0x10; inc ecx; ret; 
0x001304e2: imul ecx, dword ptr [esi], 0xc; inc ecx; ret; 
0x00139b63: imul ecx, dword ptr [esi], 8; inc ecx; ret; 
0x000e8671: imul edi, dword ptr [edx - 0x3b7c000d], 0x14; pop ebx; ret; 
0x00121ab1: imul esi, ebp, -1; cwde; dec eax; add dword ptr [eax], eax; ret 0xf56b; 
0x000ede19: imul esi, ebx, -1; add esp, 0xc; pop ebx; ret; 
0x000bf9b1: imul esi, esi, -1; add esp, 8; pop ebx; ret; 
0x000e2720: in al, -0x77; ret 0x7c8b; 
0x000b656d: in al, -0xa; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000c916c: in al, -0xb; inc dword ptr [ebx + 0x5f5b0cc4]; ret; 
0x0007c39f: in al, -1; dec dword ptr [ebx - 0x7c8fdbac]; ret 0x8901; 
0x00108900: in al, -4; dec dword ptr [ecx - 0x6a17dbfc]; ret 0xfff1; 
0x000612e4: in al, -8; fild dword ptr [ebp + 0xc]; fisubr dword ptr [ebp + 8]; leave; ret; 
0x00137e1c: in al, 0x2b; add dword ptr [eax], eax; ret 0xf54e; 
0x000f3e2b: in al, 0x5e; lea esi, dword ptr [esi]; ret; 
0x0005b6d0: in al, 0x7e; add byte ptr [eax], al; add esp, 4; pop ebx; ret; 
0x0013693e: in al, 0xa; push cs; adc al, 0x41; ret; 
0x00001f48: in al, 0xd; add byte ptr [eax], al; ret 0xd; 
0x00118e58: in al, 0xe; out dx, eax; mov esi, 0xbf597fc7; ret 0xa88f; 
0x0013f897: in al, 1; add ebp, dword ptr [ecx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014712b: in al, 3; add ebx, dword ptr [ecx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012d7b3: in al, 9; add ecx, dword ptr [ebp + 0x140e0a03]; inc ecx; ret; 
0x000d8ddc: in al, dx; adc al, 0xe8; adc eax, 0x81000329; ret; 
0x000bf4ec: in al, dx; adc al, 0xe8; add eax, 0x810004c2; ret; 
0x000b23cc: in al, dx; adc al, 0xe8; and eax, 0x81000593; ret; 
0x000e74b4: in al, dx; adc al, 0xe8; cmp eax, 0x81000242; ret; 
0x0008b251: in al, dx; adc al, 0xe8; mov al, byte ptr [0x81000804]; ret; 
0x000dad4f: in al, dx; adc al, 0xe8; mov byte ptr [0x81000309], al; ret; 
0x0008e34f: in al, dx; adc al, 0xe8; mov byte ptr [0x810007d3], al; ret; 
0x000e2f39: in al, dx; adc al, 0xe8; mov eax, 0x81000287; ret; 
0x0002d150: in al, dx; adc al, 0xe8; mov eax, dword ptr [0x81000de5]; ret; 
0x00084034: in al, dx; adc al, 0xe8; mov ebp, 0x81000876; ret; 
0x00065336: in al, dx; adc al, 0xe8; mov ebx, 0x81000a63; ret; 
0x00098532: in al, dx; adc al, 0xe8; mov edi, 0x81000731; ret; 
0x00074632: in al, dx; adc al, 0xe8; mov edi, 0x81000970; ret; 
0x000d0837: in al, dx; adc al, 0xe8; mov edx, 0x810003ae; ret; 
0x000bae37: in al, dx; adc al, 0xe8; mov edx, 0x81000508; ret; 
0x000a3835: in al, dx; adc al, 0xe8; mov esp, 0x8100067e; ret; 
0x00075ac4: in al, dx; adc al, 0xe8; sub eax, 0x8100095c; ret; 
0x000dab2e: in al, dx; adc al, 0xe8; ret; 
0x00034edc: in al, dx; adc al, ch; adc eax, 0x81000d68; ret; 
0x001068ec: in al, dx; adc al, ch; add eax, 0x8100004e; ret; 
0x000e57ec: in al, dx; adc al, ch; add eax, 0x8100025f; ret; 
0x000ba3ec: in al, dx; adc al, ch; add eax, 0x81000513; ret; 
0x000427ec: in al, dx; adc al, ch; add eax, 0x81000c8f; ret; 
0x000ee1cc: in al, dx; adc al, ch; and eax, 0x810001d5; ret; 
0x0007e2cc: in al, dx; adc al, ch; and eax, 0x810008d4; ret; 
0x0003ea09: in al, dx; adc al, ch; call 0x8103f6dd; ret; 
0x00056609: in al, dx; adc al, ch; call 0x81057161; ret; 
0x00034ab4: in al, dx; adc al, ch; cmp eax, 0x81000d6c; ret; 
0x000e4da5: in al, dx; adc al, ch; dec esp; imul eax, dword ptr [edx], 0xd8c38100; ret 6; 
0x0002f751: in al, dx; adc al, ch; mov al, byte ptr [0x81000dbf]; ret; 
0x000d694f: in al, dx; adc al, ch; mov byte ptr [0x8100034d], al; ret; 
0x000bd44f: in al, dx; adc al, ch; mov byte ptr [0x810004e2], al; ret; 
0x0003644f: in al, dx; adc al, ch; mov byte ptr [0x81000d52], al; ret; 
0x000e4e39: in al, dx; adc al, ch; mov eax, 0x81000268; ret; 
0x000bd939: in al, dx; adc al, ch; mov eax, 0x810004dd; ret; 
0x0008fa39: in al, dx; adc al, ch; mov eax, 0x810007bc; ret; 
0x00060139: in al, dx; adc al, ch; mov eax, 0x81000ab5; ret; 
0x000e4b50: in al, dx; adc al, ch; mov eax, dword ptr [0x8100026b]; ret; 
0x00077350: in al, dx; adc al, ch; mov eax, dword ptr [0x81000943]; ret; 
0x000cf934: in al, dx; adc al, ch; mov ebp, 0x810003bd; ret; 
0x000aae34: in al, dx; adc al, ch; mov ebp, 0x81000608; ret; 
0x00081838: in al, dx; adc al, ch; mov ecx, 0x8100089e; ret; 
0x000f4e32: in al, dx; adc al, ch; mov edi, 0x81000168; ret; 
0x0004ac32: in al, dx; adc al, ch; mov edi, 0x81000c0a; ret; 
0x000d8337: in al, dx; adc al, ch; mov edx, 0x81000333; ret; 
0x00031533: in al, dx; adc al, ch; mov esi, 0x81000da1; ret; 
0x0002c033: in al, dx; adc al, ch; mov esi, 0x81000df6; ret; 
0x000b1c35: in al, dx; adc al, ch; mov esp, 0x8100059a; ret; 
0x000a4235: in al, dx; adc al, ch; mov esp, 0x81000674; ret; 
0x00036535: in al, dx; adc al, ch; mov esp, 0x81000d51; ret; 
0x0002c735: in al, dx; adc al, ch; mov esp, 0x81000def; ret; 
0x00065ee4: in al, dx; adc al, ch; or eax, 0x81000a58; ret; 
0x00056de4: in al, dx; adc al, ch; or eax, 0x81000b49; ret; 
0x000fb789: in al, dx; adc al, ch; push 0x810000ff; ret; 
0x0003c09e: in al, dx; adc al, ch; push ebx; test byte ptr [eax + eax], 0x81; ret; 
0x000b632f: in al, dx; adc al, ch; ret 0x553; 
0x0009592f: in al, dx; adc al, ch; ret 0x75d; 
0x000e4ed4: in al, dx; adc al, ch; sbb eax, 0x81000268; ret; 
0x0008b0d4: in al, dx; adc al, ch; sbb eax, 0x81000806; ret; 
0x00082ad4: in al, dx; adc al, ch; sbb eax, 0x8100088c; ret; 
0x00077fd4: in al, dx; adc al, ch; sbb eax, 0x81000937; ret; 
0x0004cfd4: in al, dx; adc al, ch; sbb eax, 0x81000be7; ret; 
0x000ea5c4: in al, dx; adc al, ch; sub eax, 0x81000211; ret; 
0x000d21c4: in al, dx; adc al, ch; sub eax, 0x81000395; ret; 
0x000c96c4: in al, dx; adc al, ch; sub eax, 0x81000420; ret; 
0x000bf6c4: in al, dx; adc al, ch; sub eax, 0x810004c0; ret; 
0x00082dc4: in al, dx; adc al, ch; sub eax, 0x81000889; ret; 
0x0005d4c4: in al, dx; adc al, ch; sub eax, 0x81000ae2; ret; 
0x000597c4: in al, dx; adc al, ch; sub eax, 0x81000b1f; ret; 
0x0003eb48: in al, dx; adc al, ch; test eax, 0x81000ccb; ret; 
0x0003505f: in al, dx; adc al, ch; xchg eax, edx; or ax, 0x8100; ret; 
0x000a2fbc: in al, dx; adc al, ch; xor eax, 0x81000687; ret; 
0x0003f4f9: in al, dx; adc al, ch; clc; ror dword ptr [eax + eax], -0x7f; ret; 
0x0003522e: in al, dx; adc al, ch; ret; 
0x0003f3f6: in al, dx; adc al, ch; sti; ret 0xc; 
0x00012584: in al, dx; adc eax, 0xf9700000; add al, byte ptr [eax]; ret 0; 
0x000d6bec: in al, dx; add al, 0xe8; add eax, 0x8100034b; ret; 
0x000a2ecc: in al, dx; add al, 0xe8; and eax, 0x81000688; ret; 
0x000d6d09: in al, dx; add al, 0xe8; call 0x810d705a; ret; 
0x0008b14e: in al, dx; add al, 0xe8; mov dword ptr [0x81000805], eax; ret; 
0x0009ba39: in al, dx; add al, 0xe8; mov eax, 0x810006fc; ret; 
0x000c7c50: in al, dx; add al, 0xe8; mov eax, dword ptr [0x8100043a]; ret; 
0x000c7734: in al, dx; add al, 0xe8; mov ebp, 0x8100043f; ret; 
0x000a8c34: in al, dx; add al, 0xe8; mov ebp, 0x8100062a; ret; 
0x0007fc34: in al, dx; add al, 0xe8; mov ebp, 0x810008ba; ret; 
0x000ebb36: in al, dx; add al, 0xe8; mov ebx, 0x810001fb; ret; 
0x00034836: in al, dx; add al, 0xe8; mov ebx, 0x81000d6e; ret; 
0x00096232: in al, dx; add al, 0xe8; mov edi, 0x81000754; ret; 
0x000c3733: in al, dx; add al, 0xe8; mov esi, 0x8100047f; ret; 
0x000a9a35: in al, dx; add al, 0xe8; mov esp, 0x8100061c; ret; 
0x00079835: in al, dx; add al, 0xe8; mov esp, 0x8100091e; ret; 
0x00101de4: in al, dx; add al, 0xe8; or eax, 0x81000099; ret; 
0x00036ee4: in al, dx; add al, 0xe8; or eax, 0x81000d48; ret; 
0x00036e89: in al, dx; add al, 0xe8; push 0x81000d48; ret; 
0x0008a5d4: in al, dx; add al, 0xe8; sbb eax, 0x81000811; ret; 
0x000962c4: in al, dx; add al, 0xe8; sub eax, 0x81000754; ret; 
0x0008bdc4: in al, dx; add al, 0xe8; sub eax, 0x810007f9; ret; 
0x000e07bc: in al, dx; add al, 0xe8; xor eax, 0x810002af; ret; 
0x0003732e: in al, dx; add al, 0xe8; ret; 
0x000bbd5d: in al, dx; add esp, 0x10; pop ebx; pop esi; ret; 
0x000969dc: in al, dx; and al, 0xe8; adc eax, 0x8100074d; ret; 
0x000e814f: in al, dx; and al, 0xe8; mov byte ptr [0x81000235], al; ret; 
0x0004374f: in al, dx; and al, 0xe8; mov byte ptr [0x81000c7f], al; ret; 
0x000a62e4: in al, dx; and al, 0xe8; or eax, 0x81000654; ret; 
0x000428e4: in al, dx; and al, 0xe8; or eax, 0x81000c8e; ret; 
0x000c339d: in al, dx; and al, 0xe8; push esp; add dword ptr [eax + eax], -0x7f; ret; 
0x0003a12f: in al, dx; and al, 0xe8; ret 0xd15; 
0x0009dec4: in al, dx; and al, 0xe8; sub eax, 0x810006d8; ret; 
0x000862c4: in al, dx; and al, 0xe8; sub eax, 0x81000854; ret; 
0x00050d48: in al, dx; and al, 0xe8; test eax, 0x81000ba9; ret; 
0x000abb09: in al, dx; and al, ch; call 0x810ac10c; ret; 
0x0008de50: in al, dx; and al, ch; mov eax, dword ptr [0x810007d8]; ret; 
0x00082e50: in al, dx; and al, ch; mov eax, dword ptr [0x81000888]; ret; 
0x00103c37: in al, dx; and al, ch; mov edx, 0x8100007a; ret; 
0x00050b37: in al, dx; and al, ch; mov edx, 0x81000bab; ret; 
0x00064fc4: in al, dx; and al, ch; sub eax, 0x81000a67; ret; 
0x000481c4: in al, dx; and al, ch; sub eax, 0x81000c35; ret; 
0x000657bc: in al, dx; and al, ch; xor eax, 0x81000a5f; ret; 
0x000bd5dc: in al, dx; cmp al, 0xe8; adc eax, 0x810004e1; ret; 
0x00065234: in al, dx; cmp al, 0xe8; mov ebp, 0x81000a64; ret; 
0x001029b4: in al, dx; cmp al, ch; cmp eax, 0x8100008d; ret; 
0x00083938: in al, dx; cmp al, ch; mov ecx, 0x8100087d; ret; 
0x000bbfb0: in al, dx; cmp byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x000f412b: in al, dx; inc esp; adc dword ptr [eax], eax; add al, ch; ret; 
0x000e8745: in al, dx; mov eax, 1; pop esi; ret; 
0x000ebcb4: in al, dx; or al, 0xe8; cmp eax, 0x810001fa; ret; 
0x00059b4f: in al, dx; or al, 0xe8; mov byte ptr [0x81000b1b], al; ret; 
0x000fd54e: in al, dx; or al, 0xe8; mov dword ptr [0x810000e1], eax; ret; 
0x0002a14e: in al, dx; or al, 0xe8; mov dword ptr [0x81000e15], eax; ret; 
0x0009c334: in al, dx; or al, 0xe8; mov ebp, 0x810006f3; ret; 
0x000ea636: in al, dx; or al, 0xe8; mov ebx, 0x81000210; ret; 
0x00034e36: in al, dx; or al, 0xe8; mov ebx, 0x81000d68; ret; 
0x00109032: in al, dx; or al, 0xe8; mov edi, 0x81000026; ret; 
0x000d6a32: in al, dx; or al, 0xe8; mov edi, 0x8100034c; ret; 
0x0007d232: in al, dx; or al, 0xe8; mov edi, 0x810008e4; ret; 
0x00029d32: in al, dx; or al, 0xe8; mov edi, 0x81000e19; ret; 
0x000c9137: in al, dx; or al, 0xe8; mov edx, 0x81000425; ret; 
0x000a9433: in al, dx; or al, 0xe8; mov esi, 0x81000622; ret; 
0x000ca289: in al, dx; or al, 0xe8; push 0x81000414; ret; 
0x000655d4: in al, dx; or al, 0xe8; sbb eax, 0x81000a61; ret; 
0x000c1dc4: in al, dx; or al, 0xe8; sub eax, 0x81000499; ret; 
0x0009c4bc: in al, dx; or al, 0xe8; xor eax, 0x810006f2; ret; 
0x000c572e: in al, dx; or al, 0xe8; ret; 
0x0005c5ec: in al, dx; or al, ch; add eax, 0x81000af1; ret; 
0x00044fec: in al, dx; or al, ch; add eax, 0x81000c67; ret; 
0x000f4dab: in al, dx; or al, ch; inc esi; imul eax, dword ptr [ecx], 0xd2c38100; ret 5; 
0x0009c94f: in al, dx; or al, ch; mov byte ptr [0x810006ed], al; ret; 
0x000eae4e: in al, dx; or al, ch; mov dword ptr [0x81000208], eax; ret; 
0x0007624e: in al, dx; or al, ch; mov dword ptr [0x81000954], eax; ret; 
0x0005d54e: in al, dx; or al, ch; mov dword ptr [0x81000ae1], eax; ret; 
0x000db839: in al, dx; or al, ch; mov eax, 0x810002fe; ret; 
0x0010a636: in al, dx; or al, ch; mov ebx, 0x81000010; ret; 
0x000bb636: in al, dx; or al, ch; mov ebx, 0x81000500; ret; 
0x0005d632: in al, dx; or al, ch; mov edi, 0x81000ae0; ret; 
0x000eb835: in al, dx; or al, ch; mov esp, 0x810001fe; ret; 
0x000ebee4: in al, dx; or al, ch; or eax, 0x810001f8; ret; 
0x000ecb89: in al, dx; or al, ch; push 0x810001eb; ret; 
0x0004832f: in al, dx; or al, ch; ret 0xc33; 
0x00037d2f: in al, dx; or al, ch; ret 0xd39; 
0x0012fa85: in al, dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000b9a90: in al, dx; ret 0xfff6; 
0x0005ac70: in al, dx; ret 0xfffc; 
0x00057ccc: in al, dx; sbb al, 0xe8; and eax, 0x81000b3a; ret; 
0x00072109: in al, dx; sbb al, 0xe8; call 0x81072aa6; ret; 
0x0007e109: in al, dx; sbb al, 0xe8; call 0x8107e9e6; ret; 
0x00083709: in al, dx; sbb al, 0xe8; call 0x81083f90; ret; 
0x00087f09: in al, dx; sbb al, 0xe8; call 0x81088748; ret; 
0x0005ecb4: in al, dx; sbb al, 0xe8; cmp eax, 0x81000aca; ret; 
0x000d0b39: in al, dx; sbb al, 0xe8; mov eax, 0x810003ab; ret; 
0x00095436: in al, dx; sbb al, 0xe8; mov ebx, 0x81000762; ret; 
0x00068136: in al, dx; sbb al, 0xe8; mov ebx, 0x81000a35; ret; 
0x00094637: in al, dx; sbb al, 0xe8; mov edx, 0x81000770; ret; 
0x000faa35: in al, dx; sbb al, 0xe8; mov esp, 0x8100010c; ret; 
0x00077a89: in al, dx; sbb al, 0xe8; push 0x8100093c; ret; 
0x0008dd2f: in al, dx; sbb al, 0xe8; ret 0x7d9; 
0x0003f661: in al, dx; sbb al, 0xe8; nop; ror byte ptr [eax + eax], 0x81; ret; 
0x0006b3b4: in al, dx; sbb al, ch; cmp eax, 0x81000a03; ret; 
0x000671b4: in al, dx; sbb al, ch; cmp eax, 0x81000a45; ret; 
0x00032639: in al, dx; sbb al, ch; mov eax, 0x81000d90; ret; 
0x000f1f36: in al, dx; sbb al, ch; mov ebx, 0x81000197; ret; 
0x00065036: in al, dx; sbb al, ch; mov ebx, 0x81000a66; ret; 
0x00053533: in al, dx; sbb al, ch; mov esi, 0x81000b81; ret; 
0x000e9d35: in al, dx; sbb al, ch; mov esp, 0x81000219; ret; 
0x00059e35: in al, dx; sbb al, ch; mov esp, 0x81000b18; ret; 
0x00054c35: in al, dx; sbb al, ch; mov esp, 0x81000b6a; ret; 
0x00046435: in al, dx; sbb al, ch; mov esp, 0x81000c52; ret; 
0x000e61e4: in al, dx; sbb al, ch; or eax, 0x81000255; ret; 
0x00044ba0: in al, dx; sbb al, ch; push ecx; imul ecx, dword ptr [eax + eax], -0x7f; ret; 
0x000f4c2e: in al, dx; sbb al, ch; ret; 
0x00053931: in al, dx; sbb byte ptr [eax + eax], al; add al, ch; mov ebp, 0x81000b7d; ret; 
0x0006e136: in al, dx; sbb byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00060234: in al, dx; sub al, 0xe8; mov ebp, 0x81000ab4; ret; 
0x000c2f35: in al, dx; sub al, 0xe8; mov esp, 0x81000487; ret; 
0x0008a1d4: in al, dx; sub al, 0xe8; sbb eax, 0x81000815; ret; 
0x00090abc: in al, dx; sub al, 0xe8; xor eax, 0x810007ac; ret; 
0x000842bc: in al, dx; sub al, 0xe8; xor eax, 0x81000874; ret; 
0x000dae35: in al, dx; sub al, ch; mov esp, 0x81000308; ret; 
0x00042135: in al, dx; sub al, ch; mov esp, 0x81000c95; ret; 
0x000c1e2f: in al, dx; sub al, ch; ret 0x498; 
0x000fcec4: in al, dx; sub al, ch; sub eax, 0x810000e8; ret; 
0x000f5424: in al, dx; sub edx, 1; mov dword ptr [eax], edx; ret; 
0x000283cc: in al, dx; xor al, 0xe8; and eax, 0x81000e33; ret; 
0x000c1437: in al, dx; xor al, 0xe8; mov edx, 0x810004a2; ret; 
0x000281d4: in al, dx; xor al, 0xe8; sbb eax, 0x81000e35; ret; 
0x00089509: in al, dx; xor al, ch; call 0x81089d32; ret; 
0x0010042f: in al, dx; xor al, ch; ret 0xb2; 
0x0008e0c4: in al, dx; xor al, ch; sub eax, 0x810007d6; ret; 
0x000d422e: in al, dx; xor al, ch; ret; 
0x00037a44: in al, dx; ret; 
0x0010b712: in eax, -0x18; pushfd; ret; 
0x000e8814: in eax, -0xd; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x00106ffb: in eax, -4; dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; ret; 
0x0008920d: in eax, -7; inc dword ptr [ebp - 0x76f68b40]; ret 0xf089; 
0x00126459: in eax, 0xa; push cs; adc al, 0x41; ret; 
0x0004e192: in eax, 0xf; mov esi, 0xe8c10f45; pop ds; pop ebp; ret; 
0x0014b56d: in eax, dx; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x000e4dd3: in eax, dx; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00118eb2: in eax, dx; inc edi; leave; ret 0x3b81; 
0x000e48ef: in eax, dx; ljmp 0x5b18:0xc483fff3; ret; 
0x000e8835: in eax, dx; mov eax, 1; ret; 
0x00138595: in eax, dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000d1189: inc byte ptr [ebx + 0x5e5b04c4]; ret; 
0x00077790: inc byte ptr [ebx - 0x3d7cfe40]; add dword ptr [ebx - 0x188a0002], eax; pop esi; pop edi; ret; 
0x00000a7c: inc byte ptr [ebx]; add byte ptr [eax], al; ret; 
0x000e88e0: inc dword ptr [0x1c0]; ret; 
0x0012463b: inc dword ptr [eax + 0x7200027f]; ret 0xfffc; 
0x00121823: inc dword ptr [eax - 0x23fffed3]; sal esp, -1; mov al, byte ptr [0x4e00012d]; ret 0xfff4; 
0x0011fafb: inc dword ptr [eax - 0x3bffff9a]; ret; 
0x0011faab: inc dword ptr [eax - 0x48ffff9b]; ret 0xfff0; 
0x000d0b17: inc dword ptr [eax]; add byte ptr [eax], al; ret; 
0x00051df6: inc dword ptr [eax]; add byte ptr [ecx], cl; ret 0x5189; 
0x0004748c: inc dword ptr [eax]; or edx, ecx; bswap edx; mov dword ptr [eax], edx; ret 4; 
0x000474d5: inc dword ptr [eax]; ret; 
0x00057a26: inc dword ptr [ebp + 0x24548bc0]; adc byte ptr [edi], cl; test dword ptr [esi - 0x16000006], esp; mov eax, dword ptr [0x89fffff9]; ret 0x9ae9; 
0x00057256: inc dword ptr [ebp + 0x31e675c0]; rcr byte ptr [ebx + 0x66], 0x90; ret; 
0x0007c399: inc dword ptr [ebp + 0x41850fd2]; in al, -1; dec dword ptr [ebx - 0x7c8fdbac]; ret 0x8901; 
0x000f82b2: inc dword ptr [ebp - 0x14298a40]; ret; 
0x000f8134: inc dword ptr [ebp - 0x164a8a40]; ret; 
0x00037dd3: inc dword ptr [ebp - 0x17198a40]; ret; 
0x00074ea3: inc dword ptr [ebp - 0x172a860a]; ret; 
0x00042bf3: inc dword ptr [ebp - 0x17a78b40]; ret; 
0x00115a6b: inc dword ptr [ebp - 0x3c]; hlt; inc dword ptr [eax]; add byte ptr [eax], al; ret; 
0x000c2c32: inc dword ptr [ebp - 0x47218a40]; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; ret; 
0x00057245: inc dword ptr [ebp - 0x72ee8b40]; sbb esp, 0x74; add byte ptr [eax], al; pop ebx; ret; 
0x000b6aa3: inc dword ptr [ebp - 0x76548b40]; ret 0x748b; 
0x00036ae2: inc dword ptr [ebp - 0x76ab8b37]; ret 0x9eb; 
0x0008920f: inc dword ptr [ebp - 0x76f68b40]; ret 0xf089; 
0x00027b14: inc dword ptr [ebx + 0x5b5f08c4]; ret; 
0x000a2eee: inc dword ptr [ebx + 0x5d5b04c4]; ret; 
0x000a2ec0: inc dword ptr [ebx + 0x5d5b08c4]; ret; 
0x00034604: inc dword ptr [ebx + 0x5d5b0cc4]; ret; 
0x000fd9b9: inc dword ptr [ebx + 0x5d5b14c4]; ret; 
0x0006292e: inc dword ptr [ebx + 0x5e5b04c4]; pop edi; ret; 
0x00037367: inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000ecc99: inc dword ptr [ebx + 0x5e5b08c4]; pop edi; ret; 
0x00050c93: inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x000bee95: inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; ret; 
0x0005aa24: inc dword ptr [ebx + 0x5e5b0cc4]; ret; 
0x0002c60b: inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00027bc1: inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0002be7f: inc dword ptr [ebx + 0x5e5b14c4]; pop edi; ret; 
0x0002bc70: inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000890fa: inc dword ptr [ebx + 0x5e5b18c4]; pop edi; ret; 
0x00034822: inc dword ptr [ebx + 0x5e5b18c4]; ret; 
0x0005ed0e: inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; ret; 
0x00052a70: inc dword ptr [ebx + 0x5e5b1cc4]; ret; 
0x000c624d: inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x000480d2: inc dword ptr [ebx + 0x5e5b20c4]; ret; 
0x0008290e: inc dword ptr [ebx + 0x5e5b24c4]; ret; 
0x0004f0af: inc dword ptr [ebx + 0x5e5b28c4]; pop edi; ret; 
0x000db499: inc dword ptr [ebx + 0x5e5b2cc4]; ret; 
0x000284e8: inc dword ptr [ebx + 0x5e5b34c4]; pop edi; ret; 
0x0010a62c: inc dword ptr [ebx + 0x5e5b3cc4]; ret; 
0x00059f74: inc dword ptr [ebx + 0x5e5b50c4]; ret; 
0x000cada1: inc dword ptr [ebx + 0x5e5b68c4]; pop edi; ret; 
0x000ebf10: inc dword ptr [ebx + 0x5f5b08c4]; ret; 
0x000c916e: inc dword ptr [ebx + 0x5f5b0cc4]; ret; 
0x0007fc2a: inc dword ptr [ebx + 0x5f5b10c4]; ret; 
0x000f27d8: inc dword ptr [ebx + 0x5f5b18c4]; ret; 
0x00063604: inc dword ptr [ebx + 0x5f5e10c4]; pop ebp; ret; 
0x00051730: inc dword ptr [ebx + 0x5f5e20c4]; pop ebp; ret; 
0x00036f8a: inc dword ptr [ebx + 0x77401f8]; xor eax, eax; add esp, 0x14; pop ebx; ret; 
0x00089370: inc dword ptr [ebx + 0x77401f8]; xor eax, eax; add esp, 0x28; pop ebx; ret; 
0x000893f0: inc dword ptr [ebx + 0x77401f8]; xor eax, eax; add esp, 0x2c; pop ebx; ret; 
0x000adc70: inc dword ptr [ebx - 0x7af00008]; mov edi, 0xe9fffffd; ret; 
0x000adbaf: inc dword ptr [ebx - 0x7af00008]; ret 0xfffc; 
0x000f8068: inc dword ptr [ebx - 0x7af0e01b]; ret 0xfffd; 
0x000fb047: inc dword ptr [ecx + 0x88c4]; add byte ptr [ebx + 0x5e], bl; ret; 
0x000354d9: inc dword ptr [ecx + 0x8cc4]; add byte ptr [ebx + 0x5e], bl; ret; 
0x000a3d18: inc dword ptr [ecx + 0x9cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000f84c5: inc dword ptr [ecx + ecx*8 + 0x5e5be975]; pop edi; ret; 
0x00124623: inc dword ptr [edi + edi*2 + 2]; add byte ptr [edx], ch; ret 0xfffc; 
0x000c8fda: inc dword ptr [edi + edi*8 + 0x5f5bb175]; pop esi; ret; 
0x00116ce7: inc dword ptr [edi]; ret 0xfff5; 
0x00060b75: inc dword ptr [edx]; ret; 
0x00036ced: inc eax; adc al, 4; mov eax, 1; ret; 
0x0004b39a: inc eax; adc al, dh; loope 0x4b371; ret; 
0x0010940f: inc eax; adc byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x001291b3: inc eax; add ah, byte ptr [esi + 0x41140e0a]; ret; 
0x001092f6: inc eax; add al, 0x83; ret 0x8301; 
0x00136a5b: inc eax; add bh, byte ptr [edx + 0x41140e0a]; ret; 
0x0013638b: inc eax; add bl, al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013e55b: inc eax; add bl, byte ptr [ebx + 0x41140e0a]; ret; 
0x00140bbb: inc eax; add bl, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x0013612b: inc eax; add bl, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0002b088: inc eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448b; 
0x0004cb1a: inc eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xfa83; 
0x000983f2: inc eax; add byte ptr [ebp - 0x3784c7d], cl; dec dword ptr [ecx + 0x4ee82404]; ret; 
0x000683e5: inc eax; add byte ptr [ebp - 0x3784c7d], cl; dec dword ptr [ecx + 0x5be82404]; ret; 
0x00098349: inc eax; add byte ptr [ebp - 0x3784c7d], cl; dec dword ptr [ecx - 0x817dbfc]; ret; 
0x0013bfef: inc eax; add ch, byte ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00129d3b: inc eax; add ch, cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012fd13: inc eax; add cl, al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00134905: inc eax; add cl, byte ptr [edx]; ret; 
0x00136333: inc eax; add cl, dh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00135007: inc eax; add dl, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x000f4a54: inc eax; add dword ptr [eax], eax; add byte ptr [ecx - 0x76e3dbbc], cl; ret 0x73e9; 
0x000e899d: inc eax; add dword ptr [ebp - 0x47f98a40], eax; and dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000dd53c: inc eax; add dword ptr [ecx - 0x7ab7dbbc], ecx; ror byte ptr [edi], 0x84; ret; 
0x0014a723: inc eax; add eax, dword ptr [ebp + 2]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001420bb: inc eax; add ebp, dword ptr [ebp + 2]; push cs; adc al, 0x41; ret; 
0x001293a3: inc eax; add ebx, dword ptr [ebx + 3]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013626f: inc eax; add ebx, dword ptr [ecx + eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00149a97: inc eax; add esi, dword ptr [edx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013d03b: inc eax; add esp, dword ptr [ebx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013c67f: inc eax; add esp, dword ptr [esi + 1]; push cs; adc al, 0x41; ret; 
0x000f27d6: inc eax; inc dword ptr [ebx + 0x5f5b18c4]; ret; 
0x0013f40f: inc eax; jo 0x13f41c; push cs; adc al, 0x41; ret; 
0x0002bb3c: inc eax; mov dword ptr [ecx + eax*4 + 0x3680], 0; xor eax, eax; ret; 
0x0004e4c5: inc eax; mov dword ptr [esp], ecx; ret; 
0x0002bb22: inc eax; mov eax, dword ptr [ecx + eax*4 + 0x367c]; ret; 
0x0002bb02: inc eax; mov edx, dword ptr [esp + 8]; mov dword ptr [ecx + eax*4 + 0x367c], edx; xor eax, eax; ret; 
0x000eac75: inc eax; movzx eax, ax; ret; 
0x0008ea46: inc eax; or al, 0; mov eax, dword ptr [esp + 4]; mov dword ptr [ecx + 0x2220], eax; ret; 
0x000c5378: inc eax; or al, 4; mov eax, 1; ret; 
0x0003e6b2: inc eax; or al, byte ptr [eax]; ret; 
0x000e323f: inc eax; or byte ptr [ebp + 0x390874c0], al; ret 0x850f; 
0x000bd2d5: inc eax; or byte ptr [ebx - 0x76f3dbb4], cl; add dword ptr [eax + 1], edi; ret; 
0x000b6e33: inc eax; or byte ptr [ecx - 0x2c17dbfc], cl; ret 0xfff6; 
0x000f8d91: inc eax; or byte ptr [ecx], bh; sar dword ptr [esi + 9], -0x7d; ret 0x101; 
0x00127b48: inc eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012555b: inc eax; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x000df6ec: inc eax; or dword ptr [ecx], ecx; ret 0x9189; 
0x0003e6ae: inc eax; or eax, dword ptr [eax]; mov byte ptr [eax + 0xa], 0; ret; 
0x000654c0: inc eax; pop ebx; pop esi; pop edi; ret; 
0x000bef0f: inc eax; pop ebx; pop esi; ret; 
0x0002b855: inc eax; pop ebx; ret; 
0x0005b7c9: inc eax; pop esi; pop edi; pop ebp; ret; 
0x0002c562: inc eax; pop esi; pop edi; ret; 
0x00026d8c: inc eax; ret 0xffff; 
0x000fa720: inc eax; sbb byte ptr [ebx - 0x16e7dbb4], cl; ret 0xfffe; 
0x000d711a: inc eax; sub byte ptr [ecx + 0x4ce82404], cl; ret 0xfff4; 
0x000e3784: inc eax; hlt; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00026c8c: inc eax; ret; 
0x00051b59: inc ebp; adc al, 0xeb; ret 0x688b; 
0x000b491c: inc ebp; adc byte ptr [ecx - 0x7cb7dbb4], cl; ret 0x8b04; 
0x000e0b33: inc ebp; adc byte ptr [ecx], al; ret 0xf929; 
0x000e3003: inc ebp; add al, 0x85; ror byte ptr [edi], 0x85; ret 0; 
0x0008638f: inc ebp; add al, 0x89; ret 0xc085; 
0x001497e9: inc ebp; add al, byte ptr [eax]; ret 0xfab4; 
0x00108884: inc ebp; add byte ptr [ecx + 0x42e82404], cl; ret; 
0x00108804: inc ebp; add byte ptr [ecx - 0x3d17dbfc], cl; ret; 
0x000615c9: inc ebp; add byte ptr [ecx], dh; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x0003c6c2: inc ebp; add byte ptr [edi], cl; xchg eax, ebp; ret 0xe84; 
0x0012874e: inc ebp; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x001397f9: inc ebp; add dword ptr [eax], eax; ret; 
0x00135291: inc ebp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0005cb12: inc ebp; and al, 0xd9; ret; 
0x00122870: inc ebp; mov ebp, 0xadf0fff7; add dword ptr [eax], eax; ret; 
0x0005c058: inc ebp; or al, 0x89; ret 0x4489; 
0x000ffa70: inc ebp; or al, 0x89; ret 0xc166; 
0x000b6e30: inc ebp; or al, 0x8b; inc eax; or byte ptr [ecx - 0x2c17dbfc], cl; ret 0xfff6; 
0x000612e7: inc ebp; or al, 0xda; insd dword ptr es:[edi], dx; or cl, cl; ret; 
0x0006a0bf: inc ebp; or al, 9; ret 0x840f; 
0x000f9f38: inc ebp; or bh, byte ptr [ecx]; ret 0xdb7d; 
0x000a32e1: inc ebp; or byte ptr [ecx + 0x34890c55], cl; and al, 0xe8; ret 0xf816; 
0x00126269: inc ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129b11: inc ebp; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00129913: inc ebp; or eax, dword ptr [edx]; ret 0xe0a; 
0x0012e17d: inc ebp; or eax, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x0014bd02: inc ebp; or ebx, dword ptr [ebx + 0xa]; ret; 
0x001299d6: inc ebp; or ecx, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x00147921: inc ebp; or ecx, dword ptr [edx + 0xe]; or al, 0x41; ret; 
0x0012992a: inc ebp; or esp, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x0012574b: inc ebp; push cs; adc al, 0x41; ret; 
0x0012c0ed: inc ebp; push cs; or al, 0x41; ret; 
0x0005cb0f: inc ebp; sbb al, 0xdd; inc ebp; and al, 0xd9; ret; 
0x000d6f31: inc ebp; sbb byte ptr [ebp - 0x76418b40], al; ret 0xd1e9; 
0x0004e195: inc ebp; xadd eax, ebp; pop ds; pop ebp; ret; 
0x00142a21: inc ebp; xchg byte ptr [ebx], al; add dword ptr [esp + edi*2], 0xa; ret; 
0x000c4d41: inc ebp; ret; 
0x000fb651: inc ebx; add al, 0x83; ret; 
0x00127535: inc ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001484db: inc ebx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00142a30: inc ebx; or edi, dword ptr [ebp + 0xa]; ret; 
0x0013e253: inc ebx; push cs; adc byte ptr [eax + 0xe], bh; or al, 0x41; ret; 
0x001438b3: inc ebx; push cs; adc byte ptr [eax + 0xe], ch; or al, 0x41; ret; 
0x0012c4ff: inc ebx; push cs; adc byte ptr [ebp + 0xe], ch; or al, 0x41; ret; 
0x00130fd3: inc ebx; push cs; adc byte ptr [ebp + 0xe], dh; or al, 0x41; ret; 
0x00128e07: inc ebx; push cs; adc byte ptr [ebx + 0xe], bh; or al, 0x41; ret; 
0x001304df: inc ebx; push cs; adc byte ptr [ebx + 0xe], ch; or al, 0x41; ret; 
0x00140797: inc ebx; push cs; adc byte ptr [ebx + 0xe], dh; or al, 0x41; ret; 
0x001275ab: inc ebx; push cs; adc byte ptr [ecx + 0xe], ch; or al, 0x41; ret; 
0x00148bdb: inc ebx; push cs; adc byte ptr [edi + 0xe], ah; or al, 0x41; ret; 
0x001276af: inc ebx; push cs; adc byte ptr [edi + 0xe], ch; or al, 0x41; ret; 
0x00141b4f: inc ebx; push cs; adc byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x00134de3: inc ebx; push cs; adc byte ptr [edx + 0xe], dh; or al, 0x41; ret; 
0x00147a97: inc ebx; push cs; adc byte ptr [edx + ecx + 0xe], bh; or al, 0x41; ret; 
0x00129153: inc ebx; push cs; adc byte ptr [edx + ecx + 0xe], bl; or al, 0x41; ret; 
0x00144f53: inc ebx; push cs; adc byte ptr [esi + 0xe], ah; or al, 0x41; ret; 
0x0013efb3: inc ebx; push cs; adc byte ptr [esi + 0xe], ch; or al, 0x41; ret; 
0x00128b73: inc ebx; push cs; adc byte ptr [esi + 0xe], dh; or al, 0x41; ret; 
0x0012749e: inc ebx; push cs; adc byte ptr [esi + ecx + 8], ah; inc ecx; ret; 
0x0013f3a1: inc ebx; push cs; add bl, byte ptr fs:[eax + 0x41140e0a]; ret; 
0x0014b515: inc ebx; push cs; and al, 2; mov al, byte ptr [0x41140e0a]; ret; 
0x001431e9: inc ebx; push cs; and al, 2; mov eax, dword ptr [0x41140e0a]; ret; 
0x0013ebd5: inc ebx; push cs; and al, 2; mov ebx, 0x41140e0a; ret; 
0x001468c1: inc ebx; push cs; and al, 2; mov ecx, 0x41140e0a; ret; 
0x0014a93d: inc ebx; push cs; and al, 2; mov edx, 0x41140e0a; ret; 
0x0014918d: inc ebx; push cs; and al, 2; or cl, byte ptr [0x4114]; ret; 
0x0013aedb: inc ebx; push cs; and al, 2; push 0x410c0e0a; ret; 
0x00138b77: inc ebx; push cs; and byte ptr [eax + 0xe], bh; or al, 0x41; ret; 
0x00125fab: inc ebx; push cs; and byte ptr [edx + ecx + 0xe], bh; or al, 0x41; ret; 
0x0013581f: inc ebx; push cs; and byte ptr [edx + ecx + 0xe], dh; or al, 0x41; ret; 
0x0013e0a0: inc ebx; push cs; and byte ptr [edx], al; mov eax, 0x41100e0a; ret; 
0x0013c72d: inc ebx; push cs; and byte ptr [edx], al; mov eax, dword ptr [0x41140e0a]; ret; 
0x0012ff51: inc ebx; push cs; and byte ptr [edx], al; or cl, byte ptr [0x4114]; ret; 
0x0012b455: inc ebx; push cs; and byte ptr [edx], al; push 0x41140e0a; ret; 
0x0012c011: inc ebx; push cs; and byte ptr [edx], al; ret 0xe0a; 
0x001292b1: inc ebx; push cs; cmp al, 2; mov ebp, 0x41140e0a; ret; 
0x00127abd: inc ebx; push cs; cmp al, 2; ret 0xe0a; 
0x001451d1: inc ebx; push cs; cmp byte ptr [edx], al; mov al, byte ptr [0x41140e0a]; ret; 
0x0014cbcd: inc ebx; push cs; cmp byte ptr [edx], al; mov byte ptr [0x41140e0a], al; ret; 
0x00129965: inc ebx; push cs; dec eax; add ah, byte ptr [ebp + 0x41140e0a]; ret; 
0x0014cea3: inc ebx; push cs; dec eax; add al, byte ptr [edi + 0x410c0e0a]; ret; 
0x0012b8e9: inc ebx; push cs; dec eax; add al, byte ptr [edx + 0x41140e0a]; ret; 
0x00125afd: inc ebx; push cs; dec eax; add bh, byte ptr [edi + 0x41140e0a]; ret; 
0x0013b0d3: inc ebx; push cs; dec eax; add bl, byte ptr [esi + 0x410c0e0a]; ret; 
0x00145609: inc ebx; push cs; dec eax; add cl, byte ptr [edi + 0x41140e0a]; ret; 
0x0013668d: inc ebx; push cs; dec eax; add dh, byte ptr [eax + 0x41140e0a]; ret; 
0x0013768d: inc ebx; push cs; dec esp; add ah, byte ptr [esi + 0x41140e0a]; ret; 
0x00130bb0: inc ebx; push cs; dec esp; add al, byte ptr [ebx + 0x41100e0a]; ret; 
0x001449ad: inc ebx; push cs; dec esp; add bl, byte ptr [ebx + 0x41140e0a]; ret; 
0x00135eb1: inc ebx; push cs; dec esp; add ch, byte ptr [edi + 0x41140e0a]; ret; 
0x00135ef1: inc ebx; push cs; dec esp; add dh, byte ptr [eax + 0x41140e0a]; ret; 
0x001291b1: inc ebx; push cs; inc eax; add ah, byte ptr [esi + 0x41140e0a]; ret; 
0x00136a59: inc ebx; push cs; inc eax; add bh, byte ptr [edx + 0x41140e0a]; ret; 
0x0013e559: inc ebx; push cs; inc eax; add bl, byte ptr [ebx + 0x41140e0a]; ret; 
0x0012ab0b: inc ebx; push cs; inc esp; add ah, byte ptr [ebx + 0x410c0e0a]; ret; 
0x0014c039: inc ebx; push cs; inc esp; add al, byte ptr [ebx + 0x41140e0a]; ret; 
0x0012b9d1: inc ebx; push cs; inc esp; add al, byte ptr [edx + 0x41140e0a]; ret; 
0x0013f5e1: inc ebx; push cs; inc esp; add bh, byte ptr [esi + 0x41140e0a]; ret; 
0x00137eb9: inc ebx; push cs; inc esp; add bl, byte ptr [ebp + 0x41140e0a]; ret; 
0x001253d4: inc ebx; push cs; inc esp; add bl, byte ptr [esi + 0x41100e0a]; ret; 
0x0013653a: inc ebx; push cs; inc esp; add dl, byte ptr [edx + 0x41080e0a]; ret; 
0x00131301: inc ebx; push cs; insb byte ptr es:[edi], dx; add bl, byte ptr [eax + 0x41140e0a]; ret; 
0x00143229: inc ebx; push cs; insb byte ptr es:[edi], dx; add ch, byte ptr [eax + 0x41140e0a]; ret; 
0x00133c09: inc ebx; push cs; mov byte ptr [ecx], al; add cl, byte ptr [eax + 0x41140e0a]; ret; 
0x00133771: inc ebx; push cs; mov byte ptr [ecx], al; add cl, byte ptr [ebx + 0x41140e0a]; ret; 
0x00131b4d: inc ebx; push cs; mov word ptr [ecx], es; add cl, byte ptr [ebx + 0x41140e0a]; ret; 
0x00147ae2: inc ebx; push cs; or al, 2; mov esi, 0x41080e0a; ret; 
0x0012b801: inc ebx; push cs; pop eax; add al, byte ptr [edx + 0x41140e0a]; ret; 
0x001441c9: inc ebx; push cs; pop esp; add al, byte ptr [edx + 0x41140e0a]; ret; 
0x00138bc7: inc ebx; push cs; push 0x410c0e7f; ret; 
0x00126775: inc ebx; push cs; push 0xe0a6f02; adc al, 0x41; ret; 
0x0012b719: inc ebx; push cs; push 0xe0a8502; adc al, 0x41; ret; 
0x00144d9d: inc ebx; push cs; push 0xe0a8a02; adc al, 0x41; ret; 
0x00126455: inc ebx; push cs; push 0xe0ae502; adc al, 0x41; ret; 
0x0012c66d: inc ebx; push cs; push eax; add bl, byte ptr [edx + 0x41140e0a]; ret; 
0x00146d09: inc ebx; push cs; push eax; add bl, byte ptr [esi + 0x41140e0a]; ret; 
0x001378e9: inc ebx; push cs; push eax; add ch, byte ptr [esi + 0x41140e0a]; ret; 
0x00130cb4: inc ebx; push cs; push eax; add cl, byte ptr [ebx + 0x41100e0a]; ret; 
0x0013f639: inc ebx; push cs; push eax; add cl, byte ptr [esi + 0x41140e0a]; ret; 
0x00137929: inc ebx; push cs; push eax; add dh, byte ptr [eax + 0x41140e0a]; ret; 
0x00137bed: inc ebx; push cs; push esp; add bl, byte ptr [eax + 0x41140e0a]; ret; 
0x00137c2d: inc ebx; push cs; push esp; add bl, byte ptr [ebx + 0x41140e0a]; ret; 
0x0012eaef: inc ebx; push cs; sbb byte ptr [eax + 0xe], dh; or al, 0x41; ret; 
0x0012f93d: inc ebx; push cs; sbb byte ptr [edi + 0xe], dh; adc al, 0x41; ret; 
0x00141d67: inc ebx; push cs; sbb byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x0012a0c7: inc ebx; push cs; sbb byte ptr [edx], al; push 0x410c0e0a; ret; 
0x0012779f: inc ebx; push cs; sbb byte ptr [esi + 0xe], ch; or al, 0x41; ret; 
0x0012e9d1: inc ebx; push cs; sbb byte ptr [esi + 0xe], dh; adc al, 0x41; ret; 
0x00143c3b: inc ebx; push cs; sbb byte ptr [esi + 0xe], dh; or al, 0x41; ret; 
0x00147d68: inc ebx; push cs; sbb byte ptr [esi + ecx + 0x10], bh; inc ecx; ret; 
0x0012af2c: inc ebx; push cs; sbb byte ptr [esi + ecx + 0x10], dh; inc ecx; ret; 
0x00128ed6: inc ebx; push cs; sbb byte ptr [esi + ecx + 8], bh; inc ecx; ret; 
0x001311de: inc ebx; push cs; sbb byte ptr [esi + ecx + 8], ch; inc ecx; ret; 
0x00125b46: inc ebx; push cs; sbb byte ptr [esi + ecx + 8], dh; inc ecx; ret; 
0x0013cf85: inc ebx; push cs; sub al, 2; mov esi, 0x41140e0a; ret; 
0x001279e9: inc ebx; push cs; sub al, 2; mov esp, 0x41140e0a; ret; 
0x0012d3eb: inc ebx; push cs; sub byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x00138629: inc ebx; push cs; sub byte ptr [edx], al; mov byte ptr [0x41140e0a], al; ret; 
0x00134415: inc ebx; push cs; sub byte ptr [edx], al; mov dword ptr [0x41140e0a], eax; ret; 
0x00142c49: inc ebx; push cs; sub byte ptr [edx], al; mov ebp, 0x41140e0a; ret; 
0x00131749: inc ebx; push cs; sub byte ptr [edx], al; mov edi, 0x41140e0a; ret; 
0x0013ae1d: inc ebx; push cs; sub byte ptr [edx], al; or cl, byte ptr [0x4114]; ret; 
0x00144a09: inc ebx; push cs; sub byte ptr [edx], al; push 0x41140e0a; ret; 
0x0013b405: inc ebx; push cs; sub byte ptr [edx], al; ret 0xe0a; 
0x00142c09: inc ebx; push cs; test byte ptr [ecx], al; add dh, byte ptr [ebx + 0x41140e0a]; ret; 
0x00128fb4: inc ebx; push cs; xor al, 2; mov edx, 0x41100e0a; ret; 
0x0013cb0d: inc ebx; push cs; xor al, 3; mov dword ptr [ecx], 0x41140e0a; ret; 
0x0014c491: inc ebx; push cs; xor byte ptr [ebx], al; imul eax, dword ptr [ecx], 0x41140e0a; ret; 
0x00139f99: inc ebx; push cs; xor byte ptr [ebx], al; test dword ptr [ecx], 0x41140e0a; ret; 
0x0014bc29: inc ebx; push cs; xor byte ptr [edx], al; mov edi, 0x41140e0a; ret; 
0x00134ce5: inc ebx; push cs; xor byte ptr [edx], al; mov esi, 0x41140e0a; ret; 
0x00136d8e: inc ebx; push cs; xor byte ptr [edx], al; or cl, byte ptr [0x4108]; ret; 
0x0012aadb: inc ebx; push cs; xor byte ptr [edx], al; or cl, byte ptr [0x410c]; ret; 
0x0013eed2: inc ebx; push cs; xor byte ptr [edx], al; push 0x41080e0a; ret; 
0x0012d995: inc ebx; push cs; xor byte ptr [edx], al; ret 0xe0a; 
0x00134ba1: inc ebx; push cs; pushal; add dh, byte ptr [ebp + 0x41140e0a]; ret; 
0x00125399: inc ebx; push cs; pushal; add dl, byte ptr [edx + 0x41140e0a]; ret; 
0x000ba6f9: inc ebx; ret; 
0x0005165c: inc ecx; adc byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x0002b098: inc ecx; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448b; 
0x0012fa44: inc ecx; add dh, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x00126f05: inc ecx; add dword ptr [ebx], 0x61; ret; 
0x000315a0: inc ecx; add eax, 0x3039; mov dword ptr [ecx + 0x1314], eax; and eax, 0x7fffffff; ret; 
0x0007c39e: inc ecx; in al, -1; dec dword ptr [ebx - 0x7c8fdbac]; ret 0x8901; 
0x0012b0d3: inc ecx; mov dword ptr [ecx - 0x3b], 0x4104040c; or eax, dword ptr [ebx]; add byte ptr [ecx], 0xa; ret; 
0x0012afc7: inc ecx; mov dword ptr [ecx - 0x3b], 0x4104040c; or eax, dword ptr [edx]; fmul qword ptr [edx]; ret; 
0x0012f04b: inc ecx; mov dword ptr [ecx - 0x3b], 0x4104040c; or eax, dword ptr [edx]; lea ecx, dword ptr [edx]; ret; 
0x0012713b: inc ecx; mov dword ptr [ecx - 0x3b], 0x4104040c; or ebp, dword ptr [eax + 0xa]; ret; 
0x0014a01d: inc ecx; mov dword ptr [ecx - 0x3b], 0x4104040c; or ebp, dword ptr [ebx + 0xa]; ret; 
0x0013dd87: inc ecx; mov dword ptr [ecx - 0x3b], 0x4104040c; or ebp, dword ptr [edx + 0xa]; ret; 
0x0012707f: inc ecx; mov dword ptr [ecx - 0x3b], 0x4104040c; or ebx, dword ptr [eax + 0xa]; ret; 
0x0012709b: inc ecx; mov dword ptr [ecx - 0x3b], 0x4104040c; or ebx, dword ptr [ebp + 0xa]; ret; 
0x0012708d: inc ecx; mov dword ptr [ecx - 0x3b], 0x4104040c; or ebx, dword ptr [edx + 0xa]; ret; 
0x0012fe7a: inc ecx; mov dword ptr [ecx - 0x3b], 0x4104040c; or ebx, dword ptr [esi + 0xa]; ret; 
0x0012f05a: inc ecx; mov dword ptr [ecx - 0x3b], 0x4104040c; or ecx, dword ptr [ebx + 0xa]; ret; 
0x0012fe88: inc ecx; mov dword ptr [ecx - 0x3b], 0x4104040c; or ecx, dword ptr [edi + 0xa]; ret; 
0x0013de21: inc ecx; mov dword ptr [ecx - 0x3b], 0x4104040c; or edi, dword ptr [esi + 0xa]; ret; 
0x0013de7c: inc ecx; mov dword ptr [ecx - 0x3b], 0x4104040c; or edx, dword ptr [eax + 0xa]; ret; 
0x0013de6e: inc ecx; mov dword ptr [ecx - 0x3b], 0x4104040c; or edx, dword ptr [ebx + 0xa]; ret; 
0x0013de13: inc ecx; mov dword ptr [ecx - 0x3b], 0x4104040c; or esi, dword ptr [edx + 0xa]; ret; 
0x00125be6: inc ecx; mov dword ptr [ecx - 0x3b], 0x4104040c; or esp, dword ptr [esi + 0xa]; ret; 
0x00091568: inc ecx; or al, 0x5e; pop edi; ret; 
0x00127a04: inc ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014b35f: inc ecx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00131628: inc ecx; or eax, dword ptr [eax]; add byte ptr [eax + eax], al; add al, bh; ret; 
0x00126511: inc ecx; or eax, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x00129b0f: inc ecx; or eax, dword ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x00146e5a: inc ecx; or eax, dword ptr [ebp + 0xa]; ret; 
0x00125749: inc ecx; or eax, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x0012c0eb: inc ecx; or eax, dword ptr [ebp + 0xe]; or al, 0x41; ret; 
0x0013fd57: inc ecx; or eax, dword ptr [ebx + 0xa]; ret; 
0x0012b0da: inc ecx; or eax, dword ptr [ebx]; add byte ptr [ecx], 0xa; ret; 
0x0012a9be: inc ecx; or eax, dword ptr [ebx]; and eax, 0x140e0a01; inc ecx; ret; 
0x0014cbe5: inc ecx; or eax, dword ptr [ebx]; cmp eax, 0x140e0a01; inc ecx; ret; 
0x00144221: inc ecx; or eax, dword ptr [ebx]; mov esp, 0x140e0a02; inc ecx; ret; 
0x0013b942: inc ecx; or eax, dword ptr [ebx]; push cs; add al, 0xa; ret; 
0x0014af4d: inc ecx; or eax, dword ptr [ebx]; sbb eax, 0x140e0a01; inc ecx; ret; 
0x0012997d: inc ecx; or eax, dword ptr [ebx]; scasb al, byte ptr es:[edi]; add eax, 0x41140e0a; ret; 
0x001295b0: inc ecx; or eax, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00128393: inc ecx; or eax, dword ptr [edi + 0xa]; push cs; or al, 0x41; ret; 
0x00141b7b: inc ecx; or eax, dword ptr [edi + 0xa]; ret; 
0x0014068d: inc ecx; or eax, dword ptr [edi + 0xe]; adc al, 0x41; ret; 
0x00128c0b: inc ecx; or eax, dword ptr [edi + 0xe]; or al, 0x41; ret; 
0x00126e6b: inc ecx; or eax, dword ptr [edx]; call 0x41267c7d; ret; 
0x0012afce: inc ecx; or eax, dword ptr [edx]; fmul qword ptr [edx]; ret; 
0x00125b15: inc ecx; or eax, dword ptr [edx]; imul ecx, dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x0014b3ee: inc ecx; or eax, dword ptr [edx]; jo 0x14b401; adc al, 0x41; ret; 
0x0012f052: inc ecx; or eax, dword ptr [edx]; lea ecx, dword ptr [edx]; ret; 
0x0012b16e: inc ecx; or eax, dword ptr [edx]; mov al, byte ptr [0x41140e0a]; ret; 
0x0012b4c2: inc ecx; or eax, dword ptr [edx]; mov byte ptr [0x41140e0a], al; ret; 
0x001328fa: inc ecx; or eax, dword ptr [edx]; mov dword ptr [0x41140e0a], eax; ret; 
0x0013314c: inc ecx; or eax, dword ptr [edx]; mov eax, 0x41140e0a; ret; 
0x0014cdf7: inc ecx; or eax, dword ptr [edx]; mov ebp, 0x41100e0a; ret; 
0x00133a7c: inc ecx; or eax, dword ptr [edx]; mov ebp, 0x41140e0a; ret; 
0x00142152: inc ecx; or eax, dword ptr [edx]; mov ebx, 0x41140e0a; ret; 
0x001335e4: inc ecx; or eax, dword ptr [edx]; mov ecx, 0x41140e0a; ret; 
0x0013c91b: inc ecx; or eax, dword ptr [edx]; mov ecx, dword ptr [esi]; adc al, 0x41; ret; 
0x00127b9d: inc ecx; or eax, dword ptr [edx]; mov edi, 0x41140e0a; ret; 
0x00133f14: inc ecx; or eax, dword ptr [edx]; mov edx, 0x41140e0a; ret; 
0x00137851: inc ecx; or eax, dword ptr [edx]; mov esp, 0x41140e0a; ret; 
0x001366a5: inc ecx; or eax, dword ptr [edx]; or cl, byte ptr [0x4114]; ret; 
0x00137f28: inc ecx; or eax, dword ptr [edx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00133aaa: inc ecx; or eax, dword ptr [edx]; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x00131330: inc ecx; or eax, dword ptr [edx]; or cl, byte ptr gs:[esi]; adc al, 0x41; ret; 
0x0012fd29: inc ecx; or eax, dword ptr [edx]; or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x00129599: inc ecx; or eax, dword ptr [edx]; push 0x41140e0a; ret; 
0x0013876e: inc ecx; or eax, dword ptr [edx]; push esi; ret; 
0x0013eea1: inc ecx; or eax, dword ptr [edx]; ror byte ptr [edx], 0xe; adc al, 0x41; ret; 
0x0014beaa: inc ecx; or eax, dword ptr [edx]; test eax, 0x41140e0a; ret; 
0x0012fa99: inc ecx; or eax, dword ptr [edx]; ret; 
0x00135441: inc ecx; or eax, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00129e3f: inc ecx; or eax, dword ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x001318ed: inc ecx; or ebp, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00137492: inc ecx; or ebp, dword ptr [eax + 0xa]; push cs; or al, 0x41; ret; 
0x00127142: inc ecx; or ebp, dword ptr [eax + 0xa]; ret; 
0x001424f9: inc ecx; or ebp, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x0013ebed: inc ecx; or ebp, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x0012632d: inc ecx; or ebp, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x0012e255: inc ecx; or ebp, dword ptr [ebx + 0xa]; ret; 
0x00126ae9: inc ecx; or ebp, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0012cc32: inc ecx; or ebp, dword ptr [ecx + 0xe]; or al, 0x41; ret; 
0x0012d9ad: inc ecx; or ebp, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00127bb4: inc ecx; or ebp, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x0013dd8e: inc ecx; or ebp, dword ptr [edx + 0xa]; ret; 
0x0013d20d: inc ecx; or ebp, dword ptr [edx + 0xe]; adc al, 0x41; ret; 
0x001275f9: inc ecx; or ebp, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0014a839: inc ecx; or ebp, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00125dd1: inc ecx; or ebp, dword ptr [esi + 0xa]; ret; 
0x0012c632: inc ecx; or ebp, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x00128ad9: inc ecx; or ebx, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00127086: inc ecx; or ebx, dword ptr [eax + 0xa]; ret; 
0x0014388b: inc ecx; or ebx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x0014ac58: inc ecx; or ebx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x0013d886: inc ecx; or ebx, dword ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x001270a2: inc ecx; or ebx, dword ptr [ebp + 0xa]; ret; 
0x0012fd96: inc ecx; or ebx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x0014472e: inc ecx; or ebx, dword ptr [ebp + 0xe]; or al, 0x41; ret; 
0x00126b6e: inc ecx; or ebx, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x001289aa: inc ecx; or ebx, dword ptr [ebx + 0xa]; push cs; or al, 0x41; ret; 
0x0014c8ef: inc ecx; or ebx, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x0014811a: inc ecx; or ebx, dword ptr [ebx + 0xe]; or al, 0x41; ret; 
0x0012a891: inc ecx; or ebx, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x001447d5: inc ecx; or ebx, dword ptr [ecx + 0xe]; adc al, 0x41; ret; 
0x00139ba9: inc ecx; or ebx, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0012c685: inc ecx; or ebx, dword ptr [edi + 0xe]; adc al, 0x41; ret; 
0x0013994b: inc ecx; or ebx, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x00136236: inc ecx; or ebx, dword ptr [edx + 0xa]; push cs; or al, 0x41; ret; 
0x00127094: inc ecx; or ebx, dword ptr [edx + 0xa]; ret; 
0x001388fa: inc ecx; or ebx, dword ptr [edx + 0xe]; adc al, 0x41; ret; 
0x0012646d: inc ecx; or ebx, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0012ce46: inc ecx; or ebx, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00148d27: inc ecx; or ebx, dword ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x0012fe81: inc ecx; or ebx, dword ptr [esi + 0xa]; ret; 
0x0012a93d: inc ecx; or ebx, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x00125332: inc ecx; or ecx, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00125fba: inc ecx; or ecx, dword ptr [eax + 0xa]; push cs; or al, 0x41; ret; 
0x0012535e: inc ecx; or ecx, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x0012d0f4: inc ecx; or ecx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x0012627d: inc ecx; or ecx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x0012d6ba: inc ecx; or ecx, dword ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x0014b499: inc ecx; or ecx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x00127769: inc ecx; or ecx, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x00128244: inc ecx; or ecx, dword ptr [ebx + 0xa]; push cs; or al, 0x41; ret; 
0x0012f061: inc ecx; or ecx, dword ptr [ebx + 0xa]; ret; 
0x00149df6: inc ecx; or ecx, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x0012e7ff: inc ecx; or ecx, dword ptr [ebx + 0xe]; or al, 0x41; ret; 
0x0013e065: inc ecx; or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0012db9a: inc ecx; or ecx, dword ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x00130027: inc ecx; or ecx, dword ptr [ecx + 0xa]; ret; 
0x0012e682: inc ecx; or ecx, dword ptr [ecx + 0xe]; or al, 0x41; ret; 
0x001266df: inc ecx; or ecx, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0013ad6a: inc ecx; or ecx, dword ptr [edi + 0xa]; push cs; or al, 0x41; ret; 
0x0012fe8f: inc ecx; or ecx, dword ptr [edi + 0xa]; ret; 
0x00132586: inc ecx; or ecx, dword ptr [edi + 0xe]; adc al, 0x41; ret; 
0x00140b72: inc ecx; or ecx, dword ptr [edi + 0xe]; or al, 0x41; ret; 
0x00126d61: inc ecx; or ecx, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x0013ac5c: inc ecx; or ecx, dword ptr [edx + 0xe]; adc al, 0x41; ret; 
0x00132dc1: inc ecx; or ecx, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0012a0e5: inc ecx; or ecx, dword ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x001294dd: inc ecx; or ecx, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00143e79: inc ecx; or ecx, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x0013d40a: inc ecx; or ecx, dword ptr [esi + ecx + 0xc]; inc ecx; ret; 
0x0013dca6: inc ecx; or edi, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x00127db9: inc ecx; or edi, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x00125ba5: inc ecx; or edi, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x00131c56: inc ecx; or edi, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0014045d: inc ecx; or edi, dword ptr [ecx + 0xe]; adc al, 0x41; ret; 
0x00131881: inc ecx; or edi, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0014c1cc: inc ecx; or edi, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x00127eb5: inc ecx; or edi, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0013c7ea: inc ecx; or edi, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x0013de28: inc ecx; or edi, dword ptr [esi + 0xa]; ret; 
0x0014abef: inc ecx; or edi, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x001263dd: inc ecx; or edx, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0013e11b: inc ecx; or edx, dword ptr [eax + 0xa]; push cs; or al, 0x41; ret; 
0x0013de83: inc ecx; or edx, dword ptr [eax + 0xa]; ret; 
0x00143f0d: inc ecx; or edx, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x00130f2e: inc ecx; or edx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x00136349: inc ecx; or edx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x00129e02: inc ecx; or edx, dword ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x0012a095: inc ecx; or edx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x0014c953: inc ecx; or edx, dword ptr [ebp + 0xe]; or al, 0x41; ret; 
0x0012e608: inc ecx; or edx, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x0012e20a: inc ecx; or edx, dword ptr [ebx + 0xa]; push cs; or al, 0x41; ret; 
0x0013de75: inc ecx; or edx, dword ptr [ebx + 0xa]; ret; 
0x0013838f: inc ecx; or edx, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x00130bf3: inc ecx; or edx, dword ptr [ebx + 0xe]; or al, 0x41; ret; 
0x00128549: inc ecx; or edx, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x00129042: inc ecx; or edx, dword ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x0013e0e1: inc ecx; or edx, dword ptr [ecx + 0xa]; ret; 
0x0012e218: inc ecx; or edx, dword ptr [ecx + 0xe]; or al, 0x41; ret; 
0x00126483: inc ecx; or edx, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00149d52: inc ecx; or edx, dword ptr [edi + 0xa]; push cs; or al, 0x41; ret; 
0x0012a011: inc ecx; or edx, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x00125b8f: inc ecx; or edx, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0012b5ca: inc ecx; or edx, dword ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x0013566e: inc ecx; or edx, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x001430d2: inc ecx; or edx, dword ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x0014492f: inc ecx; or edx, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x0013cf12: inc ecx; or edx, dword ptr [esi + ecx + 0xc]; inc ecx; ret; 
0x00128cd1: inc ecx; or edx, dword ptr [esi + ecx + 8]; inc ecx; ret; 
0x00135ab7: inc ecx; or esi, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00128879: inc ecx; or esi, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x0012618a: inc ecx; or esi, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x0014148e: inc ecx; or esi, dword ptr [eax + eax]; add byte ptr [eax], al; pop esp; ret 1; 
0x0012b26a: inc ecx; or esi, dword ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x00143a92: inc ecx; or esi, dword ptr [ebp + 0xe]; or al, 0x41; ret; 
0x0012cb42: inc ecx; or esi, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x00139515: inc ecx; or esi, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x0014192b: inc ecx; or esi, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0013dcf0: inc ecx; or esi, dword ptr [ecx + 0xa]; ret; 
0x00143fff: inc ecx; or esi, dword ptr [ecx + 0xe]; or al, 0x41; ret; 
0x00136eec: inc ecx; or esi, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00127dfe: inc ecx; or esi, dword ptr [edi + 0xe]; or al, 0x41; ret; 
0x0012e151: inc ecx; or esi, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x0013de1a: inc ecx; or esi, dword ptr [edx + 0xa]; ret; 
0x0012c1a3: inc ecx; or esi, dword ptr [edx + 0xe]; or al, 0x41; ret; 
0x00138379: inc ecx; or esi, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0014bb5a: inc ecx; or esi, dword ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x001451e9: inc ecx; or esi, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x001260ee: inc ecx; or esi, dword ptr [esi + 0xe]; or al, 0x41; ret; 
0x0014b9c2: inc ecx; or esi, dword ptr [esi + ecx + 8]; inc ecx; ret; 
0x0012cb6f: inc ecx; or esp, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00125348: inc ecx; or esp, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x00135b09: inc ecx; or esp, dword ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x00138d15: inc ecx; or esp, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x00141c42: inc ecx; or esp, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x0013f136: inc ecx; or esp, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x00135afb: inc ecx; or esp, dword ptr [edi + 0xa]; push cs; or al, 0x41; ret; 
0x0013dce1: inc ecx; or esp, dword ptr [edi + 0xa]; ret; 
0x00131a3f: inc ecx; or esp, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x00148228: inc ecx; or esp, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0013cb26: inc ecx; or esp, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00125bed: inc ecx; or esp, dword ptr [esi + 0xa]; ret; 
0x0012a8e9: inc ecx; or esp, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x00139366: inc ecx; or esp, dword ptr [esi + ecx + 0xc]; inc ecx; ret; 
0x0012c00c: inc ecx; push cs; adc al, 0x83; add eax, 0x2200e43; ret 0xe0a; 
0x0013b400: inc ecx; push cs; adc al, 0x83; add eax, 0x2280e43; ret 0xe0a; 
0x0012d990: inc ecx; push cs; adc al, 0x83; add eax, 0x2300e43; ret 0xe0a; 
0x00127ab8: inc ecx; push cs; adc al, 0x83; add eax, 0x23c0e43; ret 0xe0a; 
0x00136b94: inc ecx; push cs; adc al, 0x83; add eax, 0x2440e43; ret 0xe0a; 
0x0012a53c: inc ecx; push cs; adc al, 0x83; add eax, 0x2500e43; ret; 
0x00137ffc: inc ecx; push cs; adc al, 0x83; add eax, 0x2580e43; ret 0xe0a; 
0x001303ac: inc ecx; push cs; adc al, 0x83; add eax, 0x3480e43; ret 0xa02; 
0x00143c6c: inc ecx; push cs; adc al, 0x83; add eax, 0xa028d03; ret; 
0x0013f573: inc ecx; push cs; adc byte ptr [ebx + 0x140e4304], al; add al, byte ptr [edi + 0x41100e0a]; ret; 
0x001285ff: inc ecx; push cs; adc byte ptr [ebx + 0x140e4304], al; push 0x41100e0a; ret; 
0x00144507: inc ecx; push cs; adc byte ptr [ebx + 0x180e4304], al; add al, byte ptr [ebp + 0x41100e0a]; ret; 
0x00147633: inc ecx; push cs; adc byte ptr [ebx + 0x180e4304], al; add ch, byte ptr [eax + 0x41100e0a]; ret; 
0x0012e597: inc ecx; push cs; adc byte ptr [ebx + 0x200e4304], al; add ah, byte ptr [esi + 0x41100e0a]; ret; 
0x0012ca6b: inc ecx; push cs; adc byte ptr [ebx + 0x200e4304], al; add al, byte ptr [ebp + 0x41100e0a]; ret; 
0x0014ca73: inc ecx; push cs; adc byte ptr [ebx + 0x200e4304], al; add al, byte ptr [ecx + 0x41100e0a]; ret; 
0x0013e09b: inc ecx; push cs; adc byte ptr [ebx + 0x200e4304], al; add bh, byte ptr [eax + 0x41100e0a]; ret; 
0x0012e74f: inc ecx; push cs; adc byte ptr [ebx + 0x200e4304], al; add bl, byte ptr [edi + 0x41100e0a]; ret; 
0x0014b257: inc ecx; push cs; adc byte ptr [ebx + 0x200e4304], al; add ch, byte ptr [edi + 0x41100e0a]; ret; 
0x0013ed67: inc ecx; push cs; adc byte ptr [ebx + 0x200e4304], al; add cl, byte ptr [edx + 0x41100e0a]; ret; 
0x0013e4f3: inc ecx; push cs; adc byte ptr [ebx + 0x240e4304], al; add al, byte ptr [edi + 0x41100e0a]; ret; 
0x00128797: inc ecx; push cs; adc byte ptr [ebx + 0x240e4304], al; add al, byte ptr [esi + 0x41100e0a]; ret; 
0x0014c97b: inc ecx; push cs; adc byte ptr [ebx + 0x240e4304], al; add dl, byte ptr [edi + 0x41100e0a]; ret; 
0x00140e43: inc ecx; push cs; adc byte ptr [ebx + 0x240e4304], al; or cl, byte ptr [0x4110]; ret; 
0x001355f3: inc ecx; push cs; adc byte ptr [ebx + 0x340e4304], al; add ah, byte ptr [esi + 0x41100e0a]; ret; 
0x00128faf: inc ecx; push cs; adc byte ptr [ebx + 0x340e4304], al; add bh, byte ptr [edx + 0x41100e0a]; ret; 
0x00147e13: inc ecx; push cs; adc byte ptr [ebx + 0x380e4304], al; add al, byte ptr [ebp + 0x41100e0a]; ret; 
0x0013807f: inc ecx; push cs; adc byte ptr [ebx + 0x3c0e4304], al; add dl, byte ptr [eax + 0x41100e0a]; ret; 
0x001253cf: inc ecx; push cs; adc byte ptr [ebx + 0x440e4304], al; add bl, byte ptr [esi + 0x41100e0a]; ret; 
0x00130bab: inc ecx; push cs; adc byte ptr [ebx + 0x4c0e4304], al; add al, byte ptr [ebx + 0x41100e0a]; ret; 
0x00130caf: inc ecx; push cs; adc byte ptr [ebx + 0x500e4304], al; add cl, byte ptr [ebx + 0x41100e0a]; ret; 
0x0014bcef: inc ecx; push cs; adc byte ptr [ebx + 0xa500204], al; ret; 
0x00143bcb: inc ecx; push cs; adc byte ptr [ebx + 0xa590204], al; ret; 
0x00146e47: inc ecx; push cs; adc byte ptr [ebx + 0xa5d0204], al; ret; 
0x0013875b: inc ecx; push cs; adc byte ptr [ebx + 0xa8f0204], al; ret; 
0x0014207f: inc ecx; push cs; adc byte ptr [ebx + 0xaa00204], al; ret; 
0x0014221f: inc ecx; push cs; adc byte ptr [ebx + 0xaf60204], al; ret; 
0x0012a377: inc ecx; push cs; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x9a40e46], 3; ret 0xa02; 
0x001259be: inc ecx; push cs; or al, 0x83; add ebp, dword ptr [ebp + 0xa]; ret; 
0x001259e6: inc ecx; push cs; or al, 0x83; add ebp, dword ptr [edi + 0xa]; ret; 
0x0014c002: inc ecx; push cs; or al, 0x83; add ebp, dword ptr [esi + 0xa]; ret; 
0x0014bd5a: inc ecx; push cs; or al, 0x83; add edi, dword ptr [edx + 0xa]; ret; 
0x001342d5: inc ecx; push cs; or byte ptr [ebx + 0x100e4302], al; push 0x41080e0a; ret; 
0x0012aa69: inc ecx; push cs; or byte ptr [ebx + 0x2c0e4302], al; add al, byte ptr [ecx + 0x41080e0a]; ret; 
0x00136535: inc ecx; push cs; or byte ptr [ebx + 0x440e4302], al; add dl, byte ptr [edx + 0x41080e0a]; ret; 
0x00147719: inc ecx; push cs; or byte ptr [ebx + 0xa510202], al; ret; 
0x00147add: inc ecx; push cs; or byte ptr [ebx + 0xc0e4302], al; add bh, byte ptr [esi + 0x41080e0a]; ret; 
0x00139b25: inc ecx; push cs; or byte ptr [ebx + 0xc0e4302], al; or cl, byte ptr [0x4108]; ret; 
0x001306f1: inc ecx; push cs; or byte ptr [ebx + 0xc0e4302], al; push 0x41080e0a; ret; 
0x0012eb11: inc ecx; push cs; or byte ptr [esi + 0xc0e4102], al; add dword ptr [ebx], 0x5f; ret; 
0x00135d85: inc ecx; push cs; or byte ptr [esi + 0xc0e4102], al; add dword ptr [ebx], 0x70; ret; 
0x000d708c: inc ecx; sbb byte ptr [ecx - 0x2517dbfc], cl; ret 0xfff4; 
0x0005cf05: inc ecx; verw ax; ret; 
0x00125296: inc ecx; ret; 
0x0006053a: inc edi; adc al, 0x77; ret 0xf631; 
0x001017b1: inc edi; add al, 0x83; ret 0x8902; 
0x000488a6: inc edi; add byte ptr [eax], al; add byte ptr [ebp - 0x41e337d], cl; dec dword ptr [ecx - 0x1717dbfc]; ret 0xfffd; 
0x0006b4b3: inc edi; add dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; ret; 
0x0012fef5: inc edi; add dword ptr [ebx], 0x6a; or al, ch; ret; 
0x0013a64a: inc edi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x000679eb: inc edi; cmp byte ptr [ecx], cl; ret 0xcd75; 
0x0002bba5: inc edi; mov ecx, 0xc483ffff; or al, 0x5b; ret; 
0x000ab851: inc edi; or byte ptr [ebx + 0x5f5e14c4], al; pop ebp; ret; 
0x001295b2: inc edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00128395: inc edi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0014068f: inc edi; push cs; adc al, 0x41; ret; 
0x00128c0d: inc edi; push cs; or al, 0x41; ret; 
0x00034e3f: inc edi; ret 0x11; 
0x000db7c5: inc edi; sal ah, 0xff; add esp, 0x10; pop ebx; ret; 
0x000c26a1: inc edi; xor byte ptr [ecx], bh; ret 0xee7d; 
0x000679b8: inc edi; xor byte ptr [ecx], cl; ret 0x2174; 
0x00118eb3: inc edi; leave; ret 0x3b81; 
0x0012b1d5: inc edi; ret; 
0x000a8019: inc edx; add al, 0x83; rol byte ptr [ecx], 0x83; ret 0x3908; 
0x0004e9d8: inc edx; add al, byte ptr [eax + 0xf00017a]; test byte ptr [edx - 0x76000002], dl; ret 0xbeeb; 
0x0003f648: inc edx; add dword ptr [eax + 2], edi; ret; 
0x00091c94: inc edx; dec eax; pop esi; pop edi; ret; 
0x000c8fd9: inc edx; inc dword ptr [edi + edi*8 + 0x5f5bb175]; pop esi; ret; 
0x00143f4d: inc edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012deb7: inc edx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00126f02: inc edx; or eax, 0x3834105; popal; ret; 
0x0013bd8a: inc edx; or eax, 0x3834405; insb byte ptr es:[edi], dx; ret; 
0x0012f3e6: inc edx; or eax, 0x3834705; add dh, byte ptr [edx + ecx - 0x3b]; ret; 
0x00142a1e: inc edx; or eax, 0x3864505; add dword ptr [esp + edi*2], 0xa; ret; 
0x00127c56: inc edx; or eax, 0x3864805; add dword ptr [esi], 0xa; ret; 
0x0012706e: inc edx; or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011903; ret; 
0x0012f03a: inc edx; or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011d03; ret; 
0x00126eb2: inc edx; or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa019e03; ret; 
0x00126fda: inc edx; or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01bf03; ret; 
0x0012afb6: inc edx; or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01fe03; ret; 
0x0012b0c2: inc edx; or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa025f03; ret; 
0x0012712a: inc edx; or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa02a103; ret; 
0x0013b92a: inc edx; or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011b03; ret; 
0x0013deea: inc edx; or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa013e03; ret; 
0x0013dd76: inc edx; or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa014c03; ret; 
0x0013dd1a: inc edx; or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa015603; ret; 
0x0013865a: inc edx; or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa015d03; ret; 
0x0014999a: inc edx; or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa019e03; ret; 
0x0013b992: inc edx; or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa022a03; ret; 
0x001427ae: inc edx; or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa030503; ret; 
0x0013de02: inc edx; or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa03a003; ret; 
0x00126c76: inc edx; or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa053b03; ret; 
0x0013d832: inc edx; or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa068003; ret; 
0x00139242: inc edx; or eax, 0x3874c05; xchg byte ptr [ebx + eax*4], al; add eax, 0xa013503; ret; 
0x0013472e: inc edx; or eax, 0x3874c05; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01ad03; ret; 
0x001348fa: inc edx; or eax, 0x3874c05; xchg byte ptr [ebx + eax*4], al; add eax, 0xa024003; ret; 
0x0012e93e: inc edx; or eax, 0x3874c05; xchg byte ptr [ebx + eax*4], al; add eax, 0xa026b03; ret; 
0x0013d8ae: inc edx; or eax, 0x3874c05; xchg byte ptr [ebx + eax*4], al; add eax, 0xa050803; ret; 
0x00147d09: inc edx; push cs; adc al, 0x41; ret; 
0x00116cdc: inc edx; ret 0xfff5; 
0x00098f6a: inc edx; ret 0xfff8; 
0x00124630: inc edx; ret 0xfffc; 
0x000db65a: inc edx; cdq; hlt; inc dword ptr [ebx + 0x5e5b1cc4]; ret; 
0x000a2eec: inc edx; clc; inc dword ptr [ebx + 0x5d5b04c4]; ret; 
0x0010888a: inc edx; ret; 
0x000a6a6e: inc esi; adc al, ch; ret 0xfffa; 
0x0004ac63: inc esi; adc al, dh; loope 0x4ac3a; ret; 
0x00044bde: inc esi; adc byte ptr [ecx], bh; ret 0x3c77; 
0x000ab216: inc esi; adc dword ptr [ebx + 0x5e5b08c4], eax; pop edi; ret; 
0x0003d9ce: inc esi; add al, 0x39; ret 0x1073; 
0x0003dc8b: inc esi; add al, 0x39; ret 0x820f; 
0x0003d8cb: inc esi; add al, 0x39; ret 0x973; 
0x000ff77c: inc esi; add bh, byte ptr [ecx]; ret 0x870f; 
0x0008fcac: inc esi; add cl, byte ptr [ebx + eax*4]; ret 0xe901; 
0x001398dd: inc esi; add dword ptr [eax], eax; pushfd; ret 0xfff5; 
0x000e9faf: inc esi; add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000e9524: inc esi; add dword ptr [ecx], ecx; ret 0x543b; 
0x001293e5: inc esi; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x000d6c22: inc esi; and byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000f4dae: inc esi; imul eax, dword ptr [ecx], 0xd2c38100; ret 5; 
0x0005b766: inc esi; mov ah, 0xfc; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0005473f: inc esi; or al, 0x89; ret 0xce80; 
0x00103ca1: inc esi; or al, 0x89; ret 0xe283; 
0x000512d7: inc esi; or al, 0x89; ret 0xeac1; 
0x000c1254: inc esi; or byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0002c1ef: inc esi; or byte ptr [ebx + 0x5e5b10c4], al; ret; 
0x000c7087: inc esi; or byte ptr [ecx + 0x8c483f0], cl; pop ebx; pop esi; ret; 
0x0004ee30: inc esi; or byte ptr [ecx], al; ror byte ptr [ecx - 0x16e3dbbc], 1; ret; 
0x00034a06: inc esi; or byte ptr [ecx], bh; ljmp 0x8304:0x4e8b1274; ret 0x8d01; 
0x000abad5: inc esi; or byte ptr [esi + 0x5f], bl; ret; 
0x001268a1: inc esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00128357: inc esi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012d065: inc esi; push cs; aam 8; add dh, byte ptr [ecx + 0x41140e0a]; ret; 
0x001452ad: inc esi; push cs; fmul qword ptr [edx]; add dh, byte ptr [edx + 0x41140e0a]; ret; 
0x001496d5: inc esi; push cs; fsub dword ptr [edx]; add bh, byte ptr [eax + 0x41140e0a]; ret; 
0x00141475: inc esi; push cs; mov ah, 1; add bh, byte ptr [esi + 0x41140e0a]; ret; 
0x00143e01: inc esi; push cs; mov ah, 8; add dl, byte ptr [ebp + 0x41140e0a]; ret; 
0x00146da1: inc esi; push cs; mov al, 2; add dl, byte ptr [ebx + 0x41140e0a]; ret; 
0x00143eb5: inc esi; push cs; mov al, 8; add al, byte ptr [eax + 0x41140e0a]; ret; 
0x0012a381: inc esi; push cs; movsb byte ptr es:[edi], byte ptr [esi]; or dword ptr [ebx], eax; ret 0xa02; 
0x00138a37: inc esi; push cs; or al, 0x41; ret; 
0x00127470: inc esi; push cs; test al, 0x10; add al, byte ptr [esi + 0x41100e0a]; ret; 
0x00144e75: inc esi; push cs; test al, 0x10; add dl, byte ptr [eax + 0x41140e0a]; ret; 
0x00131699: inc esi; push cs; test al, 1; add cl, byte ptr [esi + 0x41140e0a]; ret; 
0x000b7656: inc esi; ret 0xfff6; 
0x000e85b6: inc esi; sal ebx, cl; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000a749c: inc esi; sbb al, 0x39; ret 0x860f; 
0x000a755d: inc esi; sbb al, 0x39; ret 0x870f; 
0x0009459b: inc esi; sbb byte ptr [ebx + 0x5e5b08c4], al; ret; 
0x00044c45: inc esi; sbb byte ptr [ecx - 0x76ebdbbc], cl; ret 0xf089; 
0x00108055: inc esi; sub byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0002c23d: inc esi; sub byte ptr [ebx + 0x5e5b10c4], al; ret; 
0x00127071: inc esi; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011903; ret; 
0x0012f03d: inc esi; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011d03; ret; 
0x00126eb5: inc esi; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa019e03; ret; 
0x00126fdd: inc esi; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01bf03; ret; 
0x0012afb9: inc esi; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01fe03; ret; 
0x0012b0c5: inc esi; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa025f03; ret; 
0x0012712d: inc esi; xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa02a103; ret; 
0x0005ed0c: inc esi; cld; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; ret; 
0x0012c2db: inc esi; ret; 
0x000f412c: inc esp; adc dword ptr [eax], eax; add al, ch; ret; 
0x0013e72b: inc esp; add ah, al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012ab0d: inc esp; add ah, byte ptr [ebx + 0x410c0e0a]; ret; 
0x0013811b: inc esp; add al, ah; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014c03b: inc esp; add al, byte ptr [ebx + 0x41140e0a]; ret; 
0x0014542f: inc esp; add al, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x0014b35d: inc esp; add al, byte ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x0012b9d3: inc esp; add al, byte ptr [edx + 0x41140e0a]; ret; 
0x00136b9b: inc esp; add al, dl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013f5e3: inc esp; add bh, byte ptr [esi + 0x41140e0a]; ret; 
0x00137ebb: inc esp; add bl, byte ptr [ebp + 0x41140e0a]; ret; 
0x001253d6: inc esp; add bl, byte ptr [esi + 0x41100e0a]; ret; 
0x0013162c: inc esp; add byte ptr [eax], al; add al, bh; ret; 
0x00141604: inc esp; add byte ptr [eax], al; add al, dl; ret; 
0x0003ea90: inc esp; add byte ptr [ecx], al; shl eax, 3; ret; 
0x0013f857: inc esp; add ch, dh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00136f83: inc esp; add cl, byte ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x001291f3: inc esp; add cl, ch; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00136afb: inc esp; add cl, dh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001405f3: inc esp; add dh, bh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013653c: inc esp; add dl, byte ptr [edx + 0x41080e0a]; ret; 
0x001381bb: inc esp; add dl, ch; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00136dc3: inc esp; add dl, dh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00139d29: inc esp; add dword ptr [ebx], 0x62; ret; 
0x0013bdb1: inc esp; add dword ptr [ebx], 0x65; ret; 
0x00127c09: inc esp; add dword ptr [ebx], 0x6a; ret; 
0x0013bd8d: inc esp; add dword ptr [ebx], 0x6c; ret; 
0x0014afd9: inc esp; add dword ptr [ebx], 0x77; ret; 
0x001393c9: inc esp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00146bd7: inc esp; add ebp, dword ptr [ecx + eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00147b2b: inc esp; add ebp, dword ptr [edx + 0x140e0a01]; inc ecx; ret; 
0x00127887: inc esp; add ebp, dword ptr [edx + eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00149ebb: inc esp; add ebx, dword ptr [ebp + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014b70f: inc esp; add ebx, dword ptr [edx + 4]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013cc8f: inc esp; add ecx, dword ptr [edi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129275: inc esp; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0013ba7f: inc esp; add edi, dword ptr [edx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000385ef: inc esp; and al, 0x10; add byte ptr [eax], 0; add cl, ch; ret 0xfffe; 
0x000f9c5f: inc esp; and al, 0x10; mov byte ptr [edx], al; xor eax, eax; ret; 
0x000f96d7: inc esp; and al, 0x10; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x000f96b5: inc esp; and al, 0x10; mov dword ptr [eax], 0xffffffff; mov eax, 0x55; ret; 
0x000f9ac7: inc esp; and al, 0x10; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0002a000: inc esp; and al, 0x14; add esp, 0x18; pop ebx; ret; 
0x00095bb8: inc esp; and al, 0x14; add esp, 0x20; pop ebx; ret; 
0x000f9713: inc esp; and al, 0x14; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x000f9706: inc esp; and al, 0x14; mov dword ptr [eax], 0xfffffffe; xor eax, eax; ret; 
0x000f9b6c: inc esp; and al, 0x14; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x00099dff: inc esp; and al, 0x18; add esp, 0x24; pop ebx; ret; 
0x0005d6d5: inc esp; and al, 0x18; add esp, 0x28; pop ebx; ret; 
0x00095563: inc esp; and al, 0x18; call 0x94920; add esp, 0x14; ret; 
0x000f9b12: inc esp; and al, 0x18; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x000f9b05: inc esp; and al, 0x18; mov dword ptr [eax], 0xfffffffe; xor eax, eax; ret; 
0x00090b0a: inc esp; and al, 0x1c; add esp, 0x2c; pop ebx; ret; 
0x000f9bc7: inc esp; and al, 0x1c; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x000f9b8a: inc esp; and al, 0x1c; mov dword ptr [eax], 0xffffffff; mov eax, 7; ret; 
0x000f9bba: inc esp; and al, 0x1c; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x000437cc: inc esp; and al, 0x20; add esp, 0x24; pop ebx; ret; 
0x000561d1: inc esp; and al, 0x24; add bl, ch; ret; 
0x0008937e: inc esp; and al, 0x24; add esp, 0x28; pop ebx; ret; 
0x000893fe: inc esp; and al, 0x28; add esp, 0x2c; pop ebx; ret; 
0x000f9a56: inc esp; and al, 0xc; mov dword ptr [eax], 0xffffffff; xor eax, eax; ret; 
0x000f9720: inc esp; and al, 0xc; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x00060c11: inc esp; and al, 0xfc; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0004e6a5: inc esp; and al, 0xfc; and eax, 0xc00; ret; 
0x00036ce9: inc esp; and al, 4; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x000be89b: inc esp; and al, 4; add dword ptr [ecx], 0x838d0000; ret 0xfc6f; 
0x000ead9b: inc esp; and al, 4; add eax, 0x20; ret; 
0x0004f7e5: inc esp; and al, 4; and eax, 0x7f; ret; 
0x0004e6e1: inc esp; and al, 4; bswap eax; ret; 
0x0005cf47: inc esp; and al, 4; fadd qword ptr [esp + 4]; ret; 
0x0005d00b: inc esp; and al, 4; fild qword ptr [esp + 4]; ret; 
0x0004e071: inc esp; and al, 4; fistp dword ptr [esp + 4]; mov eax, dword ptr [esp + 4]; ret; 
0x0005cfb4: inc esp; and al, 4; fld dword ptr [esp + 4]; ret; 
0x0005cfed: inc esp; and al, 4; fld qword ptr [esp + 4]; ret; 
0x0005c938: inc esp; and al, 4; fld qword ptr [esp]; leave; ret; 
0x0002bb1d: inc esp; and al, 4; lea eax, dword ptr [eax + eax*2]; mov eax, dword ptr [ecx + eax*4 + 0x367c]; ret; 
0x000524e6: inc esp; and al, 4; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x000f9a9a: inc esp; and al, 4; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x000524c8: inc esp; and al, 4; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x000524d8: inc esp; and al, 4; mov dword ptr [eax + 8], edx; xor eax, eax; ret; 
0x0006b649: inc esp; and al, 4; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0006b656: inc esp; and al, 4; mov dword ptr [eax], 0xffffffff; xor eax, eax; ret; 
0x000315be: inc esp; and al, 4; mov dword ptr [ecx + 0x1314], eax; ret; 
0x0008ea4b: inc esp; and al, 4; mov dword ptr [ecx + 0x2220], eax; ret; 
0x000e0718: inc esp; and al, 4; mov dword ptr [ecx + 0x2dc0], eax; ret; 
0x00036d08: inc esp; and al, 4; mov eax, dword ptr [eax + 0x14]; ret; 
0x0005f9a7: inc esp; and al, 4; mov eax, dword ptr [eax + 0x1c]; mov eax, dword ptr [eax + 0x114]; ret; 
0x0005f985: inc esp; and al, 4; mov eax, dword ptr [eax + 0x1c]; mov eax, dword ptr [eax + 0x12c]; ret; 
0x000d7df1: inc esp; and al, 4; mov eax, dword ptr [eax + 0x20]; ret; 
0x000f1d85: inc esp; and al, 4; mov eax, dword ptr [eax + 0xc]; ret; 
0x000f8199: inc esp; and al, 4; mov eax, dword ptr [eax]; add eax, 0xc; ret; 
0x000524ba: inc esp; and al, 4; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0005cf41: inc esp; and al, 4; movsd qword ptr [esp + 4], xmm0; fadd qword ptr [esp + 4]; ret; 
0x0004e056: inc esp; and al, 4; or eax, 0x80000000; ret; 
0x000bab31: inc esp; and al, 4; ret 0; 
0x0009395e: inc esp; and al, 4; ret 1; 
0x00054568: inc esp; and al, 4; ret 2; 
0x0008ca5e: inc esp; and al, 4; ret 4; 
0x0002bc2a: inc esp; and al, 4; sete al; movzx eax, al; ret; 
0x0004e19d: inc esp; and al, 4; shr eax, 0x1f; ret; 
0x0005d125: inc esp; and al, 4; shr eax, cl; add esp, 0x10; ret; 
0x000ead93: inc esp; and al, 4; sub eax, 0x20; ret; 
0x0004e6f2: inc esp; and al, 4; xchg ah, al; ret; 
0x0007fad1: inc esp; and al, 4; xor edx, edx; div dword ptr [esp + 8]; ret; 
0x0007fae1: inc esp; and al, 4; cdq; idiv dword ptr [esp + 8]; ret; 
0x0004e6d1: inc esp; and al, 4; fabs; ret; 
0x0002c3a7: inc esp; and al, 4; ret; 
0x0003e680: inc esp; and al, 8; add dh, byte ptr [ebp + 0x19]; ret; 
0x0003e712: inc esp; and al, 8; add dword ptr [ebp - 0x1b], esi; ret; 
0x0003e6b7: inc esp; and al, 8; add dword ptr [ebp - 0x1e], esi; ret; 
0x000d670e: inc esp; and al, 8; add esp, 0xc; pop ebx; ret; 
0x0003ea8c: inc esp; and al, 8; lea eax, dword ptr [eax + eax + 1]; shl eax, 3; ret; 
0x00060af5: inc esp; and al, 8; lock add dword ptr [edx], eax; ret; 
0x00060b25: inc esp; and al, 8; lock and dword ptr [edx], eax; ret; 
0x00060b95: inc esp; and al, 8; lock or dword ptr [edx], eax; ret; 
0x00052449: inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00061074: inc esp; and al, 8; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00060bf5: inc esp; and al, 8; mov ecx, dword ptr [esp + 0xc]; cmpxchg dword ptr [edx], ecx; ret; 
0x00060bd5: inc esp; and al, 8; mov ecx, dword ptr [esp + 0xc]; lock cmpxchg dword ptr [edx], ecx; ret; 
0x00108fd4: inc esp; and al, 8; mov edi, edx; pop esi; ret; 
0x00052438: inc esp; and al, 8; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0002c458: inc esp; and al, 8; pop ebx; ret; 
0x0010672f: inc esp; and al, 8; pop edi; ret; 
0x0003e735: inc esp; and al, 8; shl eax, 4; add eax, 0x14; ret; 
0x00060bc5: inc esp; and al, 8; xchg dword ptr [edx], eax; ret; 
0x0004e091: inc esp; and al, 9; shr eax, 0x1f; leave; ret; 
0x000ff77b: inc esp; inc esi; add bh, byte ptr [ecx]; ret 0x870f; 
0x000b537e: inc esp; or al, byte ptr [eax]; add byte ptr [ebx - 0x7cd7dbac], cl; ret 0xc731; 
0x0003edd8: inc esp; or byte ptr ds:[ebx + 0x5e5b10c4], al; pop edi; ret; 
0x001341bd: inc esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00128387: inc esp; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00083eee: inc esp; pop ebx; pop esi; pop edi; ret; 
0x00036e75: inc esp; pop ebx; pop esi; ret; 
0x00144543: inc esp; push cs; or al, 0x41; ret; 
0x0009b3a2: inc esp; push es; or dword ptr [ecx], ecx; ret 0x348d; 
0x0003e812: inc esp; ret 0x8b08; 
0x00124f54: inc esp; ret 2; 
0x000e4e42: inc esp; ret 6; 
0x00006228: inc esp; ret 9; 
0x0004ae56: inc esp; test dword ptr [ebx + edx*8], eax; call 0x831bb2e7; ret 0x8301; 
0x0012262c: inc esp; popfd; add dword ptr [eax], eax; ret 0xf75c; 
0x000b9a38: inc esp; ret; 
0x0012bef3: insb byte ptr es:[edi], dx; add ah, byte ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x000a5910: insb byte ptr es:[edi], dx; add al, 0xf8; inc dword ptr [ebx + 0x5e5b04c4]; pop edi; ret; 
0x00065530: insb byte ptr es:[edi], dx; add bh, ah; inc dword ptr [ebx + 0x5e5b20c4]; ret; 
0x00131303: insb byte ptr es:[edi], dx; add bl, byte ptr [eax + 0x41140e0a]; ret; 
0x0011faa4: insb byte ptr es:[edi], dx; add byte ptr gs:[eax], al; popfd; ret 0xfff0; 
0x00145193: insb byte ptr es:[edi], dx; add ch, ah; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014322b: insb byte ptr es:[edi], dx; add ch, byte ptr [eax + 0x41140e0a]; ret; 
0x00127889: insb byte ptr es:[edi], dx; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x001325c5: insb byte ptr es:[edi], dx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0013f0f3: insb byte ptr es:[edi], dx; add ecx, dword ptr [edi + 0x140e0a01]; inc ecx; ret; 
0x00099d46: insb byte ptr es:[edi], dx; and al, 0x10; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0004e650: insb byte ptr es:[edi], dx; and al, 0xfc; ret; 
0x0005d02b: insb byte ptr es:[edi], dx; and al, 4; fstp dword ptr [esp + 4]; fld dword ptr [esp + 4]; ret; 
0x0005d00f: insb byte ptr es:[edi], dx; and al, 4; ret; 
0x001275fb: insb byte ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00125292: insb byte ptr es:[edi], dx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012ee37: insb byte ptr es:[edi], dx; push cs; or al, 0x41; ret; 
0x000e4d1a: insb byte ptr es:[edi], dx; ret; 
0x00006e15: insd dword ptr es:[edi], dx; add byte ptr [eax], al; aad 0x31; or al, 0; ret; 
0x001420bd: insd dword ptr es:[edi], dx; add cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00139055: insd dword ptr es:[edi], dx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00126bc9: insd dword ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00125f53: insd dword ptr es:[edi], dx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x000612ea: insd dword ptr es:[edi], dx; or cl, cl; ret; 
0x0012c502: insd dword ptr es:[edi], dx; push cs; or al, 0x41; ret; 
0x0010b64f: insd dword ptr es:[edi], dx; ret; 
0x000f24b6: int 0x5e; pop edi; pop ebp; ret; 
0x000bf5af: int 0x70; idiv bh; add esp, 0x24; pop ebx; ret; 
0x000286e5: int 0x80; ret; 
0x000a3f87: int 0x83; ret 0xe901; 
0x001291f5: int 0xa; push cs; adc al, 0x41; ret; 
0x000315b9: int 0xfa; adc dword ptr [eax], eax; mov eax, dword ptr [esp + 4]; mov dword ptr [ecx + 0x1314], eax; ret; 
0x0012a29a: int 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0010a078: jecxz 0x10a083; ret; 
0x00143631: jecxz 0x14363d; push cs; adc al, 0x41; ret; 
0x000b46a2: jecxz 0xb46ad; ret; 
0x000c7819: jecxz 0xc77fb; cmc; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000c8e3d: jecxz 0xc8e48; ret; 
0x000d8595: jecxz 0xd85a0; ret; 
0x000eddd4: jecxz 0xedd59; ret 0x8958; 
0x00119047: jno 0x119018; sti; sal byte ptr [ebp - 0x164a245b], 0x5b; ret 0x3956; 
0x0012599a: jno 0x1259a6; ret; 
0x00126b59: jno 0x126b5c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127582: jno 0x12758e; push cs; or al, 0x41; ret; 
0x0013049e: jno 0x1304aa; ret; 
0x00131a14: jno 0x131a20; push cs; adc al, 0x41; ret; 
0x00131ec8: jno 0x131ed4; push cs; adc al, 0x41; ret; 
0x00133204: jno 0x133210; push cs; adc al, 0x41; ret; 
0x0013369c: jno 0x1336a8; push cs; adc al, 0x41; ret; 
0x00133b34: jno 0x133b40; push cs; adc al, 0x41; ret; 
0x00133fcc: jno 0x133fd8; push cs; adc al, 0x41; ret; 
0x00135ce9: jno 0x135cf5; push cs; adc al, 0x41; ret; 
0x00135f34: jno 0x135f40; push cs; adc al, 0x41; ret; 
0x00135f8c: jno 0x135f98; push cs; adc al, 0x41; ret; 
0x001361dc: jno 0x1361e8; push cs; adc al, 0x41; ret; 
0x001368e4: jno 0x1368f0; push cs; adc al, 0x41; ret; 
0x0013697c: jno 0x136988; push cs; adc al, 0x41; ret; 
0x00137005: jno 0x137011; push cs; adc al, 0x41; ret; 
0x0013750e: jno 0x13751a; push cs; or al, 0x41; ret; 
0x0013a15c: jno 0x13a168; push cs; adc al, 0x41; ret; 
0x0013b4a1: jno 0x13b4ad; push cs; adc al, 0x41; ret; 
0x0013bad6: jno 0x13bae2; ret; 
0x0013dc9a: jno 0x13dca6; push cs; or al, 0x41; ret; 
0x0013dcf2: jno 0x13dcfe; ret; 
0x0013e7db: jno 0x13e7e7; push cs; or al, 0x41; ret; 
0x0013f70d: jno 0x13f719; push cs; adc al, 0x41; ret; 
0x0014192d: jno 0x141939; push cs; adc al, 0x41; ret; 
0x00144001: jno 0x144011; or al, 0x41; ret; 
0x0014405d: jno 0x14406d; or al, 0x41; ret; 
0x00144aa5: jno 0x144aa8; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00146555: jno 0x146561; push cs; adc al, 0x41; ret; 
0x00147602: jno 0x14760e; push cs; adc al, 0x41; ret; 
0x00047ff9: jno 0x4800a; popfd; ret 0xc283; 
0x000611fd: jno 0x6120f; mov dword ptr [ecx + 0x14], edi; xor eax, eax; ret; 
0x0006128b: jno 0x6129d; mov dword ptr [ecx + 0x14], edi; mov dword ptr [ecx + 0x18], eax; xor eax, eax; ret; 
0x00099dd3: jno 0x99d5e; ret 0xe283; 
0x000bf84c: jno 0xbf84a; dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; ret 0; 
0x00125ba7: jnp 0x125bb3; push cs; adc al, 0x41; ret; 
0x00128e0a: jnp 0x128e1a; or al, 0x41; ret; 
0x001290ca: jnp 0x1290da; or al, 0x41; ret; 
0x0012b1ce: jnp 0x12b1da; ret; 
0x00130172: jnp 0x13017e; push cs; adc al, 0x41; ret; 
0x00130c42: jnp 0x130c4e; push cs; or al, 0x41; ret; 
0x00130c7a: jnp 0x130c86; push cs; or al, 0x41; ret; 
0x0013b7fe: jnp 0x13b80a; push cs; adc al, 0x41; ret; 
0x0013df4e: jnp 0x13df5a; push cs; or al, 0x41; ret; 
0x00144a63: jnp 0x144a6f; push cs; adc al, 0x41; ret; 
0x00145553: jnp 0x14555f; push cs; or al, 0x41; ret; 
0x00147eaf: jnp 0x147ebb; push cs; adc al, 0x41; ret; 
0x00148296: jnp 0x1482a2; push cs; or al, 0x41; ret; 
0x0014b5dc: jnp 0x14b5e8; push cs; adc al, 0x41; ret; 
0x0004407d: jnp 0x440f5; or al, 0; add ecx, 0x10d003; mov eax, dword ptr [ecx + 0x6400]; ret; 
0x00059f71: jnp 0x59f05; cld; inc dword ptr [ebx + 0x5e5b50c4]; ret; 
0x0010f622: jns 0x10f5b5; adc eax, 0x943f07b2; ret 0x8910; 
0x000db8ed: jns 0x115dd3f; ret 0x5489; 
0x00127442: jns 0x12744e; push cs; or al, 0x41; ret; 
0x0012ae55: jns 0x12ae61; push cs; adc al, 0x41; ret; 
0x0012dd2d: jns 0x12dd39; push cs; adc al, 0x41; ret; 
0x001309ae: jns 0x1309be; or al, 0x41; ret; 
0x0013131c: jns 0x131328; push cs; adc al, 0x41; ret; 
0x00131c58: jns 0x131c64; push cs; adc al, 0x41; ret; 
0x00132f94: jns 0x132fa0; push cs; adc al, 0x41; ret; 
0x0013342c: jns 0x133438; push cs; adc al, 0x41; ret; 
0x0013c907: jns 0x13c913; push cs; adc al, 0x41; ret; 
0x0014045f: jns 0x14046f; adc al, 0x41; ret; 
0x00142009: jns 0x142015; push cs; adc al, 0x41; ret; 
0x00142056: jns 0x142062; push cs; or al, 0x41; ret; 
0x00143469: jns 0x14346c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001435b1: jns 0x1435bd; push cs; adc al, 0x41; ret; 
0x00143852: jns 0x14385e; push cs; or al, 0x41; ret; 
0x0014a73d: jns 0x14a749; push cs; adc al, 0x41; ret; 
0x0002c609: jns 0x2c60a; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0002e53a: jns 0x2e543; neg eax; adc edx, 0; neg edx; ret; 
0x0002e576: jns 0x2e57a; neg eax; ret; 
0x0002e5a6: jns 0x2e5aa; neg eax; ret; 
0x0000433c: jns 0x4344; add byte ptr [eax], al; ret 7; 
0x0005231f: jns 0x5232b; mov eax, 9; add esp, 4; pop esi; ret; 
0x0005c84d: jns 0x5c855; fdivr dword ptr [ebx - 0x40610]; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00061200: jns 0x61216; xor eax, eax; ret; 
0x0006128e: jns 0x612a4; mov dword ptr [ecx + 0x18], eax; xor eax, eax; ret; 
0x000647f8: jns 0x647e9; xor edx, edx; sub eax, edx; pop esi; ret; 
0x0007e3f5: jns 0x7e3f1; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x0007e42f: jns 0x7e42b; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0008e3a3: jns 0x8e39e; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0000c19c: jns 0xc1a0; add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret; 
0x000ccb88: jns 0xccb8b; add dh, byte ptr [eax + ebx - 0x7d]; ret 0x8301; 
0x00118ed4: jo 0x118e61; dec ebx; ret 0xbe30; 
0x001190e8: jo 0x119075; dec ebx; ret 0x51a3; 
0x0012165c: jo 0x12167c; add dword ptr [eax], eax; ret; 
0x00012588: jo 0x12583; add al, byte ptr [eax]; ret 0; 
0x0012618c: jo 0x12619c; or al, 0x41; ret; 
0x001261c4: jo 0x1261d4; or al, 0x41; ret; 
0x00126c09: jo 0x126c15; push cs; adc al, 0x41; ret; 
0x0012887b: jo 0x12888b; adc al, 0x41; ret; 
0x0012eaf2: jo 0x12eb02; or al, 0x41; ret; 
0x0012fe0f: jo 0x12fe14; mov al, byte ptr [edx + ecx]; push cs; adc al, 0x41; ret; 
0x001310e5: jo 0x1310f1; push cs; adc al, 0x41; ret; 
0x00135ab9: jo 0x135ac5; push cs; adc al, 0x41; ret; 
0x001364b3: jo 0x1364bf; push cs; adc al, 0x41; ret; 
0x0013650b: jo 0x136517; push cs; adc al, 0x41; ret; 
0x001365f7: jo 0x136603; push cs; adc al, 0x41; ret; 
0x0013664f: jo 0x13665b; push cs; adc al, 0x41; ret; 
0x001382b4: jo 0x1382c0; push cs; adc al, 0x41; ret; 
0x0013b1c2: jo 0x13b1ce; push cs; or al, 0x41; ret; 
0x0013c192: jo 0x13c19e; push cs; adc al, 0x41; ret; 
0x0013f410: jo 0x13f41c; push cs; adc al, 0x41; ret; 
0x00140636: jo 0x14063a; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014545e: jo 0x14546a; push cs; adc al, 0x41; ret; 
0x0014568f: jo 0x145694; add al, 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00146483: jo 0x14648f; push cs; adc al, 0x41; ret; 
0x00147fbd: jo 0x147fc9; push cs; adc al, 0x41; ret; 
0x0014b3f1: jo 0x14b401; adc al, 0x41; ret; 
0x0002c05e: jo 0x2c05f; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0002d170: jo 0x2d0fb; ret 0x88b; 
0x00049795: jo 0x497f2; pop esi; pop edi; pop ebp; ret; 
0x0004b335: jo 0x4b392; pop esi; pop edi; pop ebp; ret; 
0x0004c982: jo 0x4c9e2; pop edi; pop ebp; ret; 
0x0004e4e3: jo 0x4e4f5; mov dword ptr [eax + 0x14], edi; xor eax, eax; ret; 
0x000565c9: jo 0x565cb; add byte ptr [ebx + 0x5e5b0cc4], al; ret; 
0x000565f6: jo 0x565f8; add byte ptr [ebp - 0x76368b40], al; ret 0xf089; 
0x000566d9: jo 0x566db; add bl, ch; ret; 
0x0005d731: jo 0x5d72f; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0006772b: jo 0x676b8; push ebp; or byte ptr [ebp - 0x7cef8b0a], al; ret 0x8904; 
0x0006914a: jo 0x690d7; push ebp; or byte ptr [ebp - 0x7cef8b0a], al; ret 0x8904; 
0x0006fc3a: jo 0x6fbc7; push ebp; or byte ptr [ebp - 0x7cef8b0a], al; ret 0x8904; 
0x000715f6: jo 0x71583; push ebp; or byte ptr [ebp - 0x7cef8b0a], al; ret 0x8904; 
0x0007305a: jo 0x72fe7; push ebp; or byte ptr [ebp - 0x7cef8b0a], al; ret 0x8904; 
0x00074b18: jo 0x74aa5; push ebp; or byte ptr [ebp - 0x7cef8b0a], al; ret 0x8904; 
0x0007c361: jo 0x7c2e6; ret 0x8901; 
0x0007c3a5: jo 0x7c32a; ret 0x8901; 
0x0007c558: jo 0x7c4dd; ret 0x8901; 
0x0007c67e: jo 0x7c603; ret 0x8901; 
0x0007c68e: jo 0x7c613; ret 0x8901; 
0x0007c6a8: jo 0x7c62d; ret 0x8901; 
0x0007c790: jo 0x7c715; ret 0x8901; 
0x0007c93e: jo 0x7c8c3; ret 0x8901; 
0x0007c959: jo 0x7c8de; ret 0x8901; 
0x0007c98f: jo 0x7c914; ret 0x8901; 
0x0007ca82: jo 0x7ca07; ret 0x8901; 
0x0007cc0e: jo 0x7cb93; ret 0x8901; 
0x0007cc2d: jo 0x7cbb2; ret 0x8901; 
0x0007cd18: jo 0x7cc9d; ret 0x8301; 
0x0007cd2e: jo 0x7ccb3; ret 0x8301; 
0x0007cd44: jo 0x7ccc9; ret 0x8301; 
0x0007e60c: jo 0x7e685; cli; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x0009710b: jo 0x97098; push ebp; or byte ptr [ebp - 0x7cef8b0a], al; ret 0x8904; 
0x000c2a22: jo 0xc2a4c; mov eax, 1; add esp, 0x10; pop esi; ret; 
0x000c80ec: jo 0xc80b8; cmc; inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; ret; 
0x000d05a9: jo 0xd0606; pop esi; pop edi; pop ebp; ret; 
0x000d2af1: jo 0xd2b03; add esp, 8; pop ebx; pop esi; ret; 
0x000d3dc2: jo 0xd3e1f; pop esi; pop edi; pop ebp; ret; 
0x000d3e75: jo 0xd3ed2; pop esi; pop edi; pop ebp; ret; 
0x000d5ead: jo 0xd5e6b; mov edi, 0x31f289be; ret 0xca31; 
0x00116dd8: jp 0x116d9c; cmc; call edx; ret; 
0x001271ef: jp 0x1271fb; push cs; or al, 0x41; ret; 
0x0012794d: jp 0x12795d; adc al, 0x41; ret; 
0x00129b49: jp 0x129b55; push cs; adc al, 0x41; ret; 
0x0012a593: jp 0x12a59f; push cs; or al, 0x41; ret; 
0x0012a5c3: jp 0x12a5cf; push cs; or al, 0x41; ret; 
0x0012e248: jp 0x12e254; ret; 
0x001302ca: jp 0x1302d0; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00134dba: jp 0x134dca; or al, 0x41; ret; 
0x00134ec2: jp 0x134ed2; or al, 0x41; ret; 
0x0013ba81: jp 0x13ba84; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013cf06: jp 0x13cf12; push cs; or al, 0x41; ret; 
0x0013f427: jp 0x13f433; push cs; adc al, 0x41; ret; 
0x00146664: jp 0x146670; push cs; adc al, 0x41; ret; 
0x00147c9c: jp 0x147ca8; push cs; adc al, 0x41; ret; 
0x00149dcc: jp 0x149dd8; push cs; adc al, 0x41; ret; 
0x0014bd5f: jp 0x14bd6b; ret; 
0x0014c1ce: jp 0x14c1da; push cs; adc al, 0x41; ret; 
0x0004e9db: jp 0x4e9de; add byte ptr [edi], cl; test byte ptr [edx - 0x76000002], dl; ret 0xbeeb; 
0x0005d7d2: jp 0x5d76a; cld; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000688e5: jp 0x688eb; cld; dec dword ptr [ecx - 0x5017dbfc]; ret 0xfffb; 
0x0008e2bd: jp 0x8e2b8; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0009c985: jp 0x9c97f; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x000c25a0: jp 0xc25ca; pop esi; pop edi; ret; 
0x000db6d9: jp 0xdb6cf; inc dword ptr [ebx + 0x5e5b20c4]; ret; 
0x00120801: lcall 0:0xc1bcfff2; ret; 
0x00081632: lcall 0x10c4:0x83fffa25; pop ebx; ret; 
0x00074a44: lcall 0x2454:0x89fffc66; or al, 0x8d; xchg eax, ebx; ret 0xfc0b; 
0x0009c9c1: lcall 0x5b08:0xc483fff8; ret; 
0x0002a20b: lcall 0x5b0c:0xc483ffff; ret; 
0x00079862: lcall 0x8904:0xe983fffa; ret 0xe283; 
0x0006abb2: lcall 0xcc4:0x83fffb97; pop ebx; ret; 
0x0012462b: lcall ptr [eax + 0x7f]; add al, byte ptr [eax]; inc edx; ret 0xfffc; 
0x0012353b: lcall ptr [eax + 8]; add al, byte ptr [eax]; ret 0xfa0e; 
0x0012288b: lcall ptr [eax - 0xffffe52]; ret 0xfff7; 
0x0010df1b: lcall ptr [ebp + 0x34ffeec2]; ret; 
0x0010df13: lcall ptr [ebp + 0x3effeec2]; ret; 
0x0010df2b: lcall ptr [ebp - 0x3100113e]; ret; 
0x000e9c73: lcall ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000e9d04: lcall ptr [ebx + 0x5e]; pop edi; ret; 
0x00102e52: lcall ptr [ebx + 0x5e]; ret; 
0x00116d5f: lcall ptr [ebx + 0x7afff5bf]; ret 0xfff5; 
0x0010a6e2: lcall ptr [ebx - 0x71]; add byte ptr [eax - 1], bh; mov edx, 0xffffffff; ret; 
0x000768ac: lcall ptr [ebx - 1]; loope 0x76869; ret; 
0x00076aac: lcall ptr [ebx - 1]; loope 0x76a69; ret 1; 
0x0009243c: lcall ptr [ebx - 1]; loope 0x923f9; ret; 
0x000bd29c: lcall ptr [ebx - 1]; loope 0xbd259; add al, byte ptr [eax]; add byte ptr [eax], al; ret; 
0x000cb93c: lcall ptr [ebx - 1]; loope 0xcb8f9; ret 0; 
0x00096caf: lcall ptr [ecx + 0x5b08c483]; pop ebp; ret; 
0x0003f92d: lcall ptr [esi + 0x5f]; pop ebp; ret; 
0x0003ea8f: lea eax, dword ptr [eax + eax + 1]; shl eax, 3; ret; 
0x0002bb3a: lea eax, dword ptr [eax + eax*2]; mov dword ptr [ecx + eax*4 + 0x3680], 0; xor eax, eax; ret; 
0x0002bb20: lea eax, dword ptr [eax + eax*2]; mov eax, dword ptr [ecx + eax*4 + 0x367c]; ret; 
0x0002bb00: lea eax, dword ptr [eax + eax*2]; mov edx, dword ptr [esp + 8]; mov dword ptr [ecx + eax*4 + 0x367c], edx; xor eax, eax; ret; 
0x0002b853: lea eax, dword ptr [eax + eax*2]; pop ebx; ret; 
0x00059d4d: lea eax, dword ptr [eax + eax*4]; lea eax, dword ptr [edx + eax*4]; add esp, 0x58; pop ebx; ret; 
0x0002b82f: lea eax, dword ptr [eax*8 + 3]; pop ebx; ret; 
0x000565c6: lea eax, dword ptr [ebx + 0x7088]; add esp, 0xc; pop ebx; pop esi; ret; 
0x0005724a: lea eax, dword ptr [ebx + 0x74dc]; pop ebx; ret; 
0x0006a7a3: lea eax, dword ptr [ebx + 0x829c]; add esp, 4; pop ebx; ret; 
0x000d8ffd: lea eax, dword ptr [ebx - 0x36f83]; add esp, 0x18; pop ebx; pop esi; ret; 
0x000d8f3e: lea eax, dword ptr [ebx - 0x36f92]; add esp, 0x18; pop ebx; pop esi; ret; 
0x000c77d3: lea eax, dword ptr [ebx - 0x38558]; pop ebx; ret; 
0x000c77cb: lea eax, dword ptr [ebx - 0x38580]; pop ebx; ret; 
0x000c77a2: lea eax, dword ptr [ebx - 0x385b9]; pop ebx; ret; 
0x000c77aa: lea eax, dword ptr [ebx - 0x385cb]; pop ebx; ret; 
0x000c77b7: lea eax, dword ptr [ebx - 0x385e8]; pop ebx; ret; 
0x00045fdd: lea eax, dword ptr [ebx - 0x41b9a]; pop ebx; ret; 
0x00027bbc: lea eax, dword ptr [ebx - 0x45964]; add esp, 0x10; pop ebx; pop esi; ret; 
0x0012d7b6: lea eax, dword ptr [ebx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0005a02a: lea eax, dword ptr [ecx + 0x142c]; ret; 
0x000e0178: lea eax, dword ptr [ecx + 0xe57c]; ret; 
0x000e8143: lea eax, dword ptr [ecx - 0x359c0]; ret; 
0x000dfdab: lea eax, dword ptr [ecx - 0x3620d]; ret; 
0x000dfdb2: lea eax, dword ptr [ecx - 0x36214]; ret; 
0x000dfdc3: lea eax, dword ptr [ecx - 0x3621b]; ret; 
0x000dfdbc: lea eax, dword ptr [ecx - 0x36223]; ret; 
0x000d11d5: lea eax, dword ptr [ecx - 0x3789a]; ret; 
0x000d11af: lea eax, dword ptr [ecx - 0x378a3]; ret; 
0x00037eb3: lea eax, dword ptr [ecx - 0x43b8c]; ret; 
0x00037eba: lea eax, dword ptr [ecx - 0x43ba4]; ret; 
0x00059d50: lea eax, dword ptr [edx + eax*4]; add esp, 0x58; pop ebx; ret; 
0x00002f04: lea eax, dword ptr [edx]; add byte ptr [eax], al; ret 0; 
0x000e9fae: lea eax, dword ptr [esi + 1]; pop ebx; pop esi; pop edi; ret; 
0x00004bd4: lea ecx, dword ptr [eax]; add byte ptr [eax], al; ret; 
0x0010a6df: lea ecx, dword ptr [edx - 0x70a4000f]; add byte ptr [eax - 1], bh; mov edx, 0xffffffff; ret; 
0x000f517c: lea ecx, dword ptr [edx - 0x7d000000]; ret 0x8901; 
0x0012fcd5: lea ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0012f055: lea ecx, dword ptr [edx]; ret; 
0x000ec161: lea edi, dword ptr [eax + 1]; ret; 
0x0002df8a: lea edi, dword ptr [edi]; ret; 
0x0002a05f: lea edi, dword ptr [esi - 0x3b7c0001]; add al, 0x5b; ret; 
0x000dfd7c: lea edx, dword ptr [ecx - 0x712ba]; mov eax, dword ptr [ecx - 0x320]; mov dword ptr [eax], edx; ret; 
0x0002df84: lea esi, dword ptr [esi]; lea edi, dword ptr [edi]; ret; 
0x00060c19: lea esi, dword ptr [esi]; lock add dword ptr [esp - 4], 0; ret; 
0x000fad5a: lea esi, dword ptr [esi]; xor eax, eax; pop ebx; ret; 
0x0002c469: lea esi, dword ptr [esi]; xor eax, eax; ret; 
0x000f3d0c: lea esi, dword ptr [esi]; ret; 
0x000cf7b2: lea esp, dword ptr [ebp - 8]; pop ebx; pop esi; pop ebp; ret 4; 
0x0003469d: lea esp, dword ptr [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x0007e262: ljmp 0x10c4:0x83fffa5c; pop ebx; pop esi; pop edi; ret; 
0x0004b9c4: ljmp 0x11a:0xcac1f201; ret 0xc9c1; 
0x000f3e1d: ljmp 0x276:0x4fa8009; pop esi; ret; 
0x000f3cf7: ljmp 0x376:0x4fa8009; nop; ret; 
0x0005c894: ljmp 0x3fe0:0x83d00108; ret; 
0x0004cb14: ljmp 0x40ba:0x3fe08303; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xfa83; 
0x000d69e6: ljmp 0x5b0c:0xc483fff4; ret; 
0x000e507b: ljmp 0x5b10:0xc483fff3; pop esi; pop edi; ret; 
0x000c6698: ljmp 0x5b10:0xc483fff5; pop esi; pop edi; ret; 
0x000e48f0: ljmp 0x5b18:0xc483fff3; ret; 
0x00034a09: ljmp 0x8304:0x4e8b1274; ret 0x8d01; 
0x0005d1f5: ljmp 0x8904:0x7420c1f6; sal byte ptr [ecx], 1; rcr byte ptr [esi + 0x5d], cl; ret; 
0x0005d169: ljmp 0x8904:0x7420c1f6; sal byte ptr [ecx], 1; ror cl, cl; ret; 
0x0010335e: ljmp 0x892c:0x24548818; ret 0xeac1; 
0x00103367: ljmp 0x892d:0x24548810; ret 0xc166; 
0x00103382: ljmp 0x8930:0x24548818; ret 0xeac1; 
0x0010338b: ljmp 0x8931:0x24548810; ret 0xc166; 
0x001033a6: ljmp 0x8934:0x24548818; ret 0xeac1; 
0x001033af: ljmp 0x8935:0x24548810; ret 0xc166; 
0x001033ca: ljmp 0x8938:0x24548818; ret 0xeac1; 
0x001033d3: ljmp 0x8939:0x24548810; ret 0xc166; 
0x001033ee: ljmp 0x893c:0x24548818; ret 0xeac1; 
0x001033f7: ljmp 0x893d:0x24548810; ret 0xc166; 
0x00103416: ljmp 0x8940:0x24548818; ret 0xeac1; 
0x0010341f: ljmp 0x8941:0x24548810; ret 0xc166; 
0x0009592b: ljmp 0xe810:0xec835356; ret 0x75d; 
0x00060133: ljmp 0xec83:0x53565755; adc al, ch; mov eax, 0x81000ab5; ret; 
0x000a9e7b: ljmp 0xfffd:0x7fe9e889; dec dword ptr [ebx + 0x29182454]; ret 0x7c83; 
0x000f8831: ljmp 2:0xb8118902; add byte ptr [eax], al; ret; 
0x00122f73: ljmp ptr [eax + 0x200001dd]; ret 0xfff8; 
0x00121aab: ljmp ptr [eax + ecx*2 + 1]; add byte ptr [edi - 0x67000a95], al; dec eax; add dword ptr [eax], eax; ret 0xf56b; 
0x0012464b: ljmp ptr [eax - 0x61fffd81]; ret 0xfffc; 
0x0011fabb: ljmp ptr [eax - 0xdffff9b]; ret 0xfff0; 
0x00122be3: ljmp ptr [eax]; ret; 
0x001042e9: ljmp ptr [ecx]; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000ce16b: ljmp ptr [ecx]; ret 0x8966; 
0x00116dbf: ljmp ptr [edi + 0x61fff5c1]; ret; 
0x00116d27: ljmp ptr [edi + 0x7afff5c1]; ret 0xfff5; 
0x0011faf3: ljmp ptr [esi]; add al, al; ret; 
0x00120303: ljmp ptr [esp + ebx*4]; add byte ptr [eax], al; push ds; ret; 
0x0012a4ff: lock adc dword ptr [ebx], eax; cmp al, 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00108ba1: lock add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b1cc4], al; ret; 
0x00060af8: lock add dword ptr [edx], eax; ret; 
0x00060c00: lock add dword ptr [esp - 4], 0; ret; 
0x00060b28: lock and dword ptr [edx], eax; ret; 
0x00060bdc: lock cmpxchg dword ptr [edx], ecx; ret; 
0x00060ec5: lock dec dword ptr [ecx]; ret 0x5489; 
0x00060b54: lock dec dword ptr [edx]; ret; 
0x0011fafa: lock inc dword ptr [eax - 0x3bffff9a]; ret; 
0x0011faaa: lock inc dword ptr [eax - 0x48ffff9b]; ret 0xfff0; 
0x00060b74: lock inc dword ptr [edx]; ret; 
0x00138477: lock or byte ptr [ebx], al; push 0x140e0a05; inc ecx; ret; 
0x00060b98: lock or dword ptr [edx], eax; ret; 
0x00060b0a: lock xadd dword ptr [edx], eax; add eax, ecx; ret; 
0x00060b69: lock xadd dword ptr [edx], eax; dec eax; ret; 
0x00060b89: lock xadd dword ptr [edx], eax; inc eax; ret; 
0x00077380: lodsb al, byte ptr [esi]; add bh, bl; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000ced4b: lodsb al, byte ptr [esi]; and al, 0xa0; adc al, byte ptr [eax]; add byte ptr [ebx - 0x7bf0fd1b], al; ret; 
0x000ca010: lodsb al, byte ptr [esi]; and al, 0xa8; add byte ptr [eax], al; add byte ptr [ebx + 0x148d0fe0], al; ret 0x28b; 
0x000ecbd1: lodsb al, byte ptr [esi]; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x000e8080: lodsb al, byte ptr [esi]; loope 0xe8076; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0012d6f3: lodsb al, byte ptr [esi]; or byte ptr [edx], al; or byte ptr [edx], 0xe; adc al, 0x41; ret; 
0x00129ffd: lodsb al, byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00128bff: lodsb al, byte ptr [esi]; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00036910: lodsb al, byte ptr [esi]; ret 0xfffb; 
0x000a78c0: lodsb al, byte ptr [esi]; ret; 
0x00122875: lodsd eax, dword ptr [esi]; add dword ptr [eax], eax; ret; 
0x00134739: lodsd eax, dword ptr [esi]; add dword ptr [edx], ecx; ret; 
0x0013d07d: lodsd eax, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000909d9: lodsd eax, dword ptr [esi]; push es; or al, 0; mov eax, dword ptr [ecx + 0xb7d0]; ret; 
0x0005bd95: lodsd eax, dword ptr [esi]; rcl bl, 1; cli; ret; 
0x00127b30: loope 0x127b33; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012aa42: loope 0x12aa4e; push cs; adc al, 0x41; ret; 
0x000487e2: loope 0x487df; dec dword ptr [ecx - 0x4c17dbfc]; ret; 
0x000488ad: loope 0x488aa; dec dword ptr [ecx - 0x1717dbfc]; ret 0xfffd; 
0x0004ac66: loope 0x4ac3a; ret; 
0x0004b39d: loope 0x4b371; ret; 
0x0005c8b6: loope 0x5c8c7; mov eax, 0x6996; sar eax, cl; and eax, 1; ret; 
0x000768af: loope 0x76869; ret; 
0x00076aaf: loope 0x76a69; ret 1; 
0x0009243f: loope 0x923f9; ret; 
0x000bd29f: loope 0xbd259; add al, byte ptr [eax]; add byte ptr [eax], al; ret; 
0x000cb93f: loope 0xcb8f9; ret 0; 
0x000d7200: loope 0xd71f6; inc dword ptr [ebx + 0x5e5b18c4]; pop edi; ret; 
0x000e8081: loope 0xe8076; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000f722c: loope 0xf7234; mov eax, 0x2d; sar eax, cl; and eax, 3; ret; 
0x000f8eec: loope 0xf8ee0; dec dword ptr [ecx - 0x76e3dbbc]; ret 0xc085; 
0x000b264a: maskmovq mm7, mm7; add esp, 0x18; pop ebx; ret; 
0x000d604b: mov ah, 0x16; rcr dword ptr [ebp - 0x7c], 1; test dword ptr [ecx + 0x9d2f7ca], ecx; ret 0xfa31; 
0x000b0511: mov ah, 0x24; rol byte ptr [eax], 0; add byte ptr [ecx - 0x769bdbac], cl; ret 0xb489; 
0x00060c1a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lock add dword ptr [esp - 4], 0; ret; 
0x0002c46a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000c92eb: mov ah, 0x3b; mov esp, 0x89fffc7f; ret 0xcac1; 
0x0013eeec: mov ah, 0x9c; add dword ptr [eax], eax; ret; 
0x0013fc7f: mov ah, 0xa; add esi, dword ptr [edi + 0x140e0a01]; inc ecx; ret; 
0x00146ea5: mov ah, 0xa; push cs; adc al, 0x41; ret; 
0x001329ec: mov ah, 0xd7; add byte ptr [eax], al; ret 0xf3ae; 
0x0005b767: mov ah, 0xfc; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x00141477: mov ah, 1; add bh, byte ptr [esi + 0x41140e0a]; ret; 
0x00141f03: mov ah, 1; add ch, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x00143e03: mov ah, 8; add dl, byte ptr [ebp + 0x41140e0a]; ret; 
0x00011f8c: mov al, 0; add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret; 
0x00123bec: mov al, 0x37; add al, byte ptr [eax]; ret; 
0x001497e8: mov al, 0x45; add al, byte ptr [eax]; ret 0xfab4; 
0x00120828: mov al, 0x9e; dec eax; ret 0; 
0x0000540c: mov al, 0xa; add byte ptr [eax], al; pop dword ptr [eax]; add byte ptr [eax], al; ret 4; 
0x001318d9: mov al, 0xa; push cs; adc al, 0x41; ret; 
0x0000577c: mov al, 0xb; add byte ptr [eax], al; add dword ptr [0x4ad0000], eax; add byte ptr [eax], al; ret 5; 
0x00118e57: mov al, 0xe4; push cs; out dx, eax; mov esi, 0xbf597fc7; ret 0xa88f; 
0x00116df0: mov al, 0xf5; push dword ptr [ebx]; ret 0xfff5; 
0x0012db2f: mov al, 1; add eax, dword ptr [esi + 0x140e0a02]; inc ecx; ret; 
0x0013f813: mov al, 1; add ebp, dword ptr [edx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00140ed7: mov al, 1; add esi, dword ptr [ebp + 2]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00146da3: mov al, 2; add dl, byte ptr [ebx + 0x41140e0a]; ret; 
0x0012b223: mov al, 2; add edi, dword ptr [ecx + 0x140e0a01]; inc ecx; ret; 
0x0014ba6f: mov al, 2; pop ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00089587: mov al, 4; add esp, 0x30; pop ebx; ret; 
0x00143eb7: mov al, 8; add al, byte ptr [eax + 0x41140e0a]; ret; 
0x00142b83: mov al, 8; add ecx, dword ptr [edi + 0x140e0a01]; inc ecx; ret; 
0x00138937: mov al, 9; add ch, byte ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x000d27d0: mov al, 9; add esp, 0x24; pop ebx; pop esi; ret; 
0x00143971: mov al, byte ptr [0x140e0a01]; inc ecx; ret; 
0x000e3dd2: mov al, byte ptr [0x1489fffc]; and al, 0xe8; ret; 
0x0012b92b: mov al, byte ptr [0x1be030a]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00122be0: mov al, byte ptr [0x28fff832]; ret; 
0x00047e80: mov al, byte ptr [0x29000000]; ret 0xbc83; 
0x0000f909: mov al, byte ptr [0x30005]; add byte ptr [eax], al; and al, byte ptr [eax]; or byte ptr [eax], al; ret; 
0x0012b171: mov al, byte ptr [0x41140e0a]; ret; 
0x0012182c: mov al, byte ptr [0x4e00012d]; ret 0xfff4; 
0x00101954: mov al, byte ptr [0x8100009d]; ret; 
0x0008b254: mov al, byte ptr [0x81000804]; ret; 
0x0002f754: mov al, byte ptr [0x81000dbf]; ret; 
0x0003ea04: mov al, byte ptr [0x83535657]; in al, dx; adc al, ch; call 0x8103f6dd; ret; 
0x000ea5bf: mov al, byte ptr [0x8353fff3]; in al, dx; adc al, ch; sub eax, 0x81000211; ret; 
0x0007a1fc: mov al, byte ptr [0x89000000]; ret 0xf229; 
0x00064053: mov al, byte ptr [0x89fffc00]; push eax; sub byte ptr [ebx + 0x5e5b08c4], al; ret; 
0x00056c7c: mov al, byte ptr [0x89fffcea]; ret 0xc085; 
0x00077039: mov al, byte ptr [0x8fe8000d]; ret 0xfffa; 
0x0013256f: mov al, byte ptr [0xa580201]; push cs; adc al, 0x41; ret; 
0x00142593: mov al, byte ptr [0xa670201]; push cs; adc al, 0x41; ret; 
0x001416fd: mov al, byte ptr [0xa6b0201]; push cs; or al, 0x41; ret; 
0x001257ab: mov al, byte ptr [0xa7f0201]; push cs; adc al, 0x41; ret; 
0x0013217b: mov al, byte ptr [0xa810204]; push cs; adc al, 0x41; ret; 
0x0014b2cf: mov al, byte ptr [0xa890201]; push cs; adc al, 0x41; ret; 
0x0013b45f: mov al, byte ptr [0xab10201]; push cs; adc al, 0x41; ret; 
0x00135a5f: mov al, byte ptr [0xabd0202]; push cs; adc al, 0x41; ret; 
0x0014ca17: mov al, byte ptr [0xacb0201]; push cs; adc al, 0x41; ret; 
0x0002b808: mov al, byte ptr [0xc031ffff]; add esp, 4; pop ebx; ret; 
0x0012fe11: mov al, byte ptr [edx + ecx]; push cs; adc al, 0x41; ret; 
0x0014b676: mov al, byte ptr [edx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0000f94c: mov bh, 0; add byte ptr [eax], al; and al, byte ptr [eax]; or byte ptr [eax], al; ret 0x1f; 
0x0009099b: mov bh, 0; add byte ptr [ebx + 0x48d0440], cl; ret 0x8389; 
0x0009094e: mov bh, 0; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000283bf: mov bh, 0; ret; 
0x00052435: mov bh, 0x10; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0004e6f1: mov bh, 0x44; and al, 4; xchg ah, al; ret; 
0x000ff77a: mov bh, 0x44; inc esi; add bh, byte ptr [ecx]; ret 0x870f; 
0x000f9f37: mov bh, 0x45; or bh, byte ptr [ecx]; ret 0xdb7d; 
0x00036593: mov bh, 0x55; or al, 0xf6; ret 0x7540; 
0x001068a2: mov bh, 0x56; adc ch, byte ptr [ecx]; ret 0x8966; 
0x0003286a: mov bh, 0x56; add al, byte ptr [ecx]; rol byte ptr [ebx + 0x5e5b04c4], 1; ret; 
0x00032e3c: mov bh, 0x56; add al, byte ptr [ecx]; rol byte ptr [ebx + 0x5e5b10c4], 1; ret; 
0x001097dc: mov bh, 0x56; or al, 0xf6; ret 0x7408; 
0x00144a4d: mov bh, 0xa; push cs; adc al, 0x41; ret; 
0x000474ed: mov bh, 0xc0; ret; 
0x00020355: mov bh, 1; add byte ptr [eax + 0x600150d], al; ret 1; 
0x0013fc82: mov bh, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0002c2c0: mov bh, bh; dec dword ptr [ebx - 0x3b7cdbba]; adc byte ptr [ebx + 0x5e], bl; ret; 
0x0007e382: mov bh, dl; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0008ab8d: mov bl, 0; add byte ptr [ecx + 0x28e8243c], cl; ret; 
0x000b67ef: mov bl, 0x1c; ret 0; 
0x0002a1d3: mov bl, 0x6e; adc al, byte ptr [eax]; mov eax, dword ptr [ecx + 0x35d0]; ret; 
0x000983f6: mov bl, 0x87; cld; dec dword ptr [ecx + 0x4ee82404]; ret; 
0x000683e9: mov bl, 0x87; cld; dec dword ptr [ecx + 0x5be82404]; ret; 
0x0009834d: mov bl, 0x87; cld; dec dword ptr [ecx - 0x817dbfc]; ret; 
0x00139c49: mov bl, 0xa; push cs; adc al, 0x41; ret; 
0x0009bb2e: mov bl, 0xf8; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0009baba: mov bl, 0xf8; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0006ac15: mov bl, 0xfb; inc dword ptr [ebx + 0x5e5b28c4]; pop edi; ret; 
0x001432ae: mov bl, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000f4da3: mov bl, byte ptr [ecx + eax]; add byte ptr [eax], al; ret; 
0x000ee27e: mov bl, dh; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x00085452: mov byte ptr [0x31fffff6], al; rol byte ptr [ebx - 0x6bf0fe08], cl; ret 0x1689; 
0x0012b4c5: mov byte ptr [0x41140e0a], al; ret; 
0x000e8152: mov byte ptr [0x81000235], al; ret; 
0x000dad52: mov byte ptr [0x81000309], al; ret; 
0x000d6952: mov byte ptr [0x8100034d], al; ret; 
0x000bd452: mov byte ptr [0x810004e2], al; ret; 
0x0009c952: mov byte ptr [0x810006ed], al; ret; 
0x0008e352: mov byte ptr [0x810007d3], al; ret; 
0x00059b52: mov byte ptr [0x81000b1b], al; ret; 
0x00048b52: mov byte ptr [0x81000c2b], al; ret; 
0x00043752: mov byte ptr [0x81000c7f], al; ret; 
0x00036452: mov byte ptr [0x81000d52], al; ret; 
0x000d234a: mov byte ptr [0x891c708b], al; ret 0xf089; 
0x001190e3: mov byte ptr [0xa81a664b], al; jo 0x119075; dec ebx; ret 0x51a3; 
0x0008b1ac: mov byte ptr [0xc483fff9], al; add al, 0x5b; ret; 
0x000bd44b: mov byte ptr [0xec835356], al; adc al, ch; mov byte ptr [0x810004e2], al; ret; 
0x0003e6b1: mov byte ptr [eax + 0xa], 0; ret; 
0x0003e6ad: mov byte ptr [eax + 0xb], 0; mov byte ptr [eax + 0xa], 0; ret; 
0x000e894d: mov byte ptr [eax + 1], dl; ret; 
0x000e896d: mov byte ptr [eax + 2], cl; mov byte ptr [eax + 3], dl; ret; 
0x000e8970: mov byte ptr [eax + 3], dl; ret; 
0x000bf056: mov byte ptr [eax + eax], 0x81; ret; 
0x0003ef3c: mov byte ptr [eax], 0; add esp, 0x18; pop ebx; pop esi; ret; 
0x000d877b: mov byte ptr [eax], 0x74; sbb eax, 0x83243c8b; ret 0xf01; 
0x000fb04a: mov byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000e894b: mov byte ptr [eax], cl; mov byte ptr [eax + 1], dl; ret; 
0x000565c8: mov byte ptr [eax], dh; add byte ptr [ebx + 0x5e5b0cc4], al; ret; 
0x000f9bb7: mov byte ptr [eax], dl; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x00048312: mov byte ptr [ebp + 0x310875c0], 0xc0; add esp, 8; pop ebx; pop esi; ret; 
0x00056c73: mov byte ptr [ebp - 0x76c48b40], 0x34; and al, 0xe8; mov al, byte ptr [0x89fffcea]; ret 0xc085; 
0x000eb936: mov byte ptr [ebx + 0x13214], al; pop ebx; ret; 
0x0012b75b: mov byte ptr [ebx], cl; add edi, dword ptr [esi + 0x140e0a01]; inc ecx; ret; 
0x0010961d: mov byte ptr [ecx + 0x18], al; xor eax, eax; ret; 
0x0003159f: mov byte ptr [ecx + 5], 0x39; xor byte ptr [eax], al; add byte ptr [ecx + 0x131481], cl; add byte ptr [0x7fffffff], ah; ret; 
0x00142a2a: mov byte ptr [ecx - 0x3b], 0xc; add al, 4; inc ebx; or edi, dword ptr [ebp + 0xa]; ret; 
0x0013e0db: mov byte ptr [ecx - 0x3b], 0xc; add al, 4; inc ecx; or edx, dword ptr [ecx + 0xa]; ret; 
0x0007e3f4: mov byte ptr [ecx - 6], bh; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x000b5ad8: mov byte ptr [ecx], 0x80; ret 0x8801; 
0x000cc3c5: mov byte ptr [ecx], 0x83; ret 0x3960; 
0x000f2e09: mov byte ptr [ecx], 0x83; ret 0x8304; 
0x0002ee0f: mov byte ptr [ecx], 0x83; ret 0x8801; 
0x00082278: mov byte ptr [ecx], 0x83; ret 0x8b0c; 
0x0004e9e9: mov byte ptr [ecx], 0x89; ret 0xb7eb; 
0x0004ea34: mov byte ptr [ecx], 0x89; ret 0xbaeb; 
0x0007a331: mov byte ptr [ecx], 0x89; ret 0xfa80; 
0x001422dd: mov byte ptr [ecx], 0xa; push cs; adc al, 0x41; ret; 
0x00133c0b: mov byte ptr [ecx], al; add cl, byte ptr [eax + 0x41140e0a]; ret; 
0x00133773: mov byte ptr [ecx], al; add cl, byte ptr [ebx + 0x41140e0a]; ret; 
0x00128dcf: mov byte ptr [ecx], al; add esp, dword ptr [ebp + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014c515: mov byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000f9879: mov byte ptr [ecx], al; xor eax, eax; ret; 
0x0012ac87: mov byte ptr [ecx], cl; add bl, cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0003f647: mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x000ea163: mov byte ptr [edx], 0; mov eax, edi; pop esi; pop edi; ret; 
0x000b2cee: mov byte ptr [edx], al; pop ebx; pop esi; pop edi; ret; 
0x000f9c62: mov byte ptr [edx], al; xor eax, eax; ret; 
0x00126cf9: mov byte ptr [edx], cl; push cs; adc al, 0x41; ret; 
0x0013e0d7: mov byte ptr [edx], cl; ret; 
0x00108054: mov byte ptr [esi + 0x28], al; add esp, 4; pop ebx; pop esi; ret; 
0x000ee8d2: mov byte ptr [esi + 0x489fffc], bh; and al, 0xe8; ret 0xf362; 
0x000e8631: mov byte ptr [esi], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00142dcf: mov byte ptr [esi], cl; or al, 0x41; ret; 
0x00118da1: mov ch, 0x48; pop ebx; ret 0x3956; 
0x0012e795: mov ch, 0xa; push cs; adc al, 0x41; ret; 
0x00087dc7: mov ch, 0xdf; stc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0011904e: mov ch, 0xe9; pop ebx; ret 0x3956; 
0x000f8138: mov ch, 0xe9; ret; 
0x00127b01: mov ch, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000b2aab: mov cl, 0x3e; idiv edi; add esp, 0x14; pop ebx; ret; 
0x0005ed0b: mov cl, 0x46; cld; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; ret; 
0x000c8fde: mov cl, 0x5b; pop edi; pop esi; ret; 
0x000107d8: mov cl, 0x5c; add eax, dword ptr [eax]; ret 0; 
0x000337f1: mov cl, 0x83; ret 0xf01; 
0x0012d06a: mov cl, 0xa; push cs; adc al, 0x41; ret; 
0x00060bde: mov cl, 0xa; ret; 
0x0012e111: mov cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x00148e83: mov cl, byte ptr [edx]; push cs; or al, 0x41; ret; 
0x000cfaf3: mov cs, eax; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x0013169e: mov cs, word ptr [edx]; push cs; adc al, 0x41; ret; 
0x000fdaa8: mov dh, 0; add esp, 0x10; pop ebx; pop esi; ret; 
0x000eb934: mov dh, 0; mov byte ptr [ebx + 0x13214], al; pop ebx; ret; 
0x000fad51: mov dh, 0; movzx ecx, byte ptr [ecx]; sub eax, ecx; pop ebx; ret; 
0x000e8911: mov dh, 0x10; shl edx, 8; movzx eax, byte ptr [eax + 1]; or eax, edx; ret; 
0x000e899c: mov dh, 0x40; add dword ptr [ebp - 0x47f98a40], eax; and dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000dd53b: mov dh, 0x40; add dword ptr [ecx - 0x7ab7dbbc], ecx; ror byte ptr [edi], 0x84; ret; 
0x000df6eb: mov dh, 0x40; or dword ptr [ecx], ecx; ret 0x9189; 
0x000f9c5e: mov dh, 0x44; and al, 0x10; mov byte ptr [edx], al; xor eax, eax; ret; 
0x0009b3a1: mov dh, 0x44; push es; or dword ptr [ecx], ecx; ret 0x348d; 
0x000e9523: mov dh, 0x46; add dword ptr [ecx], ecx; ret 0x543b; 
0x000cea60: mov dh, 0x4f; or byte ptr [eax - 0x7bf00107], al; ret 0; 
0x00109615: mov dh, 0x51; sbb byte ptr [eax - 0x2ff7021e], al; mov byte ptr [ecx + 0x18], al; xor eax, eax; ret; 
0x001091da: mov dh, 0x56; sbb dh, dh; ret 0x7502; 
0x00104973: mov dh, 0x57; adc al, 0xf6; ret 0x7501; 
0x001084f9: mov dh, 0x57; sub dh, dh; ret 0xf02; 
0x00108118: mov dh, 0x57; sub dh, dh; ret 0xf04; 
0x0005d765: mov dh, 0x66; nop; mov eax, 0x2d; ret; 
0x0003bc58: mov dh, 0x83; ret 0x8901; 
0x000e3308: mov dh, 0x83; ret 0xeb01; 
0x000d87c0: mov dh, 0x83; ret 0xf01; 
0x000812d2: mov dh, 0x84; ret; 
0x0005a27d: mov dh, 0x89; ret 0xe2c1; 
0x000a1c2e: mov dh, 0x91; push 0x39000046; ret 0xdf74; 
0x001298e8: mov dh, 0xa; push cs; adc al, 0x41; ret; 
0x000440f4: mov dh, 0xc; cmp byte ptr [eax - 0x7cfea9b4], cl; ret 0x8301; 
0x00048453: mov dh, 0xc; sub byte ptr [eax - 0x7cfea9b4], cl; ret 0x8301; 
0x0009674b: mov dh, 0xc0; add eax, 1; add esp, 4; pop ebx; ret; 
0x0009b184: mov dh, 0xc0; add eax, 1; mov dword ptr [ebx + 0x22cc], eax; pop ebx; ret; 
0x0003ed58: mov dh, 0xc0; add esp, 0x10; pop ebx; pop esi; ret; 
0x00036ff8: mov dh, 0xc0; add esp, 0x10; pop ebx; ret; 
0x00036f4e: mov dh, 0xc0; add esp, 0x14; pop ebx; ret; 
0x000881f3: mov dh, 0xc0; add esp, 0x28; pop ebx; ret; 
0x0002854f: mov dh, 0xc0; add esp, 0xc; pop ebx; ret; 
0x00037103: mov dh, 0xc0; add esp, 0xc; pop esi; pop edi; ret; 
0x00055aff: mov dh, 0xc0; add esp, 4; pop ebx; ret; 
0x0009dc9c: mov dh, 0xc0; add esp, 8; pop ebx; pop edi; ret; 
0x000db19f: mov dh, 0xc0; add esp, 8; pop ebx; pop esi; ret; 
0x000f3657: mov dh, 0xc0; add esp, 8; pop ebx; ret; 
0x0002b851: mov dh, 0xc0; lea eax, dword ptr [eax + eax*2]; pop ebx; ret; 
0x0002b82d: mov dh, 0xc0; lea eax, dword ptr [eax*8 + 3]; pop ebx; ret; 
0x000f9af9: mov dh, 0xc0; mov ecx, dword ptr [esp + 0x18]; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000f96cb: mov dh, 0xc0; mov edx, dword ptr [esp + 0x10]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000f96fa: mov dh, 0xc0; mov edx, dword ptr [esp + 0x14]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0006585a: mov dh, 0xc0; neg eax; add esp, 0x14; pop ebx; ret; 
0x0005fadd: mov dh, 0xc0; neg eax; add esp, 0x14; ret; 
0x000bbdda: mov dh, 0xc0; neg eax; add esp, 0x18; pop ebx; ret; 
0x0005d626: mov dh, 0xc0; neg eax; add esp, 0x24; pop ebx; ret; 
0x0004e1b7: mov dh, 0xc0; pop ebp; ret; 
0x0002a242: mov dh, 0xc0; pop ebx; ret; 
0x000c2c5c: mov dh, 0xc0; pop esi; ret; 
0x000db496: mov dh, 0xc0; hlt; inc dword ptr [ebx + 0x5e5b2cc4]; ret; 
0x0002bc31: mov dh, 0xc0; ret; 
0x000e8993: mov dh, 0xc1; ret; 
0x000e8949: mov dh, 0xce; mov byte ptr [eax], cl; mov byte ptr [eax + 1], dl; ret; 
0x000fb692: mov dh, 0xd2; sub eax, edx; pop ebx; pop esi; ret; 
0x0003599e: mov dh, 2; add esp, 4; pop ebx; ret; 
0x000fad54: mov dh, 9; sub eax, ecx; pop ebx; ret; 
0x000eb9c8: mov dh, byte ptr [edx + eax + 0x5b]; ret; 
0x0010a6e0: mov dh, cl; lcall ptr [ebx - 0x71]; add byte ptr [eax - 1], bh; mov edx, 0xffffffff; ret; 
0x0009c1d4: mov dl, 0x4e; or eax, dword ptr [eax]; mov eax, dword ptr [ecx + 0x22cc]; ret; 
0x0004ea19: mov dl, 0x89; ret 0x748d; 
0x00133e91: mov dl, 0xa; push cs; adc al, 0x41; ret; 
0x000db50d: mov dl, 0xf4; inc dword ptr [ebx + 0x5e5b1cc4]; ret; 
0x00126e56: mov dl, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0010f625: mov dl, 7; aas; xchg eax, esp; ret 0x8910; 
0x001042e7: mov dl, byte ptr [esi - 1]; sub eax, edx; pop esi; pop edi; ret; 
0x0013c7d5: mov dword ptr [0x140e0a01], eax; inc ecx; ret; 
0x0012ab0f: mov dword ptr [0x410c0e0a], eax; ret; 
0x001328fd: mov dword ptr [0x41140e0a], eax; ret; 
0x000fd551: mov dword ptr [0x810000e1], eax; ret; 
0x000eae51: mov dword ptr [0x81000208], eax; ret; 
0x0008b151: mov dword ptr [0x81000805], eax; ret; 
0x00076251: mov dword ptr [0x81000954], eax; ret; 
0x0005d551: mov dword ptr [0x81000ae1], eax; ret; 
0x0002a151: mov dword ptr [0x81000e15], eax; ret; 
0x000f3449: mov dword ptr [0x89fff30f], eax; ret 0x71e9; 
0x000a9ab0: mov dword ptr [0xc483fff7], eax; add al, 0x5b; ret; 
0x00058d00: mov dword ptr [0xc483fffc], eax; or al, 0x5b; ret; 
0x0006b9f9: mov dword ptr [0xe9fffb91], eax; ret; 
0x0003707d: mov dword ptr [eax + 0x10], 0; ret; 
0x000f8a11: mov dword ptr [eax + 0x10], 1; add esp, 4; pop ebx; ret; 
0x00101576: mov dword ptr [eax + 0x10], edx; mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 0x18], edx; ret; 
0x000d2af0: mov dword ptr [eax + 0x10], esi; add esp, 8; pop ebx; pop esi; ret; 
0x0004e4e2: mov dword ptr [eax + 0x10], esi; mov dword ptr [eax + 0x14], edi; xor eax, eax; ret; 
0x00037076: mov dword ptr [eax + 0x14], 0; mov dword ptr [eax + 0x10], 0; ret; 
0x000c5222: mov dword ptr [eax + 0x14], ecx; mov eax, 1; ret; 
0x0004e4e5: mov dword ptr [eax + 0x14], edi; xor eax, eax; ret; 
0x000f8a0e: mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 0x10], 1; add esp, 4; pop ebx; ret; 
0x00101579: mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 0x18], edx; ret; 
0x000c53e7: mov dword ptr [eax + 0x14], edx; pop ebx; ret; 
0x0003e709: mov dword ptr [eax + 0x18], 0; ret; 
0x00052505: mov dword ptr [eax + 0x18], ecx; mov edx, dword ptr [edx + 0xc]; mov dword ptr [eax + 0x1c], edx; xor eax, eax; ret; 
0x0010157c: mov dword ptr [eax + 0x18], edx; ret; 
0x000db545: mov dword ptr [eax + 0x1b8], edx; ret; 
0x000db561: mov dword ptr [eax + 0x1bc], edx; ret; 
0x0005250b: mov dword ptr [eax + 0x1c], edx; xor eax, eax; ret; 
0x0006acab: mov dword ptr [eax + 0x1d4], edx; pop ebx; ret; 
0x0006aa10: mov dword ptr [eax + 0x20], edx; mov edx, dword ptr [eax + 0x28]; mov dword ptr [eax + 0x24], edx; pop ebx; ret; 
0x0006a87a: mov dword ptr [eax + 0x24], edx; add esp, 4; pop ebx; ret; 
0x0006aa16: mov dword ptr [eax + 0x24], edx; pop ebx; ret; 
0x00052527: mov dword ptr [eax + 0x28], ecx; mov edx, dword ptr [edx + 0xc]; mov dword ptr [eax + 0x2c], edx; xor eax, eax; ret; 
0x000a2578: mov dword ptr [eax + 0x28], edx; add esp, 0xc; pop ebx; pop esi; ret; 
0x00064048: mov dword ptr [eax + 0x28], edx; add esp, 8; pop ebx; pop esi; ret; 
0x000c2a21: mov dword ptr [eax + 0x28], esi; mov eax, 1; add esp, 0x10; pop esi; ret; 
0x0005252d: mov dword ptr [eax + 0x2c], edx; xor eax, eax; ret; 
0x00109386: mov dword ptr [eax + 0x424], edx; ret; 
0x00091ad5: mov dword ptr [eax + 0x4c], edx; pop esi; pop edi; ret; 
0x0009137b: mov dword ptr [eax + 0x58], edx; pop esi; pop edi; ret; 
0x000c2f23: mov dword ptr [eax + 0x5c], edx; mov eax, 1; ret; 
0x0003e706: mov dword ptr [eax + 0xa], edx; mov dword ptr [eax + 0x18], 0; ret; 
0x0004fa8f: mov dword ptr [eax + 0xc], 0; xor eax, eax; ret; 
0x000ab788: mov dword ptr [eax + 0xc], 0; ret; 
0x0004e4df: mov dword ptr [eax + 0xc], ebp; mov dword ptr [eax + 0x10], esi; mov dword ptr [eax + 0x14], edi; xor eax, eax; ret; 
0x000c531b: mov dword ptr [eax + 0xc], ecx; mov eax, 1; ret; 
0x00101573: mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 0x10], edx; mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 0x18], edx; ret; 
0x00037073: mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 0x14], 0; mov dword ptr [eax + 0x10], 0; ret; 
0x000c521d: mov dword ptr [eax + 0xc], edx; sub ecx, edx; mov dword ptr [eax + 0x14], ecx; mov eax, 1; ret; 
0x0005248d: mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x000f9a9d: mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x000cf65f: mov dword ptr [eax + 4], ecx; add esp, 8; ret 4; 
0x000cf6f4: mov dword ptr [eax + 4], edi; mov dword ptr [eax + 8], ecx; pop esi; pop edi; ret 4; 
0x000cf6b7: mov dword ptr [eax + 4], edi; mov dword ptr [eax + 8], edx; pop esi; pop edi; ret 4; 
0x000ab778: mov dword ptr [eax + 4], edx; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 0xc], 0; ret; 
0x0003bbb7: mov dword ptr [eax + 4], edx; xor eax, eax; add esp, 0x18; pop ebx; ret; 
0x000524cb: mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0004fa88: mov dword ptr [eax + 8], 0; mov dword ptr [eax + 0xc], 0; xor eax, eax; ret; 
0x000ab781: mov dword ptr [eax + 8], 0; mov dword ptr [eax + 0xc], 0; ret; 
0x00052487: mov dword ptr [eax + 8], ecx; mov edx, dword ptr [edx + 0x1c]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x000524a9: mov dword ptr [eax + 8], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x000cf6f7: mov dword ptr [eax + 8], ecx; pop esi; pop edi; ret 4; 
0x000bd2c8: mov dword ptr [eax + 8], edx; mov eax, 1; ret; 
0x000cf6ba: mov dword ptr [eax + 8], edx; pop esi; pop edi; ret 4; 
0x000cf67d: mov dword ptr [eax + 8], edx; ret 4; 
0x000524db: mov dword ptr [eax + 8], edx; xor eax, eax; ret; 
0x0009ce73: mov dword ptr [eax + edi*8 - 1], esp; add esp, 0x10; pop ebx; ret; 
0x0007e736: mov dword ptr [eax], 0; add esp, 4; pop ebx; ret; 
0x000ab77b: mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 0xc], 0; ret; 
0x0006114a: mov dword ptr [eax], 0; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000e9c21: mov dword ptr [eax], 0; pop esi; ret; 
0x0006b64c: mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0002a24b: mov dword ptr [eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x000333ab: mov dword ptr [eax], 0x16; xor eax, eax; add esp, 0x10; pop ebx; ret; 
0x00101515: mov dword ptr [eax], 0x16; xor eax, eax; add esp, 0x14; pop ebx; ret; 
0x0009c90d: mov dword ptr [eax], 0x16; xor eax, eax; add esp, 0xc; pop ebx; ret; 
0x0008a1c5: mov dword ptr [eax], 0x22; xor eax, eax; pop ebx; ret; 
0x000d87e4: mov dword ptr [eax], 0x2c8b1d74; and al, 0x83; ret 0xf01; 
0x000f9709: mov dword ptr [eax], 0xfffffffe; xor eax, eax; ret; 
0x000f96b8: mov dword ptr [eax], 0xffffffff; mov eax, 0x55; ret; 
0x000f9b8d: mov dword ptr [eax], 0xffffffff; mov eax, 7; ret; 
0x0006b659: mov dword ptr [eax], 0xffffffff; xor eax, eax; ret; 
0x000f9723: mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0000a89c: mov dword ptr [eax], eax; add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret; 
0x0003599b: mov dword ptr [eax], ecx; movzx eax, byte ptr [edx]; add esp, 4; pop ebx; ret; 
0x00032c58: mov dword ptr [eax], edx; add esp, 0x10; pop ebx; pop esi; ret; 
0x000cf65d: mov dword ptr [eax], edx; mov dword ptr [eax + 4], ecx; add esp, 8; ret 4; 
0x00058232: mov dword ptr [eax], edx; mov eax, 0xe; ret; 
0x000c2873: mov dword ptr [eax], edx; mov eax, 1; pop esi; ret; 
0x00047492: mov dword ptr [eax], edx; ret 4; 
0x0005243c: mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000dfd88: mov dword ptr [eax], edx; ret; 
0x000e8118: mov dword ptr [ebx + 0x129ac], eax; add esp, 4; pop ebx; ret; 
0x0009b189: mov dword ptr [ebx + 0x22cc], eax; pop ebx; ret; 
0x000a9537: mov dword ptr [ebx + 0x2460], ecx; pop ebx; pop esi; ret; 
0x000a9531: mov dword ptr [ebx + 0x2464], edx; mov dword ptr [ebx + 0x2460], ecx; pop ebx; pop esi; ret; 
0x00037a83: mov dword ptr [ebx + 0x563c], eax; add esp, 8; pop ebx; ret; 
0x0005b6bd: mov dword ptr [ebx + 0x7ee0], eax; add esp, 4; pop ebx; ret; 
0x0005b6ce: mov dword ptr [ebx + 0x7ee4], eax; add esp, 4; pop ebx; ret; 
0x0005b666: mov dword ptr [ebx + 0x7ee8], eax; add esp, 4; pop ebx; ret; 
0x0005b677: mov dword ptr [ebx + 0x7eec], eax; add esp, 4; pop ebx; ret; 
0x000905c1: mov dword ptr [ebx + 0xb7bc], eax; add esp, 8; pop ebx; ret; 
0x000c5484: mov dword ptr [ebx + 0xe080], eax; add esp, 0x18; pop ebx; ret; 
0x0002e562: mov dword ptr [ebx + 4], edx; mov eax, ebx; pop ebx; ret 4; 
0x0002e560: mov dword ptr [ebx], eax; mov dword ptr [ebx + 4], edx; mov eax, ebx; pop ebx; ret 4; 
0x0005165b: mov dword ptr [ecx + 0x10], eax; pop esi; pop edi; pop ebp; ret; 
0x0006128a: mov dword ptr [ecx + 0x10], esi; mov dword ptr [ecx + 0x14], edi; mov dword ptr [ecx + 0x18], eax; xor eax, eax; ret; 
0x000611fc: mov dword ptr [ecx + 0x10], esi; mov dword ptr [ecx + 0x14], edi; xor eax, eax; ret; 
0x000315a6: mov dword ptr [ecx + 0x1314], eax; and eax, 0x7fffffff; ret; 
0x000315c1: mov dword ptr [ecx + 0x1314], eax; ret; 
0x00058fe7: mov dword ptr [ecx + 0x1418], eax; xor eax, eax; ret; 
0x0006128d: mov dword ptr [ecx + 0x14], edi; mov dword ptr [ecx + 0x18], eax; xor eax, eax; ret; 
0x000611ff: mov dword ptr [ecx + 0x14], edi; xor eax, eax; ret; 
0x00061290: mov dword ptr [ecx + 0x18], eax; xor eax, eax; ret; 
0x0008ea4e: mov dword ptr [ecx + 0x2220], eax; ret; 
0x000e071b: mov dword ptr [ecx + 0x2dc0], eax; ret; 
0x0005ab16: mov dword ptr [ecx + 0x7efc], esi; mov dword ptr [ecx + 0x7f00], edi; pop esi; pop edi; ret; 
0x0005ab1c: mov dword ptr [ecx + 0x7f00], edi; pop esi; pop edi; ret; 
0x00091567: mov dword ptr [ecx + 0xc], eax; pop esi; pop edi; ret; 
0x000611f9: mov dword ptr [ecx + 0xc], ebp; mov dword ptr [ecx + 0x10], esi; mov dword ptr [ecx + 0x14], edi; xor eax, eax; ret; 
0x00076faf: mov dword ptr [ecx + 4], edx; xor eax, eax; ret; 
0x000cf8fa: mov dword ptr [ecx + 8], edx; mov eax, ecx; pop esi; pop edi; ret 4; 
0x0002bb07: mov dword ptr [ecx + eax*4 + 0x367c], edx; xor eax, eax; ret; 
0x0002bb3d: mov dword ptr [ecx + eax*4 + 0x3680], 0; xor eax, eax; ret; 
0x0012b0d4: mov dword ptr [ecx - 0x3b], 0x4104040c; or eax, dword ptr [ebx]; add byte ptr [ecx], 0xa; ret; 
0x0012afc8: mov dword ptr [ecx - 0x3b], 0x4104040c; or eax, dword ptr [edx]; fmul qword ptr [edx]; ret; 
0x0012f04c: mov dword ptr [ecx - 0x3b], 0x4104040c; or eax, dword ptr [edx]; lea ecx, dword ptr [edx]; ret; 
0x0012713c: mov dword ptr [ecx - 0x3b], 0x4104040c; or ebp, dword ptr [eax + 0xa]; ret; 
0x0014a01e: mov dword ptr [ecx - 0x3b], 0x4104040c; or ebp, dword ptr [ebx + 0xa]; ret; 
0x0013dd88: mov dword ptr [ecx - 0x3b], 0x4104040c; or ebp, dword ptr [edx + 0xa]; ret; 
0x00127080: mov dword ptr [ecx - 0x3b], 0x4104040c; or ebx, dword ptr [eax + 0xa]; ret; 
0x0012709c: mov dword ptr [ecx - 0x3b], 0x4104040c; or ebx, dword ptr [ebp + 0xa]; ret; 
0x0012708e: mov dword ptr [ecx - 0x3b], 0x4104040c; or ebx, dword ptr [edx + 0xa]; ret; 
0x0012fe7b: mov dword ptr [ecx - 0x3b], 0x4104040c; or ebx, dword ptr [esi + 0xa]; ret; 
0x0012f05b: mov dword ptr [ecx - 0x3b], 0x4104040c; or ecx, dword ptr [ebx + 0xa]; ret; 
0x0012fe89: mov dword ptr [ecx - 0x3b], 0x4104040c; or ecx, dword ptr [edi + 0xa]; ret; 
0x0013de22: mov dword ptr [ecx - 0x3b], 0x4104040c; or edi, dword ptr [esi + 0xa]; ret; 
0x0013de7d: mov dword ptr [ecx - 0x3b], 0x4104040c; or edx, dword ptr [eax + 0xa]; ret; 
0x0013de6f: mov dword ptr [ecx - 0x3b], 0x4104040c; or edx, dword ptr [ebx + 0xa]; ret; 
0x0013de14: mov dword ptr [ecx - 0x3b], 0x4104040c; or esi, dword ptr [edx + 0xa]; ret; 
0x00125be7: mov dword ptr [ecx - 0x3b], 0x4104040c; or esp, dword ptr [esi + 0xa]; ret; 
0x001372ba: mov dword ptr [ecx], 0x41140e0a; ret; 
0x00076fad: mov dword ptr [ecx], eax; mov dword ptr [ecx + 4], edx; xor eax, eax; ret; 
0x000c2a54: mov dword ptr [ecx], eax; mov eax, 1; add esp, 0x10; pop esi; ret; 
0x000370c0: mov dword ptr [ecx], eax; mov eax, 1; add esp, 0xc; ret; 
0x000bf697: mov dword ptr [ecx], eax; mov eax, 1; pop ebx; ret; 
0x00051e4d: mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x00060cc9: mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000c5375: mov dword ptr [ecx], edx; add dword ptr [eax + 0xc], 4; mov eax, 1; ret; 
0x000f8886: mov dword ptr [ecx], edx; mov eax, 1; ret; 
0x000f8833: mov dword ptr [ecx], edx; mov eax, 2; ret; 
0x000f39bd: mov dword ptr [ecx], edx; pop esi; pop edi; pop ebp; ret; 
0x000f887e: mov dword ptr [ecx], edx; ret; 
0x0002c499: mov dword ptr [edi + ecx - 4], eax; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00084001: mov dword ptr [edi], edx; pop ebx; pop esi; pop edi; ret; 
0x000f4da2: mov dword ptr [edx + 0x11c], ecx; ret; 
0x000c523f: mov dword ptr [edx + 0x14], eax; mov eax, dword ptr [edx + 0xc]; add ecx, eax; mov dword ptr [edx + 0xc], ecx; ret; 
0x00104915: mov dword ptr [edx + 0x1bc], eax; mov dword ptr [edx + 0x1c4], esi; mov dword ptr [edx + 0x1c0], esi; pop esi; ret; 
0x000e88fa: mov dword ptr [edx + 0x1c0], eax; mov edx, dword ptr [ecx - 0x40]; mov dword ptr [edx], eax; ret; 
0x00104921: mov dword ptr [edx + 0x1c0], esi; pop esi; ret; 
0x0010491b: mov dword ptr [edx + 0x1c4], esi; mov dword ptr [edx + 0x1c0], esi; pop esi; ret; 
0x000c259f: mov dword ptr [edx + 0x28], edi; pop esi; pop edi; ret; 
0x0004e37f: mov dword ptr [edx + 0x2f4], ecx; or dword ptr [edx], 0x80000; add esp, 4; pop ebx; ret; 
0x000c259c: mov dword ptr [edx + 0x30], esi; mov dword ptr [edx + 0x28], edi; pop esi; pop edi; ret; 
0x00091c93: mov dword ptr [edx + 0x48], eax; pop esi; pop edi; ret; 
0x000c25b4: mov dword ptr [edx + 0xc], ecx; pop esi; pop edi; ret; 
0x000c5247: mov dword ptr [edx + 0xc], ecx; ret; 
0x000e0fb2: mov dword ptr [edx + 0xc], esi; add esp, 0x18; pop ebx; pop esi; ret; 
0x00104a47: mov dword ptr [edx + 4], eax; mov edx, dword ptr [eax + 4]; mov dword ptr [edx], eax; pop esi; ret; 
0x0008b243: mov dword ptr [edx - 0x3b7c0007], edi; add al, 0x5b; ret; 
0x00056883: mov dword ptr [edx], 0; add esp, 4; pop ebx; ret; 
0x000285ab: mov dword ptr [edx], 0; ret; 
0x000f985b: mov dword ptr [edx], 0xffffffff; mov eax, 0x55; ret; 
0x000314fb: mov dword ptr [edx], eax; add esp, 0x10; pop ebx; pop esi; ret; 
0x0003bf84: mov dword ptr [edx], eax; add esp, 0x18; pop ebx; ret; 
0x00036fa1: mov dword ptr [edx], eax; mov eax, 1; add esp, 0x14; pop ebx; ret; 
0x000bf6b4: mov dword ptr [edx], eax; mov eax, 1; pop ebx; ret; 
0x0014c2ea: mov dword ptr [edx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000a9565: mov dword ptr [edx], eax; pop ebx; pop esi; ret; 
0x00104a4d: mov dword ptr [edx], eax; pop esi; ret; 
0x0002baa4: mov dword ptr [edx], eax; xor eax, eax; pop ebx; pop esi; ret; 
0x0005ee58: mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000dfd79: mov dword ptr [edx], eax; ret; 
0x000660da: mov dword ptr [edx], ecx; add esp, 0x10; pop ebx; ret; 
0x000eb931: mov dword ptr [edx], ecx; movzx eax, byte ptr [eax]; mov byte ptr [ebx + 0x13214], al; pop ebx; ret; 
0x0009d51c: mov dword ptr [edx], ecx; pop ebx; ret; 
0x0012a929: mov dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00076fff: mov dword ptr [edx], ecx; xor eax, eax; ret; 
0x000a8d43: mov dword ptr [edx], ecx; ret; 
0x000617ab: mov dword ptr [esi + 0x10], 0x1c20; add esp, 8; pop esi; ret; 
0x0002bb5b: mov dword ptr [esi + 0x1c], 1; xor eax, eax; pop esi; ret; 
0x000d6c21: mov dword ptr [esi + 0x20], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0006aa9b: mov dword ptr [esi + 0x24], edx; add esp, 0x44; pop ebx; pop esi; ret; 
0x0006a94c: mov dword ptr [esi + 0x24], edx; add esp, 0x48; pop ebx; pop esi; ret; 
0x000c2972: mov dword ptr [esi + 0x30], edx; mov eax, 1; add esp, 8; pop esi; ret; 
0x0009dbba: mov dword ptr [esi + 0x58], 0xffffffff; add esp, 0x10; pop ebx; pop esi; ret; 
0x000d0fd6: mov dword ptr [esi + 0xc], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x00064db0: mov dword ptr [esi + 0xc], edx; add esp, 0x20; pop ebx; pop esi; ret; 
0x0005f9f8: mov dword ptr [esi + 4], eax; mov eax, esi; add esp, 0x20; pop esi; ret 4; 
0x000653b6: mov dword ptr [esi + 4], edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x00076300: mov dword ptr [esi + 4], edx; mov eax, esi; add esp, 0x20; pop esi; ret 4; 
0x0002c1ee: mov dword ptr [esi + 8], eax; add esp, 0x10; pop ebx; pop esi; ret; 
0x00065a31: mov dword ptr [esi + 8], edx; add esp, 0x20; pop ebx; pop esi; ret; 
0x00090aa7: mov dword ptr [esi + 8], edx; add esp, 0x3c; pop ebx; pop esi; ret; 
0x000ebfc3: mov dword ptr [esi - 0x3b7c000d], ebp; add al, 0x5b; ret; 
0x00121658: mov dword ptr [esi - 0xc], edi; push dword ptr [eax + 0x1e]; add dword ptr [eax], eax; ret; 
0x0006ac79: mov dword ptr [esi], eax; add esp, 0x10; pop esi; ret; 
0x000b67d4: mov dword ptr [esi], eax; add esp, 4; pop ebx; pop esi; ret; 
0x000285ec: mov dword ptr [esi], eax; add esp, 8; pop ebx; pop esi; ret; 
0x000909fd: mov dword ptr [esi], eax; or al, 0; mov eax, dword ptr [ecx + 0xb7c8]; ret; 
0x001274d1: mov dword ptr [esi], ecx; adc al, 0x41; ret; 
0x00131fdf: mov dword ptr [esi], ecx; or al, 0x41; ret; 
0x00083773: mov dword ptr [esi], edx; add esp, 0x1c; pop ebx; pop esi; ret; 
0x0004f9a2: mov dword ptr [esi], edx; add esp, 0x20; pop ebx; pop esi; ret; 
0x0008a606: mov dword ptr [esi], edx; add esp, 4; pop ebx; pop esi; ret; 
0x00083415: mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x0005c937: mov dword ptr [esp + 4], eax; fld qword ptr [esp]; leave; ret; 
0x0004e61a: mov dword ptr [esp + 4], edx; fldenv dword ptr [esp]; add esp, 0x1c; ret; 
0x00060c10: mov dword ptr [esp - 4], 0; ret; 
0x0004e64b: mov dword ptr [esp - 4], edx; fldcw word ptr [esp - 4]; ret; 
0x0005d6f3: mov dword ptr [esp], 5; call 0x26640; add esp, 4; pop ebx; ret; 
0x0009c77d: mov dword ptr [esp], eax; call 0x22fe0; add esp, 8; pop ebx; ret; 
0x00036b71: mov dword ptr [esp], eax; call 0x23000; add esp, 0xc; pop ebx; ret; 
0x000ea657: mov dword ptr [esp], eax; call 0x23020; add esp, 0xc; pop ebx; ret; 
0x00058cfb: mov dword ptr [esp], eax; call 0x23060; add esp, 0xc; pop ebx; ret; 
0x00041285: mov dword ptr [esp], eax; call 0x23080; add esp, 0x1c; pop ebx; ret; 
0x00048348: mov dword ptr [esp], eax; call 0x23130; add esp, 8; pop ebx; ret; 
0x00032503: mov dword ptr [esp], eax; call 0x23160; add esp, 0xc; pop ebx; ret; 
0x000b1f91: mov dword ptr [esp], eax; call 0x23230; add esp, 8; pop ebx; ret; 
0x0009cb12: mov dword ptr [esp], eax; call 0x232c0; add esp, 0xc; pop ebx; ret; 
0x0009ce6f: mov dword ptr [esp], eax; call 0x23300; add esp, 0x10; pop ebx; ret; 
0x0009cd94: mov dword ptr [esp], eax; call 0x23310; add esp, 0x10; pop ebx; ret; 
0x000ebbaf: mov dword ptr [esp], eax; call 0x23370; add esp, 8; pop ebx; ret; 
0x000e48eb: mov dword ptr [esp], eax; call 0x233e0; add esp, 0x18; pop ebx; ret; 
0x000db417: mov dword ptr [esp], eax; call 0x23410; add esp, 8; pop ebx; ret; 
0x0009c635: mov dword ptr [esp], eax; call 0x234a0; add esp, 8; pop ebx; ret; 
0x0004932a: mov dword ptr [esp], eax; call 0x23520; add esp, 0x18; pop ebx; ret; 
0x00090b9d: mov dword ptr [esp], eax; call 0x23540; add esp, 0x14; pop ebx; ret; 
0x0009d180: mov dword ptr [esp], eax; call 0x23590; add esp, 0xc; pop ebx; ret; 
0x000c99c8: mov dword ptr [esp], eax; call 0x235a0; add esp, 0xc; pop ebx; ret; 
0x0006472b: mov dword ptr [esp], eax; call 0x235c0; add esp, 8; pop ebx; ret; 
0x00041537: mov dword ptr [esp], eax; call 0x23620; add esp, 0x1c; pop ebx; ret; 
0x00064f13: mov dword ptr [esp], eax; call 0x23680; add esp, 0x20; pop ebx; ret; 
0x0009c8c1: mov dword ptr [esp], eax; call 0x23800; add esp, 8; pop ebx; ret; 
0x0009c387: mov dword ptr [esp], eax; call 0x23880; add esp, 8; pop ebx; ret; 
0x0006458a: mov dword ptr [esp], eax; call 0x23970; add esp, 4; pop ebx; ret; 
0x00065806: mov dword ptr [esp], eax; call 0x23a20; add esp, 0x20; pop ebx; ret; 
0x0009c571: mov dword ptr [esp], eax; call 0x23a30; add esp, 8; pop ebx; ret; 
0x00094913: mov dword ptr [esp], eax; call 0x23a40; add esp, 0x10; pop ebx; ret; 
0x0006b126: mov dword ptr [esp], eax; call 0x23a60; add esp, 0xc; pop ebx; ret; 
0x0009c3e9: mov dword ptr [esp], eax; call 0x23a70; add esp, 8; pop ebx; ret; 
0x000a2c68: mov dword ptr [esp], eax; call 0x23b30; add esp, 8; pop ebx; ret; 
0x000815be: mov dword ptr [esp], eax; call 0x23bd0; add esp, 0x10; pop ebx; ret; 
0x0002a206: mov dword ptr [esp], eax; call 0x23c70; add esp, 0xc; pop ebx; ret; 
0x000fd9eb: mov dword ptr [esp], eax; call 0x23c90; add esp, 0x10; pop ebx; ret; 
0x000d69a8: mov dword ptr [esp], eax; call 0x23ca0; add esp, 0xc; pop ebx; ret; 
0x000b9212: mov dword ptr [esp], eax; call 0x23d90; add esp, 0x24; pop ebx; ret; 
0x0003fadf: mov dword ptr [esp], eax; call 0x23da0; add esp, 0x18; pop ebx; ret; 
0x000a9aab: mov dword ptr [esp], eax; call 0x23df0; add esp, 4; pop ebx; ret; 
0x000f4afd: mov dword ptr [esp], eax; call 0x23e40; add esp, 0x18; pop ebx; ret; 
0x000ebb25: mov dword ptr [esp], eax; call 0x23eb0; add esp, 4; pop ebx; ret; 
0x0002a16f: mov dword ptr [esp], eax; call 0x23ec0; add esp, 0xc; pop ebx; ret; 
0x000a356d: mov dword ptr [esp], eax; call 0x23f60; add esp, 0xc; pop ebx; ret; 
0x0003508d: mov dword ptr [esp], eax; call 0x23fa0; add esp, 0x10; pop ebx; ret; 
0x0009c1fc: mov dword ptr [esp], eax; call 0x23fb0; add esp, 8; pop ebx; ret; 
0x000645ca: mov dword ptr [esp], eax; call 0x24010; add esp, 0x34; pop ebx; ret; 
0x00064612: mov dword ptr [esp], eax; call 0x24010; add esp, 0x38; pop ebx; ret; 
0x000a3535: mov dword ptr [esp], eax; call 0x24010; add esp, 8; pop ebx; ret; 
0x000a3bec: mov dword ptr [esp], eax; call 0x24020; add esp, 0x10; pop ebx; ret; 
0x00036e9d: mov dword ptr [esp], eax; call 0x24030; add esp, 4; pop ebx; ret; 
0x00049717: mov dword ptr [esp], eax; call 0x240c0; add esp, 0x18; pop ebx; ret; 
0x000e866d: mov dword ptr [esp], eax; call 0x240e0; add esp, 0x14; pop ebx; ret; 
0x000655f5: mov dword ptr [esp], eax; call 0x24130; add esp, 0xc; pop ebx; ret; 
0x00077d35: mov dword ptr [esp], eax; call 0x24170; add esp, 4; pop ebx; ret; 
0x000c51c9: mov dword ptr [esp], eax; call 0x241a0; add esp, 8; pop ebx; ret; 
0x000c5157: mov dword ptr [esp], eax; call 0x24250; add esp, 8; pop ebx; ret; 
0x0009cbde: mov dword ptr [esp], eax; call 0x24300; add esp, 0xc; pop ebx; ret; 
0x00109074: mov dword ptr [esp], eax; call 0x24320; add esp, 0xc; pop ebx; ret; 
0x000edcf8: mov dword ptr [esp], eax; call 0x24370; add esp, 0xc; pop ebx; ret; 
0x0009c6e0: mov dword ptr [esp], eax; call 0x243f0; add esp, 8; pop ebx; ret; 
0x000b5ec9: mov dword ptr [esp], eax; call 0x24410; add esp, 4; pop ebx; ret; 
0x000b8f2f: mov dword ptr [esp], eax; call 0x24440; add esp, 0x24; pop ebx; ret; 
0x000bb071: mov dword ptr [esp], eax; call 0x24440; add esp, 0x28; pop ebx; ret; 
0x000644ed: mov dword ptr [esp], eax; call 0x24450; add esp, 8; pop ebx; ret; 
0x000d1f1f: mov dword ptr [esp], eax; call 0x24460; add esp, 8; pop ebx; ret; 
0x000ca879: mov dword ptr [esp], eax; call 0x244f0; add esp, 0xc; pop ebx; ret; 
0x0005a1db: mov dword ptr [esp], eax; call 0x24540; add esp, 8; pop ebx; ret; 
0x000b902d: mov dword ptr [esp], eax; call 0x24550; add esp, 0xc; pop ebx; ret; 
0x00034e5c: mov dword ptr [esp], eax; call 0x24570; add esp, 0xc; pop ebx; ret; 
0x00065073: mov dword ptr [esp], eax; call 0x245f0; add esp, 0x18; pop ebx; ret; 
0x0009a849: mov dword ptr [esp], eax; call 0x246a0; add esp, 0xc; pop ebx; ret; 
0x00034fad: mov dword ptr [esp], eax; call 0x24700; add esp, 0xc; pop ebx; ret; 
0x00032625: mov dword ptr [esp], eax; call 0x24750; add esp, 8; pop ebx; ret; 
0x000db585: mov dword ptr [esp], eax; call 0x247a0; add esp, 8; pop ebx; ret; 
0x000f406f: mov dword ptr [esp], eax; call 0x247b0; add esp, 0x10; pop ebx; ret; 
0x00046002: mov dword ptr [esp], eax; call 0x24800; add esp, 8; pop ebx; ret; 
0x00044fda: mov dword ptr [esp], eax; call 0x24840; add esp, 0x14; pop ebx; ret; 
0x0009c70a: mov dword ptr [esp], eax; call 0x24860; add esp, 8; pop ebx; ret; 
0x0008cbfa: mov dword ptr [esp], eax; call 0x248d0; add esp, 0x14; pop ebx; ret; 
0x00035050: mov dword ptr [esp], eax; call 0x24a00; add esp, 0xc; pop ebx; ret; 
0x0009252b: mov dword ptr [esp], eax; call 0x24a40; add esp, 0xc; pop ebx; ret; 
0x000db731: mov dword ptr [esp], eax; call 0x24a50; add esp, 0x14; pop ebx; ret; 
0x000db3ea: mov dword ptr [esp], eax; call 0x24a90; add esp, 0xc; pop ebx; ret; 
0x0005d652: mov dword ptr [esp], eax; call 0x24ac0; add esp, 8; pop ebx; ret; 
0x0004ef67: mov dword ptr [esp], eax; call 0x24b30; add esp, 0xc; pop ebx; ret; 
0x00029d23: mov dword ptr [esp], eax; call 0x24b40; add esp, 0x18; pop ebx; ret; 
0x00077167: mov dword ptr [esp], eax; call 0x24b60; add esp, 8; pop ebx; ret; 
0x0010a010: mov dword ptr [esp], eax; call 0x24ba0; add esp, 0x10; pop ebx; ret; 
0x0003521f: mov dword ptr [esp], eax; call 0x24bf0; add esp, 0x10; pop ebx; ret; 
0x000647c2: mov dword ptr [esp], eax; call 0x24c30; add esp, 8; pop ebx; ret; 
0x000651ab: mov dword ptr [esp], eax; call 0x24c50; add esp, 0x20; pop ebx; ret; 
0x000db5fb: mov dword ptr [esp], eax; call 0x24c80; add esp, 4; pop ebx; ret; 
0x0009c5d3: mov dword ptr [esp], eax; call 0x24d10; add esp, 8; pop ebx; ret; 
0x000b2c17: mov dword ptr [esp], eax; call 0x24d60; add esp, 8; pop ebx; ret; 
0x0002cfbc: mov dword ptr [esp], eax; call 0x24d70; add esp, 0x10; pop ebx; ret; 
0x00034e99: mov dword ptr [esp], eax; call 0x24dc0; add esp, 0x10; pop ebx; ret; 
0x00045053: mov dword ptr [esp], eax; call 0x24de0; add esp, 0x10; pop ebx; ret; 
0x0008beb9: mov dword ptr [esp], eax; call 0x24e10; add esp, 4; pop ebx; ret; 
0x00064f73: mov dword ptr [esp], eax; call 0x24e90; add esp, 0x20; pop ebx; ret; 
0x0002d13f: mov dword ptr [esp], eax; call 0x24ec0; add esp, 0xc; pop ebx; ret; 
0x000e88c3: mov dword ptr [esp], eax; call 0x24f40; add esp, 4; pop ebx; ret; 
0x000e36b0: mov dword ptr [esp], eax; call 0x24fc0; add esp, 0x14; pop ebx; ret; 
0x000e885a: mov dword ptr [esp], eax; call 0x24ff0; add esp, 8; pop ebx; ret; 
0x00036ef8: mov dword ptr [esp], eax; call 0x25080; add esp, 4; pop ebx; ret; 
0x000c4fc4: mov dword ptr [esp], eax; call 0x25090; add esp, 8; pop ebx; ret; 
0x000e9660: mov dword ptr [esp], eax; call 0x250c0; add esp, 0x18; pop ebx; ret; 
0x00029d83: mov dword ptr [esp], eax; call 0x250e0; add esp, 0xc; pop ebx; ret; 
0x00035544: mov dword ptr [esp], eax; call 0x25110; add esp, 8; pop ebx; ret; 
0x0009ccb9: mov dword ptr [esp], eax; call 0x25140; add esp, 0x10; pop ebx; ret; 
0x000bca61: mov dword ptr [esp], eax; call 0x25160; add esp, 0x2c; pop ebx; ret; 
0x00064faf: mov dword ptr [esp], eax; call 0x25170; add esp, 0x10; pop ebx; ret; 
0x00064e5b: mov dword ptr [esp], eax; call 0x25190; add esp, 0x14; pop ebx; ret; 
0x000f4dc6: mov dword ptr [esp], eax; call 0x25260; add esp, 8; pop ebx; ret; 
0x000ea5ef: mov dword ptr [esp], eax; call 0x252b0; add esp, 0x10; pop ebx; ret; 
0x0004cf17: mov dword ptr [esp], eax; call 0x25360; add esp, 0x18; pop ebx; ret; 
0x000333c6: mov dword ptr [esp], eax; call 0x25410; add esp, 0x10; pop ebx; ret; 
0x0005d567: mov dword ptr [esp], eax; call 0x25420; add esp, 8; pop ebx; ret; 
0x0008b1a7: mov dword ptr [esp], eax; call 0x25480; add esp, 4; pop ebx; ret; 
0x000d69e1: mov dword ptr [esp], eax; call 0x254c0; add esp, 0xc; pop ebx; ret; 
0x00029ae3: mov dword ptr [esp], eax; call 0x25510; add esp, 0x18; pop ebx; ret; 
0x000369bf: mov dword ptr [esp], eax; call 0x25580; add esp, 0xc; pop ebx; ret; 
0x000369f7: mov dword ptr [esp], eax; call 0x255c0; add esp, 0x10; pop ebx; ret; 
0x00101503: mov dword ptr [esp], eax; call 0x25620; add esp, 0x14; pop ebx; ret; 
0x000d6940: mov dword ptr [esp], eax; call 0x25660; add esp, 0x10; pop ebx; ret; 
0x000671f2: mov dword ptr [esp], eax; call 0x25670; add esp, 0x18; pop ebx; ret; 
0x0007d253: mov dword ptr [esp], eax; call 0x256a0; add esp, 0xc; pop ebx; ret; 
0x00029bbb: mov dword ptr [esp], eax; call 0x256b0; add esp, 0x10; pop ebx; ret; 
0x0002a1bf: mov dword ptr [esp], eax; call 0x25760; add esp, 0x1c; pop ebx; ret; 
0x000a9a8b: mov dword ptr [esp], eax; call 0x25790; add esp, 0xc; pop ebx; ret; 
0x000fa1a2: mov dword ptr [esp], eax; call 0x25870; add esp, 4; pop ebx; ret; 
0x000e8442: mov dword ptr [esp], eax; call 0x25900; add esp, 0xc; pop ebx; ret; 
0x0005565f: mov dword ptr [esp], eax; call 0x25940; add esp, 4; pop ebx; ret; 
0x000e36fd: mov dword ptr [esp], eax; call 0x25950; add esp, 0x18; pop ebx; ret; 
0x00029cdb: mov dword ptr [esp], eax; call 0x259b0; add esp, 0x18; pop ebx; ret; 
0x00034ded: mov dword ptr [esp], eax; call 0x25a10; add esp, 0xc; pop ebx; ret; 
0x0004507b: mov dword ptr [esp], eax; call 0x25a40; add esp, 8; pop ebx; ret; 
0x0006615a: mov dword ptr [esp], eax; call 0x25ac0; add esp, 0x3c; pop ebx; ret; 
0x0009efe6: mov dword ptr [esp], eax; call 0x25ae0; add esp, 0x18; pop ebx; ret; 
0x000ecadf: mov dword ptr [esp], eax; call 0x25af0; add esp, 8; pop ebx; ret; 
0x000d6a67: mov dword ptr [esp], eax; call 0x25bb0; add esp, 0xc; pop ebx; ret; 
0x0009c801: mov dword ptr [esp], eax; call 0x25be0; add esp, 8; pop ebx; ret; 
0x0009ca30: mov dword ptr [esp], eax; call 0x25c60; add esp, 8; pop ebx; ret; 
0x000eaf36: mov dword ptr [esp], eax; call 0x25c80; add esp, 8; pop ebx; ret; 
0x0006556f: mov dword ptr [esp], eax; call 0x25cf0; add esp, 0x14; pop ebx; ret; 
0x0008be1d: mov dword ptr [esp], eax; call 0x25d70; add esp, 4; pop ebx; ret; 
0x000c8015: mov dword ptr [esp], eax; call 0x25d80; add esp, 4; pop ebx; ret; 
0x000928c2: mov dword ptr [esp], eax; call 0x25dc0; add esp, 0x10; pop ebx; ret; 
0x00033488: mov dword ptr [esp], eax; call 0x25e40; add esp, 0x10; pop ebx; ret; 
0x0003350c: mov dword ptr [esp], eax; call 0x25e40; add esp, 0xc; pop ebx; ret; 
0x0009c261: mov dword ptr [esp], eax; call 0x25e50; add esp, 8; pop ebx; ret; 
0x0005bfd5: mov dword ptr [esp], eax; call 0x25e60; add esp, 4; pop ebx; ret; 
0x00034e27: mov dword ptr [esp], eax; call 0x25e70; add esp, 0x10; pop ebx; ret; 
0x00040733: mov dword ptr [esp], eax; call 0x25ea0; add esp, 0xc; pop ebx; ret; 
0x000d8faa: mov dword ptr [esp], eax; call 0x25ec0; add esp, 0xc; pop ebx; ret; 
0x000e366b: mov dword ptr [esp], eax; call 0x25ed0; add esp, 0x1c; pop ebx; ret; 
0x0005657b: mov dword ptr [esp], eax; call 0x25ee0; add esp, 0x18; pop ebx; ret; 
0x0002b0d4: mov dword ptr [esp], eax; call 0x25f40; add esp, 0x10; pop ebx; ret; 
0x000f4cd1: mov dword ptr [esp], eax; call 0x25f50; add esp, 0xc; pop ebx; ret; 
0x0006574c: mov dword ptr [esp], eax; call 0x25fb0; add esp, 0x20; pop ebx; ret; 
0x00048f3a: mov dword ptr [esp], eax; call 0x25fd0; add esp, 0x18; pop ebx; ret; 
0x0009c4ad: mov dword ptr [esp], eax; call 0x26010; add esp, 8; pop ebx; ret; 
0x0002dbe9: mov dword ptr [esp], eax; call 0x26040; add esp, 0xc; pop ebx; ret; 
0x0010a650: mov dword ptr [esp], eax; call 0x26100; add esp, 8; pop ebx; ret; 
0x0004b2b7: mov dword ptr [esp], eax; call 0x26160; add esp, 0x18; pop ebx; ret; 
0x000e92fe: mov dword ptr [esp], eax; call 0x261c0; add esp, 0x10; pop ebx; ret; 
0x000f3ec3: mov dword ptr [esp], eax; call 0x262f0; add esp, 0x20; pop ebx; ret; 
0x0006514b: mov dword ptr [esp], eax; call 0x26310; add esp, 0x1c; pop ebx; ret; 
0x000f4b3d: mov dword ptr [esp], eax; call 0x26320; add esp, 0x14; pop ebx; ret; 
0x00029e33: mov dword ptr [esp], eax; call 0x26340; add esp, 0x18; pop ebx; ret; 
0x00029c93: mov dword ptr [esp], eax; call 0x26360; add esp, 0x18; pop ebx; ret; 
0x0010a4a7: mov dword ptr [esp], eax; call 0x26370; add esp, 8; pop ebx; ret; 
0x00035297: mov dword ptr [esp], eax; call 0x263c0; add esp, 0x14; pop ebx; ret; 
0x000b2b5f: mov dword ptr [esp], eax; call 0x26430; add esp, 8; pop ebx; ret; 
0x0009c9bc: mov dword ptr [esp], eax; call 0x26440; add esp, 8; pop ebx; ret; 
0x0006aae7: mov dword ptr [esp], eax; call 0x26490; add esp, 0x10; pop ebx; ret; 
0x000351e7: mov dword ptr [esp], eax; call 0x26510; add esp, 0xc; pop ebx; ret; 
0x000450ad: mov dword ptr [esp], eax; call 0x26570; add esp, 0xc; pop ebx; ret; 
0x00035257: mov dword ptr [esp], eax; call 0x265c0; add esp, 0x10; pop ebx; ret; 
0x00048b3a: mov dword ptr [esp], eax; call 0x26620; add esp, 0x18; pop ebx; ret; 
0x0006ba3b: mov dword ptr [esp], eax; call 0x26660; add esp, 8; pop ebx; ret; 
0x00076273: mov dword ptr [esp], eax; call 0x266a0; add esp, 8; pop ebx; ret; 
0x000f1d9f: mov dword ptr [esp], eax; call 0x266d0; add esp, 4; pop ebx; ret; 
0x000f4119: mov dword ptr [esp], eax; call 0x26720; add esp, 4; pop ebx; ret; 
0x000764c1: mov dword ptr [esp], eax; call 0x26750; add esp, 0x14; pop ebx; ret; 
0x0009c697: mov dword ptr [esp], eax; call 0x267a0; add esp, 8; pop ebx; ret; 
0x000e9fff: mov dword ptr [esp], eax; call 0x26810; add esp, 8; pop ebx; ret; 
0x00059cd3: mov dword ptr [esp], eax; call 0x268d0; add esp, 8; pop ebx; ret; 
0x0004fdf7: mov dword ptr [esp], eax; call 0x268f0; add esp, 0x24; pop ebx; ret; 
0x0002dbb5: mov dword ptr [esp], eax; call 0x26970; add esp, 0xc; pop ebx; ret; 
0x00065c2f: mov dword ptr [esp], eax; call 0x26980; add esp, 0xc; pop ebx; ret; 
0x0009c44b: mov dword ptr [esp], eax; call 0x26990; add esp, 8; pop ebx; ret; 
0x00036aad: mov dword ptr [esp], eax; call 0x26b00; add esp, 0x10; pop ebx; ret; 
0x0005d5b7: mov dword ptr [esp], eax; call 0x26b40; add esp, 8; pop ebx; ret; 
0x0010a57e: mov dword ptr [esp], eax; call 0x26b60; add esp, 8; pop ebx; ret; 
0x000657a9: mov dword ptr [esp], eax; call 0x26b70; add esp, 0x20; pop ebx; ret; 
0x0005a79a: mov dword ptr [esp], eax; call 0x26bb0; add esp, 4; pop ebx; ret; 
0x0009c2c3: mov dword ptr [esp], eax; call 0x26bc0; add esp, 8; pop ebx; ret; 
0x0009255b: mov dword ptr [esp], eax; call 0x26cb0; add esp, 0xc; pop ebx; ret; 
0x0008b23f: mov dword ptr [esp], eax; call 0x26cd0; add esp, 4; pop ebx; ret; 
0x000672c8: mov dword ptr [esp], eax; call 0x26d80; add esp, 0x10; pop ebx; ret; 
0x0008a6be: mov dword ptr [esp], eax; call 0x26d90; add esp, 4; pop ebx; ret; 
0x0002a13e: mov dword ptr [esp], eax; call 0x26da0; add esp, 0x10; pop ebx; ret; 
0x000e8787: mov dword ptr [esp], eax; call 0x26dd0; add esp, 4; pop ebx; ret; 
0x000f4ea3: mov dword ptr [esp], eax; call 0x26e00; add esp, 0x18; pop ebx; ret; 
0x0002a395: mov dword ptr [esp], eax; call 0x26e50; add esp, 4; pop ebx; ret; 
0x00077150: mov dword ptr [esp], eax; call 0x26e50; add esp, 8; pop ebx; ret; 
0x0008a62d: mov dword ptr [esp], eax; call 0x26ec0; add esp, 4; pop ebx; ret; 
0x001014cd: mov dword ptr [esp], eax; call 0x26ee0; add esp, 0x14; pop ebx; ret; 
0x0010b62a: mov dword ptr [esp], eax; call 0x26ef0; add esp, 8; pop ebx; ret; 
0x0005d58f: mov dword ptr [esp], eax; call 0x26f90; add esp, 8; pop ebx; ret; 
0x00051f76: mov dword ptr [esp], eax; call 0x26fb0; add esp, 8; pop ebx; ret; 
0x000e07cf: mov dword ptr [esp], eax; call 0x27010; add esp, 4; pop ebx; ret; 
0x00064756: mov dword ptr [esp], eax; call 0x270b0; add esp, 4; pop ebx; ret; 
0x00064e13: mov dword ptr [esp], eax; call 0x270c0; add esp, 0x24; pop ebx; ret; 
0x000f4ca1: mov dword ptr [esp], eax; call 0x27170; add esp, 0x10; pop ebx; ret; 
0x0009c237: mov dword ptr [esp], eax; call 0x27180; add esp, 0xc; pop ebx; ret; 
0x0009c93f: mov dword ptr [esp], eax; call 0x27190; add esp, 0xc; pop ebx; ret; 
0x000b23ff: mov dword ptr [esp], eax; call 0x27220; add esp, 0x14; pop ebx; ret; 
0x00029f15: mov dword ptr [esp], eax; call 0x27250; add esp, 0x14; pop ebx; ret; 
0x00029a9b: mov dword ptr [esp], eax; call 0x27260; add esp, 0x18; pop ebx; ret; 
0x00029f4d: mov dword ptr [esp], eax; call 0x27270; add esp, 0x10; pop ebx; ret; 
0x0009d0b5: mov dword ptr [esp], eax; call 0x27290; add esp, 0x18; pop ebx; ret; 
0x00080ae5: mov dword ptr [esp], eax; call 0x27300; add esp, 0x10; pop ebx; ret; 
0x0002db83: mov dword ptr [esp], eax; call 0x27350; add esp, 0x10; pop ebx; ret; 
0x000a3bb4: mov dword ptr [esp], eax; call 0x27370; add esp, 0x14; pop ebx; ret; 
0x000f4e5b: mov dword ptr [esp], eax; call 0x273e0; add esp, 0x10; pop ebx; ret; 
0x000e077f: mov dword ptr [esp], eax; call 0x27430; add esp, 4; pop ebx; ret; 
0x0006722f: mov dword ptr [esp], eax; call 0x27470; add esp, 0x10; pop ebx; ret; 
0x00029c4b: mov dword ptr [esp], eax; call 0x274a0; add esp, 0x18; pop ebx; ret; 
0x00029c03: mov dword ptr [esp], eax; call 0x274d0; add esp, 0x18; pop ebx; ret; 
0x0002bba1: mov dword ptr [esp], eax; call 0x274f0; add esp, 0xc; pop ebx; ret; 
0x000345cb: mov dword ptr [esp], eax; call 0x27540; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000e88a3: mov dword ptr [esp], eax; call 0x27570; add esp, 4; pop ebx; ret; 
0x0003590b: mov dword ptr [esp], eax; call 0x27590; add esp, 0x10; pop ebx; ret; 
0x0008ccd5: mov dword ptr [esp], eax; call 0x275e0; add esp, 0x14; pop ebx; ret; 
0x0002a106: mov dword ptr [esp], eax; call 0x27610; add esp, 0x10; pop ebx; ret; 
0x000d6a1d: mov dword ptr [esp], eax; call 0x27630; add esp, 0xc; pop ebx; ret; 
0x000c99f0: mov dword ptr [esp], eax; call 0x27650; add esp, 8; pop ebx; ret; 
0x0010154b: mov dword ptr [esp], eax; call 0x27660; add esp, 0x14; pop ebx; ret; 
0x000e8883: mov dword ptr [esp], eax; call 0x27680; add esp, 8; pop ebx; ret; 
0x0009c50f: mov dword ptr [esp], eax; call 0x27690; add esp, 8; pop ebx; ret; 
0x000b8cd4: mov dword ptr [esp], eax; call 0x276a0; add esp, 8; pop ebx; ret; 
0x00065213: mov dword ptr [esp], eax; call 0x276b0; add esp, 0x24; pop ebx; ret; 
0x00035ed3: mov dword ptr [esp], eax; call 0x276c0; add esp, 0x10; pop ebx; ret; 
0x00048733: mov dword ptr [esp], eax; call 0x27720; add esp, 0x18; pop ebx; ret; 
0x000ca8a1: mov dword ptr [esp], eax; call 0x27740; add esp, 8; pop ebx; ret; 
0x0006591b: mov dword ptr [esp], eax; call 0x277c0; add esp, 0xc; pop ebx; ret; 
0x000f81b7: mov dword ptr [esp], eax; call 0x27840; add esp, 4; pop ebx; ret; 
0x00035835: mov dword ptr [esp], eax; call 0x278a0; add esp, 4; pop ebx; ret; 
0x0006588f: mov dword ptr [esp], eax; call 0x278c0; add esp, 0x10; pop ebx; ret; 
0x0006536b: mov dword ptr [esp], eax; call 0x279a0; add esp, 0x14; pop ebx; ret; 
0x0006452e: mov dword ptr [esp], eax; call 0x63ffe; add esp, 0x10; pop ebx; ret; 
0x000643d8: mov dword ptr [esp], eax; call 0x64068; add esp, 0x10; ret; 
0x000658eb: mov dword ptr [esp], eax; call 0x91465; add esp, 0xc; ret; 
0x000a2ca9: mov dword ptr [esp], eax; call 0xa2529; add esp, 0x10; pop ebx; ret; 
0x000a2b53: mov dword ptr [esp], eax; call 0xa2598; add esp, 0x10; ret; 
0x000a398d: mov dword ptr [esp], eax; call 0xa3830; add esp, 0x10; pop ebx; ret; 
0x000f9840: mov dword ptr [esp], eax; call 0xf972c; add esp, 0x1c; ret; 
0x000f99ee: mov dword ptr [esp], eax; call 0xf9881; add esp, 0x1c; ret; 
0x000f2354: mov dword ptr [esp], eax; call dword ptr [eax + 0x2c]; add esp, 0xc; ret; 
0x000f2375: mov dword ptr [esp], eax; call dword ptr [eax + 0x30]; add esp, 0xc; ret; 
0x000f2386: mov dword ptr [esp], eax; call dword ptr [eax + 0x34]; add esp, 4; ret; 
0x0005f97a: mov dword ptr [esp], eax; call dword ptr [eax + 4]; add esp, 4; ret; 
0x00035bf0: mov dword ptr [esp], eax; call dword ptr [ecx + 0xc]; leave; ret; 
0x000370e0: mov dword ptr [esp], eax; call dword ptr [edx + 4]; add esp, 0xc; ret; 
0x000ba3db: mov dword ptr [esp], eax; call dword ptr [esp + 0x10]; add esp, 8; ret; 
0x000e6977: mov dword ptr [esp], eax; call dword ptr [esp + 0x24]; add esp, 0x20; ret; 
0x0005c914: mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x0009d3ae: mov dword ptr [esp], eax; fld qword ptr [esp]; leave; ret; 
0x0004e4c6: mov dword ptr [esp], ecx; ret; 
0x00064eb3: mov dword ptr [esp], edx; call 0x25370; add esp, 0x1c; pop ebx; ret; 
0x00035b62: mov dword ptr [esp], edx; call dword ptr [eax + 4]; add esp, 0xc; ret; 
0x000c900f: mov dword ptr [esp], edx; call eax; add esp, 0xc; pop ebx; ret; 
0x0005fb2d: mov dword ptr [esp], edx; call ecx; add esp, 0x20; ret; 
0x0004e5cf: mov dword ptr [esp], edx; fldcw word ptr [esp]; add esp, 4; ret; 
0x001066d0: mov eax, 0x131; int 0x80; ret; 
0x000f4de0: mov eax, 0x14; int 0x80; ret; 
0x000213d5: mov eax, 0x15500003; adc eax, 0x3ba0700; add byte ptr [ebp + edx + 0x15], dl; add byte ptr [edi], al; ret 3; 
0x00052181: mov eax, 0x16; add esp, 0xc; pop ebx; pop esi; ret; 
0x00052203: mov eax, 0x16; add esp, 4; pop ebx; pop esi; ret; 
0x00076690: mov eax, 0x18; int 0x80; ret; 
0x000bd240: mov eax, 0x19; int 0x80; ret; 
0x00076670: mov eax, 0x1a0; int 0x80; ret; 
0x00076680: mov eax, 0x1da; int 0x80; ret; 
0x00076560: mov eax, 0x1df; int 0x80; ret; 
0x000c5476: mov eax, 0x20; add esp, 0x18; pop ebx; ret; 
0x000f886b: mov eax, 0x20; ret; 
0x00138517: mov eax, 0x2080310; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000e89a3: mov eax, 0x21; ret; 
0x000a603d: mov eax, 0x22; add esp, 0x10; pop ebx; ret; 
0x0002ba73: mov eax, 0x23; pop ebx; pop esi; ret; 
0x000286e0: mov eax, 0x24; int 0x80; ret; 
0x000286f0: mov eax, 0x27; int 0x80; ret; 
0x0013830b: mov eax, 0x2a10311; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000bd250: mov eax, 0x2b; int 0x80; ret; 
0x0002bbd2: mov eax, 0x2d; add esp, 4; pop ebx; ret; 
0x000f722e: mov eax, 0x2d; sar eax, cl; and eax, 3; ret; 
0x0005d768: mov eax, 0x2d; ret; 
0x000766a0: mov eax, 0x2f; int 0x80; ret; 
0x000c54e9: mov eax, 0x400; ret; 
0x000c54b1: mov eax, 0x40000; ret; 
0x0013e0a4: mov eax, 0x41100e0a; ret; 
0x0013314f: mov eax, 0x41140e0a; ret; 
0x000f281d: mov eax, 0x4f; add esp, 0x18; pop ebx; ret; 
0x000f9a13: mov eax, 0x55; mov ecx, dword ptr [esp + 0x10]; mov dword ptr [ecx], edx; ret; 
0x000f98ee: mov eax, 0x55; pop esi; pop edi; pop ebp; ret; 
0x000f96be: mov eax, 0x55; ret; 
0x0010a71a: mov eax, 0x5bfffffc; ret; 
0x0005c8b8: mov eax, 0x6996; sar eax, cl; and eax, 1; ret; 
0x0005a9db: mov eax, 0x6f665281; mov edx, 0xff6c7072; pop ebp; ret; 
0x0002be00: mov eax, 0x7fffffff; add esp, 0x14; pop ebx; pop esi; ret; 
0x000e4e3c: mov eax, 0x81000268; ret; 
0x000e2f3c: mov eax, 0x81000287; ret; 
0x000db83c: mov eax, 0x810002fe; ret; 
0x000d0b3c: mov eax, 0x810003ab; ret; 
0x000bd93c: mov eax, 0x810004dd; ret; 
0x0009ba3c: mov eax, 0x810006fc; ret; 
0x0008fa3c: mov eax, 0x810007bc; ret; 
0x0006013c: mov eax, 0x81000ab5; ret; 
0x00052e3c: mov eax, 0x81000b88; ret; 
0x0003263c: mov eax, 0x81000d90; ret; 
0x00072d8d: mov eax, 0x8b000001; push eax; sub dh, dh; ret 0x7408; 
0x000c77c0: mov eax, 0x8bfffff4; add byte ptr [ebx - 0x358af608], al; lea eax, dword ptr [ebx - 0x38580]; pop ebx; ret; 
0x00037eab: mov eax, 0x8bfffffe; add al, 0x82; ret; 
0x000ea0bc: mov eax, 0xa; ret; 
0x00148d5f: mov eax, 0xa690208; push cs; adc al, 0x41; ret; 
0x00142847: mov eax, 0xaa90206; push cs; adc al, 0x41; ret; 
0x0012aa3f: mov eax, 0xae10208; push cs; adc al, 0x41; ret; 
0x0012d893: mov eax, 0xafc0210; push cs; adc al, 0x41; ret; 
0x000ea0d4: mov eax, 0xc; ret; 
0x0010a53e: mov eax, 0xc483fff1; or byte ptr [ebx + 0x5e], bl; ret; 
0x0005b5af: mov eax, 0xc483fffc; adc byte ptr [ebx + 0x5e], bl; ret; 
0x000ea0b6: mov eax, 0xd; ret; 
0x00058234: mov eax, 0xe; ret; 
0x000d2a39: mov eax, 0xf; mov eax, dword ptr [ecx + eax*4 - 0x28a4]; ret; 
0x000d0b16: mov eax, 0xff; ret; 
0x000d0b2e: mov eax, 0xffff; ret; 
0x000d0b28: mov eax, 0xffffff; ret; 
0x0003e951: mov eax, 0xffffffff; add esp, 0x10; pop ebx; pop esi; ret; 
0x0004805a: mov eax, 0xffffffff; add esp, 0x14; pop ebx; pop esi; ret; 
0x0004fcdf: mov eax, 0xffffffff; add esp, 0x1c; pop ebx; ret; 
0x000480ce: mov eax, 0xffffffff; add esp, 0x20; pop ebx; pop esi; ret; 
0x00082932: mov eax, 0xffffffff; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010a628: mov eax, 0xffffffff; add esp, 0x3c; pop ebx; pop esi; ret; 
0x0005a000: mov eax, 0xffffffff; add esp, 0x3c; pop ebx; ret; 
0x00059d07: mov eax, 0xffffffff; add esp, 0x58; pop ebx; ret; 
0x000d6703: mov eax, 0xffffffff; add esp, 0xc; pop ebx; ret; 
0x00058411: mov eax, 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x000db787: mov eax, 0xffffffff; add esp, 8; pop ebx; pop esi; ret; 
0x00060b64: mov eax, 0xffffffff; lock xadd dword ptr [edx], eax; dec eax; ret; 
0x0010a6e6: mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x000e9d00: mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x00102e4e: mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0002a251: mov eax, 0xffffffff; pop ebx; ret; 
0x0003f929: mov eax, 0xffffffff; pop esi; pop edi; pop ebp; ret; 
0x0002bbae: mov eax, 0xffffffff; ret; 
0x00036fc4: mov eax, 1; add esp, 0x10; pop ebx; ret; 
0x000c2a24: mov eax, 1; add esp, 0x10; pop esi; ret; 
0x00036fa3: mov eax, 1; add esp, 0x14; pop ebx; ret; 
0x00028556: mov eax, 1; add esp, 0xc; pop ebx; ret; 
0x000370c2: mov eax, 1; add esp, 0xc; ret; 
0x00055b06: mov eax, 1; add esp, 4; pop ebx; ret; 
0x00096776: mov eax, 1; add esp, 8; pop ebx; ret; 
0x000c2975: mov eax, 1; add esp, 8; pop esi; ret; 
0x0010a680: mov eax, 1; int 0x80; ret; 
0x00060b84: mov eax, 1; lock xadd dword ptr [edx], eax; inc eax; ret; 
0x000bf699: mov eax, 1; pop ebx; ret; 
0x000c2760: mov eax, 1; pop esi; pop edi; ret; 
0x000c2875: mov eax, 1; pop esi; ret; 
0x0005a9ea: mov eax, 1; xor edx, edx; pop ebp; ret; 
0x0004e0cd: mov eax, 1; leave; ret; 
0x00036cf0: mov eax, 1; ret; 
0x0005bc97: mov eax, 2; pop esi; ret; 
0x000b4840: mov eax, 2; leave; ret; 
0x0003f64a: mov eax, 2; ret; 
0x00066c50: mov eax, 3; add esp, 0x24; pop ebx; ret; 
0x000b4833: mov eax, 3; leave; ret; 
0x000ea097: mov eax, 4; ret; 
0x000ea0ce: mov eax, 5; ret; 
0x000ea09d: mov eax, 6; ret; 
0x000f9b93: mov eax, 7; ret; 
0x000ea0c2: mov eax, 8; ret; 
0x00052321: mov eax, 9; add esp, 4; pop esi; ret; 
0x00147dde: mov eax, dword ptr [0x140e0a01]; inc ecx; ret; 
0x0013830e: mov eax, dword ptr [0x140e0a02]; inc ecx; ret; 
0x000d5ccf: mov eax, dword ptr [0x21ca89d8]; ret 0xc789; 
0x0013c731: mov eax, dword ptr [0x41140e0a]; ret; 
0x00104353: mov eax, dword ptr [0x81000073]; ret; 
0x000e4b53: mov eax, dword ptr [0x8100026b]; ret; 
0x000c7c53: mov eax, dword ptr [0x8100043a]; ret; 
0x0008de53: mov eax, dword ptr [0x810007d8]; ret; 
0x00082e53: mov eax, dword ptr [0x81000888]; ret; 
0x00077353: mov eax, dword ptr [0x81000943]; ret; 
0x0006ad53: mov eax, dword ptr [0x81000a09]; ret; 
0x0002d153: mov eax, dword ptr [0x81000de5]; ret; 
0x00044a59: mov eax, dword ptr [0x896ed9eb]; ret 0xf231; 
0x00057a34: mov eax, dword ptr [0x89fffff9]; ret 0x9ae9; 
0x000ecc52: mov eax, dword ptr [0xc483fff3]; add al, 0x5b; pop esi; ret; 
0x000ea9fb: mov eax, dword ptr [0xc483fff3]; or al, 0x5b; ret; 
0x000aba01: mov eax, dword ptr [0xf608508b]; ret 0x7401; 
0x0005f9ad: mov eax, dword ptr [eax + 0x114]; ret; 
0x0005f98b: mov eax, dword ptr [eax + 0x12c]; ret; 
0x00036d0b: mov eax, dword ptr [eax + 0x14]; ret; 
0x0005f9aa: mov eax, dword ptr [eax + 0x1c]; mov eax, dword ptr [eax + 0x114]; ret; 
0x0005f988: mov eax, dword ptr [eax + 0x1c]; mov eax, dword ptr [eax + 0x12c]; ret; 
0x000d7df4: mov eax, dword ptr [eax + 0x20]; ret; 
0x000f1d88: mov eax, dword ptr [eax + 0xc]; ret; 
0x000ead82: mov eax, dword ptr [eax + 0xca4]; mov edx, dword ptr [esp + 4]; movsx eax, word ptr [eax + edx*2 + 2]; ret; 
0x000ead4b: mov eax, dword ptr [eax + 0xca8]; mov edx, dword ptr [esp + 4]; movsx eax, word ptr [eax + edx*2 + 2]; ret; 
0x000bd2d4: mov eax, dword ptr [eax + 8]; mov ecx, dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0009c973: mov eax, dword ptr [eax + esi*4]; add esp, 8; pop ebx; pop esi; ret; 
0x000f819c: mov eax, dword ptr [eax]; add eax, 0xc; ret; 
0x0005ee54: mov eax, dword ptr [eax]; bswap eax; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000ead35: mov eax, dword ptr [eax]; mov edx, dword ptr [esp + 4]; movsx eax, word ptr [eax + edx*2 + 2]; ret; 
0x000eaa52: mov eax, dword ptr [eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2 + 2]; and eax, 1; ret; 
0x000eaa15: mov eax, dword ptr [eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2 + 2]; and eax, 5; ret; 
0x0003ba8c: mov eax, dword ptr [eax]; movsx eax, word ptr [eax + edx]; pop ebx; ret; 
0x000eba4b: mov eax, dword ptr [eax]; ret; 
0x00061147: mov eax, dword ptr [ebp + 0x10]; mov dword ptr [eax], 0; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000ca94a: mov eax, dword ptr [ebp + 0xc]; bswap edx; bswap eax; pop ebp; ret; 
0x0009c006: mov eax, dword ptr [ebx + 0x22cc]; pop ebx; ret; 
0x0003ba86: mov eax, dword ptr [ebx - 0x1c8]; mov eax, dword ptr [eax]; movsx eax, word ptr [eax + edx]; pop ebx; ret; 
0x0003ba94: mov eax, dword ptr [ebx - 0x1c]; mov eax, dword ptr [eax]; movsx eax, word ptr [eax + edx]; pop ebx; ret; 
0x0010a718: mov eax, dword ptr [ebx - 0x348]; pop ebx; ret; 
0x0007e730: mov eax, dword ptr [ebx - 0x88]; mov dword ptr [eax], 0; add esp, 4; pop ebx; ret; 
0x000ea954: mov eax, dword ptr [ebx - 8]; add esp, 8; pop ebx; pop esi; ret; 
0x00132bde: mov eax, dword ptr [ebx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0009c1d8: mov eax, dword ptr [ecx + 0x22cc]; ret; 
0x0002a1d7: mov eax, dword ptr [ecx + 0x35d0]; ret; 
0x00044087: mov eax, dword ptr [ecx + 0x6400]; ret; 
0x00090a13: mov eax, dword ptr [ecx + 0xb7c4]; ret; 
0x00090a01: mov eax, dword ptr [ecx + 0xb7c8]; ret; 
0x000909ef: mov eax, dword ptr [ecx + 0xb7cc]; ret; 
0x000909dd: mov eax, dword ptr [ecx + 0xb7d0]; ret; 
0x000909cb: mov eax, dword ptr [ecx + 0xb7d4]; ret; 
0x000909b9: mov eax, dword ptr [ecx + 0xb7d8]; ret; 
0x0002bb23: mov eax, dword ptr [ecx + eax*4 + 0x367c]; ret; 
0x000d2a3e: mov eax, dword ptr [ecx + eax*4 - 0x28a4]; ret; 
0x000c54e1: mov eax, dword ptr [ecx + eax*4 - 0x38824]; ret; 
0x000c606d: mov eax, dword ptr [ecx + eax*4 - 0x38834]; ret; 
0x000c6380: mov eax, dword ptr [ecx + eax*4 - 0x38840]; ret; 
0x000e88db: mov eax, dword ptr [ecx - 0x110]; add eax, 0x1c0; ret; 
0x000db53b: mov eax, dword ptr [ecx - 0x110]; mov edx, dword ptr [esp + 4]; mov dword ptr [eax + 0x1b8], edx; ret; 
0x000db557: mov eax, dword ptr [ecx - 0x110]; mov edx, dword ptr [esp + 4]; mov dword ptr [eax + 0x1bc], edx; ret; 
0x00031410: mov eax, dword ptr [ecx - 0x188]; mov word ptr [eax], 0xb; ret; 
0x000eba6d: mov eax, dword ptr [ecx - 0x1b8]; mov eax, dword ptr [eax]; ret; 
0x000ebad9: mov eax, dword ptr [ecx - 0x1b8]; mov edx, dword ptr [esp + 4]; mov dword ptr [eax], edx; ret; 
0x000e013b: mov eax, dword ptr [ecx - 0x1c4]; ret; 
0x000ead2f: mov eax, dword ptr [ecx - 0x1c8]; mov eax, dword ptr [eax]; mov edx, dword ptr [esp + 4]; movsx eax, word ptr [eax + edx*2 + 2]; ret; 
0x000ead66: mov eax, dword ptr [ecx - 0x1c]; mov eax, dword ptr [eax]; mov edx, dword ptr [esp + 4]; movsx eax, word ptr [eax + edx*2 + 2]; ret; 
0x000ebaf1: mov eax, dword ptr [ecx - 0x1fc]; mov eax, dword ptr [eax]; ret; 
0x000ebb05: mov eax, dword ptr [ecx - 0x1fc]; mov edx, dword ptr [esp + 4]; mov dword ptr [eax], edx; ret; 
0x000eba95: mov eax, dword ptr [ecx - 0x2a4]; mov eax, dword ptr [eax]; ret; 
0x0010a66b: mov eax, dword ptr [ecx - 0x2ec]; mov eax, dword ptr [eax]; ret; 
0x000dfd82: mov eax, dword ptr [ecx - 0x320]; mov dword ptr [eax], edx; ret; 
0x000eba81: mov eax, dword ptr [ecx - 0x7c]; mov eax, dword ptr [eax]; ret; 
0x000eba59: mov eax, dword ptr [ecx - 0xd4]; mov eax, dword ptr [eax]; ret; 
0x000ebac1: mov eax, dword ptr [ecx - 0xd4]; mov edx, dword ptr [esp + 4]; mov dword ptr [eax], edx; ret; 
0x000eba45: mov eax, dword ptr [ecx - 0xf0]; mov eax, dword ptr [eax]; ret; 
0x000ebaa9: mov eax, dword ptr [ecx - 0xf0]; mov edx, dword ptr [esp + 4]; mov dword ptr [eax], edx; ret; 
0x00035bee: mov eax, dword ptr [ecx]; mov dword ptr [esp], eax; call dword ptr [ecx + 0xc]; leave; ret; 
0x000c5242: mov eax, dword ptr [edx + 0xc]; add ecx, eax; mov dword ptr [edx + 0xc], ecx; ret; 
0x000c5201: mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x000f299d: mov eax, dword ptr [edx + 8]; bswap eax; add esp, 0x10; pop ebx; ret; 
0x0009c6ce: mov eax, dword ptr [edx + eax*4]; add esp, 8; pop ebx; ret; 
0x00037eaf: mov eax, dword ptr [edx + eax*4]; ret; 
0x000a8d41: mov eax, dword ptr [edx]; mov dword ptr [edx], ecx; ret; 
0x0002c290: mov eax, dword ptr [esi + 0x24]; add esp, 0x10; pop ebx; pop esi; ret; 
0x0002c23c: mov eax, dword ptr [esi + 0x28]; add esp, 0x10; pop ebx; pop esi; ret; 
0x000f96d6: mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x000f96b4: mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0xffffffff; mov eax, 0x55; ret; 
0x000f9ac6: mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x00029fff: mov eax, dword ptr [esp + 0x14]; add esp, 0x18; pop ebx; ret; 
0x00095bb7: mov eax, dword ptr [esp + 0x14]; add esp, 0x20; pop ebx; ret; 
0x000f9712: mov eax, dword ptr [esp + 0x14]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x000f9705: mov eax, dword ptr [esp + 0x14]; mov dword ptr [eax], 0xfffffffe; xor eax, eax; ret; 
0x000f9b6b: mov eax, dword ptr [esp + 0x14]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0005d6d4: mov eax, dword ptr [esp + 0x18]; add esp, 0x28; pop ebx; ret; 
0x00095562: mov eax, dword ptr [esp + 0x18]; call 0x94920; add esp, 0x14; ret; 
0x000f9b11: mov eax, dword ptr [esp + 0x18]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x000f9b04: mov eax, dword ptr [esp + 0x18]; mov dword ptr [eax], 0xfffffffe; xor eax, eax; ret; 
0x00090b09: mov eax, dword ptr [esp + 0x1c]; add esp, 0x2c; pop ebx; ret; 
0x000f9bc6: mov eax, dword ptr [esp + 0x1c]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x000f9b89: mov eax, dword ptr [esp + 0x1c]; mov dword ptr [eax], 0xffffffff; mov eax, 7; ret; 
0x000f9bb9: mov eax, dword ptr [esp + 0x1c]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x000437cb: mov eax, dword ptr [esp + 0x20]; add esp, 0x24; pop ebx; ret; 
0x0008937d: mov eax, dword ptr [esp + 0x24]; add esp, 0x28; pop ebx; ret; 
0x000893fd: mov eax, dword ptr [esp + 0x28]; add esp, 0x2c; pop ebx; ret; 
0x000f9a55: mov eax, dword ptr [esp + 0xc]; mov dword ptr [eax], 0xffffffff; xor eax, eax; ret; 
0x000f971f: mov eax, dword ptr [esp + 0xc]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x00036ce8: mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x000ead9a: mov eax, dword ptr [esp + 4]; add eax, 0x20; ret; 
0x0004f7e4: mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0004e6e0: mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x0002bb1c: mov eax, dword ptr [esp + 4]; lea eax, dword ptr [eax + eax*2]; mov eax, dword ptr [ecx + eax*4 + 0x367c]; ret; 
0x000524e5: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x000f9a99: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x000524c7: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x000524d7: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 8], edx; xor eax, eax; ret; 
0x0006b648: mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0006b655: mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0xffffffff; xor eax, eax; ret; 
0x000315bd: mov eax, dword ptr [esp + 4]; mov dword ptr [ecx + 0x1314], eax; ret; 
0x0008ea4a: mov eax, dword ptr [esp + 4]; mov dword ptr [ecx + 0x2220], eax; ret; 
0x000e0717: mov eax, dword ptr [esp + 4]; mov dword ptr [ecx + 0x2dc0], eax; ret; 
0x00036d07: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0005f9a6: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x1c]; mov eax, dword ptr [eax + 0x114]; ret; 
0x0005f984: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x1c]; mov eax, dword ptr [eax + 0x12c]; ret; 
0x000d7df0: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x20]; ret; 
0x000f1d84: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0xc]; ret; 
0x000f8198: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; add eax, 0xc; ret; 
0x000524b9: mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0004e055: mov eax, dword ptr [esp + 4]; or eax, 0x80000000; ret; 
0x0004e19c: mov eax, dword ptr [esp + 4]; shr eax, 0x1f; ret; 
0x0005d124: mov eax, dword ptr [esp + 4]; shr eax, cl; add esp, 0x10; ret; 
0x000ead92: mov eax, dword ptr [esp + 4]; sub eax, 0x20; ret; 
0x0007fad0: mov eax, dword ptr [esp + 4]; xor edx, edx; div dword ptr [esp + 8]; ret; 
0x0007fae0: mov eax, dword ptr [esp + 4]; cdq; idiv dword ptr [esp + 8]; ret; 
0x0004e036: mov eax, dword ptr [esp + 4]; ret; 
0x000d670d: mov eax, dword ptr [esp + 8]; add esp, 0xc; pop ebx; ret; 
0x0003ea8b: mov eax, dword ptr [esp + 8]; lea eax, dword ptr [eax + eax + 1]; shl eax, 3; ret; 
0x00060af4: mov eax, dword ptr [esp + 8]; lock add dword ptr [edx], eax; ret; 
0x00060b24: mov eax, dword ptr [esp + 8]; lock and dword ptr [edx], eax; ret; 
0x00060b94: mov eax, dword ptr [esp + 8]; lock or dword ptr [edx], eax; ret; 
0x00052448: mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00060bf4: mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0xc]; cmpxchg dword ptr [edx], ecx; ret; 
0x00060bd4: mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0xc]; lock cmpxchg dword ptr [edx], ecx; ret; 
0x00108fd3: mov eax, dword ptr [esp + 8]; mov edi, edx; pop esi; ret; 
0x00052437: mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0002c457: mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0010672e: mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0003e734: mov eax, dword ptr [esp + 8]; shl eax, 4; add eax, 0x14; ret; 
0x00060bc4: mov eax, dword ptr [esp + 8]; xchg dword ptr [edx], eax; ret; 
0x0004e6a4: mov eax, dword ptr [esp - 4]; and eax, 0xc00; ret; 
0x0004e696: mov eax, dword ptr [esp]; and eax, 0x3f; add esp, 4; ret; 
0x0004e6b6: mov eax, dword ptr [esp]; not eax; and eax, 0x3f; add esp, 4; ret; 
0x0004e5e6: mov eax, dword ptr [esp]; ror eax, 8; and eax, 3; add esp, 4; ret; 
0x000f3dfb: mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x000c8e7a: mov eax, ebx; mov edx, ecx; pop edi; pop ebx; ret; 
0x0002e565: mov eax, ebx; pop ebx; ret 4; 
0x000cf8fd: mov eax, ecx; pop esi; pop edi; ret 4; 
0x00060b42: mov eax, ecx; ret; 
0x000d85cd: mov eax, edi; pop edi; pop ebx; ret; 
0x0005cab7: mov eax, edi; pop esi; pop edi; ret; 
0x000912a2: mov eax, edx; add esp, 0x10; pop ebx; pop edi; ret; 
0x000a6047: mov eax, edx; add esp, 0x10; pop ebx; ret; 
0x00081670: mov eax, edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003254c: mov eax, edx; add esp, 0xc; pop ebx; pop esi; ret; 
0x0005cb68: mov eax, edx; mov ebx, dword ptr [ebp - 4]; leave; ret 4; 
0x000c8ed1: mov eax, edx; pop ebx; xor edx, edx; ret; 
0x000a5116: mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x000cf724: mov eax, edx; sar eax, 0x1f; or eax, 1; ret; 
0x0005bd9a: mov eax, edx; sar edx, 0x1f; sar eax, cl; ret; 
0x0005d1fb: mov eax, edx; xor edx, edx; pop esi; pop ebp; ret; 
0x0005bd02: mov eax, edx; xor edx, edx; shr eax, cl; ret; 
0x0005d16f: mov eax, edx; xor edx, edx; leave; ret; 
0x000a592c: mov eax, edx; nop; ret; 
0x000c54c0: mov eax, edx; ret; 
0x0003e788: mov eax, esi; add esp, 0x10; pop ebx; pop esi; ret; 
0x000357e0: mov eax, esi; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003ee53: mov eax, esi; add esp, 0x18; pop ebx; pop esi; ret; 
0x0007709f: mov eax, esi; add esp, 0x1c; pop ebx; pop esi; ret; 
0x000f244d: mov eax, esi; add esp, 0x20; pop ebx; pop esi; ret; 
0x0005f9fb: mov eax, esi; add esp, 0x20; pop esi; ret 4; 
0x00043907: mov eax, esi; add esp, 0x24; pop ebx; pop esi; ret; 
0x0004d7b9: mov eax, esi; add esp, 0x2c; pop ebx; pop esi; ret; 
0x000c5a3d: mov eax, esi; add esp, 0x30; pop ebx; pop esi; ret; 
0x00032e09: mov eax, esi; add esp, 0xc; pop ebx; pop esi; ret; 
0x000f2092: mov eax, esi; add esp, 0xc; pop esi; pop edi; ret; 
0x00037e64: mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x0006011c: mov eax, esi; add esp, 8; pop ebx; pop esi; ret; 
0x00101930: mov eax, esi; pop ebx; pop esi; ret; 
0x000a4a69: mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0005be79: mov ebp, 0x1ff083c0; and edx, 0x20; add eax, edx; pop esi; ret; 
0x0014cdfa: mov ebp, 0x41100e0a; ret; 
0x001292b5: mov ebp, 0x41140e0a; ret; 
0x000cf937: mov ebp, 0x810003bd; ret; 
0x000c7737: mov ebp, 0x8100043f; ret; 
0x000aae37: mov ebp, 0x81000608; ret; 
0x000a8c37: mov ebp, 0x8100062a; ret; 
0x0009c337: mov ebp, 0x810006f3; ret; 
0x00084037: mov ebp, 0x81000876; ret; 
0x0007fc37: mov ebp, 0x810008ba; ret; 
0x00065437: mov ebp, 0x81000a62; ret; 
0x00065237: mov ebp, 0x81000a64; ret; 
0x00060237: mov ebp, 0x81000ab4; ret; 
0x0005a837: mov ebp, 0x81000b0e; ret; 
0x00053937: mov ebp, 0x81000b7d; ret; 
0x0009c1c8: mov ebp, 0x81eb0000; call 0x10b6fc; add ecx, 0xb4eb2; mov eax, dword ptr [ecx + 0x22cc]; ret; 
0x00054bcf: mov ebp, 0x89fffd2d; ret 0x448d; 
0x00122871: mov ebp, 0xadf0fff7; add dword ptr [eax], eax; ret; 
0x00125209: mov ebp, 0xdc14fffe; add dword ptr [eax], eax; ret; 
0x0005a9d9: mov ebp, esp; mov eax, 0x6f665281; mov edx, 0xff6c7072; pop ebp; ret; 
0x0004e191: mov ebp, esp; movsx eax, byte ptr [ebp + 0xf]; shr eax, 0x1f; pop ebp; ret; 
0x001190d4: mov ebx, 0x2e766a0a; leave; ret 0x8581; 
0x0013ebd9: mov ebx, 0x41140e0a; ret; 
0x00120838: mov ebx, 0x4cfff2b3; ret; 
0x0010a639: mov ebx, 0x81000010; ret; 
0x000f1f39: mov ebx, 0x81000197; ret; 
0x000ebb39: mov ebx, 0x810001fb; ret; 
0x000ea639: mov ebx, 0x81000210; ret; 
0x000bb639: mov ebx, 0x81000500; ret; 
0x000ba839: mov ebx, 0x8100050e; ret; 
0x00095439: mov ebx, 0x81000762; ret; 
0x0006f939: mov ebx, 0x810009bd; ret; 
0x00068139: mov ebx, 0x81000a35; ret; 
0x00065339: mov ebx, 0x81000a63; ret; 
0x00065039: mov ebx, 0x81000a66; ret; 
0x00034e39: mov ebx, 0x81000d68; ret; 
0x00034839: mov ebx, 0x81000d6e; ret; 
0x000e2f34: mov ebx, 0x83535657; in al, dx; adc al, 0xe8; mov eax, 0x81000287; ret; 
0x000bb2b1: mov ebx, 0xc483fff6; add al, 0x5b; pop esi; ret; 
0x0005c850: mov ebx, 0xfffbf9f0; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x0005c7c6: mov ebx, 0xfffbf9f0; pop ebx; ret; 
0x0005664d: mov ebx, dword ptr [eax - 0x76ffff90]; ret 0xe2c1; 
0x0005cb6a: mov ebx, dword ptr [ebp - 4]; leave; ret 4; 
0x000345d3: mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00027ab0: mov ebx, dword ptr [esp]; ret; 
0x0012b226: mov ecx, 0x140e0a01; inc ecx; ret; 
0x0013ba05: mov ecx, 0x140e0a03; inc ecx; ret; 
0x0005d1ae: mov ecx, 0x17; sub ecx, edx; shr eax, cl; ret; 
0x001335e7: mov ecx, 0x41140e0a; ret; 
0x0005ab1d: mov ecx, 0x7f00; pop esi; pop edi; ret; 
0x000d2c3b: mov ecx, 0x8100038a; ret; 
0x000c4d3b: mov ecx, 0x81000469; ret; 
0x000b9d3b: mov ecx, 0x81000519; ret; 
0x000a333b: mov ecx, 0x81000683; ret; 
0x00096b3b: mov ecx, 0x8100074b; ret; 
0x0008393b: mov ecx, 0x8100087d; ret; 
0x0008183b: mov ecx, 0x8100089e; ret; 
0x0007343b: mov ecx, 0x81000982; ret; 
0x000a0096: mov ecx, 0x8301c083; ret 0x8b10; 
0x0003152e: mov ecx, 0x83535690; in al, dx; adc al, ch; mov esi, 0x81000da1; ret; 
0x00057253: mov ecx, 0x85fffd04; sal byte ptr [ebp - 0x1a], 0x31; rcr byte ptr [ebx + 0x66], 0x90; ret; 
0x0010a439: mov ecx, 0xc483fff1; or al, 0x5b; pop esi; pop edi; ret; 
0x000fafa5: mov ecx, 0xc483fff2; adc byte ptr [ebx + 0x5e], bl; ret; 
0x0002bba6: mov ecx, 0xc483ffff; or al, 0x5b; ret; 
0x00059b7b: mov ecx, 0xf089fffc; add esp, 0xc; pop ebx; pop esi; ret; 
0x000a6f63: mov ecx, dword ptr [eax + eax*8 + 0x518d0000]; add dword ptr [ecx], edi; ret 0x8d0f; 
0x00061611: mov ecx, dword ptr [eax]; sub ecx, dword ptr [edx]; mov eax, ecx; ret; 
0x000cc8a0: mov ecx, dword ptr [edx + 4]; cmp dword ptr [eax + 4], ecx; sete al; movzx eax, al; ret; 
0x000df0e2: mov ecx, dword ptr [edx + ecx*8 + 4]; shr eax, cl; pop ebx; ret; 
0x00131b52: mov ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0013c91e: mov ecx, dword ptr [esi]; adc al, 0x41; ret; 
0x000f9a18: mov ecx, dword ptr [esp + 0x10]; mov dword ptr [ecx], edx; ret; 
0x000f9afb: mov ecx, dword ptr [esp + 0x18]; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00060bf8: mov ecx, dword ptr [esp + 0xc]; cmpxchg dword ptr [edx], ecx; ret; 
0x00060bd8: mov ecx, dword ptr [esp + 0xc]; lock cmpxchg dword ptr [edx], ecx; ret; 
0x00051e49: mov ecx, dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x00060d19: mov ecx, dword ptr [esp + 4]; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000f9875: mov ecx, dword ptr [esp + 8]; mov byte ptr [ecx], al; xor eax, eax; ret; 
0x0010b6fc: mov ecx, dword ptr [esp]; ret; 
0x00060b08: mov ecx, eax; lock xadd dword ptr [edx], eax; add eax, ecx; ret; 
0x000e8968: mov ecx, edx; shr ecx, 8; mov byte ptr [eax + 2], cl; mov byte ptr [eax + 3], dl; ret; 
0x0002df8b: mov edi, 0; ret; 
0x000ea8f1: mov edi, 0x1042444; add byte ptr [eax], al; add byte ptr [ecx + 0x5ee82434], cl; ret 0xfff3; 
0x00145126: mov edi, 0x140e0a02; inc ecx; ret; 
0x0012fc60: mov edi, 0x2490305; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000d5eaf: mov edi, 0x31f289be; ret 0xca31; 
0x00125b01: mov edi, 0x41140e0a; ret; 
0x000ea2b3: mov edi, 0x7719fa80; ret; 
0x00109035: mov edi, 0x81000026; ret; 
0x000f4e35: mov edi, 0x81000168; ret; 
0x000d8035: mov edi, 0x81000336; ret; 
0x000d6a35: mov edi, 0x8100034c; ret; 
0x00098535: mov edi, 0x81000731; ret; 
0x00096235: mov edi, 0x81000754; ret; 
0x00090135: mov edi, 0x810007b5; ret; 
0x0007d235: mov edi, 0x810008e4; ret; 
0x00074835: mov edi, 0x8100096e; ret; 
0x00074635: mov edi, 0x81000970; ret; 
0x0005d635: mov edi, 0x81000ae0; ret; 
0x0004ac35: mov edi, 0x81000c0a; ret; 
0x00029d35: mov edi, 0x81000e19; ret; 
0x000e382a: mov edi, 0x83413c8d; ret 0xf01; 
0x00124d79: mov edi, 0xb064fffd; add al, byte ptr [eax]; pushfd; ret; 
0x000e7c0b: mov edi, 0xc483fff3; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000db5dd: mov edi, 0xc483fff4; adc al, 0x5b; pop esi; ret; 
0x000adc76: mov edi, 0xe9fffffd; ret; 
0x000e0158: mov edi, dword ptr [edx - 0x1c4]; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0004dc86: mov edi, ebp; inc dword ptr [ebx + 0x5e5b14c4]; pop edi; ret; 
0x0002c26c: mov edi, edi; dec dword ptr [ebx - 0x3b7cd7ba]; adc byte ptr [ebx + 0x5e], bl; ret; 
0x0007d295: mov edi, edx; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0002c4e3: mov edi, edx; pop esi; ret; 
0x000d39d2: mov edi, esp; dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; ret 2; 
0x0005e2bb: mov edi, esp; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0012bafe: mov edx, 0x140e0a01; inc ecx; ret; 
0x0013c9b6: mov edx, 0x140e0a03; inc ecx; ret; 
0x00128fb8: mov edx, 0x41100e0a; ret; 
0x00133f17: mov edx, 0x41140e0a; ret; 
0x00103c3a: mov edx, 0x8100007a; ret; 
0x000d833a: mov edx, 0x81000333; ret; 
0x000d083a: mov edx, 0x810003ae; ret; 
0x000c913a: mov edx, 0x81000425; ret; 
0x000c143a: mov edx, 0x810004a2; ret; 
0x000bf23a: mov edx, 0x810004c4; ret; 
0x000bae3a: mov edx, 0x81000508; ret; 
0x0009743a: mov edx, 0x81000742; ret; 
0x0009463a: mov edx, 0x81000770; ret; 
0x00050b3a: mov edx, 0x81000bab; ret; 
0x0002b83a: mov edx, 0x81000dfe; ret; 
0x000af6e0: mov edx, 0x83000007; ret 0x8b08; 
0x0005ac64: mov edx, 0x85000001; sal byte ptr [esi + ecx*2 - 0x77], 4; and al, 0xe8; in al, dx; ret 0xfffc; 
0x000e8672: mov edx, 0xc483fff3; adc al, 0x5b; ret; 
0x0008b244: mov edx, 0xc483fff9; add al, 0x5b; ret; 
0x00030fd4: mov edx, 0xe9fffbb7; aas; add dword ptr [eax], eax; add byte ptr [ebx - 0x7cc7dbac], cl; ret 0x8b01; 
0x0005a9e0: mov edx, 0xff6c7072; pop ebp; ret; 
0x000e0159: mov edx, 0xfffffe3c; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000f9a0e: mov edx, 0xffffffff; mov eax, 0x55; mov ecx, dword ptr [esp + 0x10]; mov dword ptr [ecx], edx; ret; 
0x0010a6eb: mov edx, 0xffffffff; ret; 
0x0006a877: mov edx, dword ptr [eax + 0x28]; mov dword ptr [eax + 0x24], edx; add esp, 4; pop ebx; ret; 
0x0006aa13: mov edx, dword ptr [eax + 0x28]; mov dword ptr [eax + 0x24], edx; pop ebx; ret; 
0x00104a4a: mov edx, dword ptr [eax + 4]; mov dword ptr [edx], eax; pop esi; ret; 
0x00052455: mov edx, dword ptr [eax + 8]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00035b60: mov edx, dword ptr [eax]; mov dword ptr [esp], edx; call dword ptr [eax + 4]; add esp, 0xc; ret; 
0x000524d5: mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 8], edx; xor eax, eax; ret; 
0x00076ff8: mov edx, dword ptr [ebx - 0x1cc]; pop ebx; mov dword ptr [edx], ecx; xor eax, eax; ret; 
0x000a8d3a: mov edx, dword ptr [ebx - 0x1cc]; pop ebx; mov eax, dword ptr [edx]; mov dword ptr [edx], ecx; ret; 
0x0005687d: mov edx, dword ptr [ebx - 0x24]; mov dword ptr [edx], 0; add esp, 4; pop ebx; ret; 
0x000bf6ae: mov edx, dword ptr [ebx - 0x264]; mov dword ptr [edx], eax; mov eax, 1; pop ebx; ret; 
0x000e493d: mov edx, dword ptr [ebx]; ret; 
0x00037ea9: mov edx, dword ptr [ecx - 0x148]; mov eax, dword ptr [edx + eax*4]; ret; 
0x000dfd73: mov edx, dword ptr [ecx - 0x320]; mov dword ptr [edx], eax; ret; 
0x000e8900: mov edx, dword ptr [ecx - 0x40]; mov dword ptr [edx], eax; ret; 
0x000bd2c6: mov edx, dword ptr [ecx]; mov dword ptr [eax + 8], edx; mov eax, 1; ret; 
0x0005248a: mov edx, dword ptr [edx + 0x1c]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x000524ac: mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x0009c6c8: mov edx, dword ptr [edx + 0xc38]; mov eax, dword ptr [edx + eax*4]; add esp, 8; pop ebx; ret; 
0x00052508: mov edx, dword ptr [edx + 0xc]; mov dword ptr [eax + 0x1c], edx; xor eax, eax; ret; 
0x0005252a: mov edx, dword ptr [edx + 0xc]; mov dword ptr [eax + 0x2c], edx; xor eax, eax; ret; 
0x00064800: mov edx, dword ptr [esi + 4]; sub eax, edx; pop esi; ret; 
0x000c53e3: mov edx, dword ptr [esp + 0x10]; mov dword ptr [eax + 0x14], edx; pop ebx; ret; 
0x00109382: mov edx, dword ptr [esp + 0x10]; mov dword ptr [eax + 0x424], edx; ret; 
0x000cf679: mov edx, dword ptr [esp + 0x10]; mov dword ptr [eax + 8], edx; ret 4; 
0x000f96cd: mov edx, dword ptr [esp + 0x10]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000f96fc: mov edx, dword ptr [esp + 0x14]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000f9a4c: mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00060b50: mov edx, dword ptr [esp + 4]; lock dec dword ptr [edx]; ret; 
0x00060b70: mov edx, dword ptr [esp + 4]; lock inc dword ptr [edx]; ret; 
0x000db541: mov edx, dword ptr [esp + 4]; mov dword ptr [eax + 0x1b8], edx; ret; 
0x000db55d: mov edx, dword ptr [esp + 4]; mov dword ptr [eax + 0x1bc], edx; ret; 
0x000ebaaf: mov edx, dword ptr [esp + 4]; mov dword ptr [eax], edx; ret; 
0x000c51fd: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00060af0: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [esp + 8]; lock add dword ptr [edx], eax; ret; 
0x00060b20: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [esp + 8]; lock and dword ptr [edx], eax; ret; 
0x00060b90: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [esp + 8]; lock or dword ptr [edx], eax; ret; 
0x00060bc0: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [esp + 8]; xchg dword ptr [edx], eax; ret; 
0x000ead37: mov edx, dword ptr [esp + 4]; movsx eax, word ptr [eax + edx*2 + 2]; ret; 
0x000eaa54: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2 + 2]; and eax, 1; ret; 
0x000eaa17: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2 + 2]; and eax, 5; ret; 
0x0002bb03: mov edx, dword ptr [esp + 8]; mov dword ptr [ecx + eax*4 + 0x367c], edx; xor eax, eax; ret; 
0x000cb997: mov edx, dword ptr [esp + 8]; sub eax, dword ptr [edx + 4]; ret; 
0x0004e10e: mov edx, dword ptr [esp]; test edx, edx; sete al; leave; ret; 
0x0004e0d6: mov edx, dword ptr [esp]; test edx, edx; setne al; leave; ret; 
0x0010b700: mov edx, dword ptr [esp]; ret; 
0x0002d70d: mov edx, eax; shl edx, 0x10; add eax, edx; shr eax, 0x18; ret; 
0x0005c891: mov edx, eax; shr edx, 8; add eax, edx; and eax, 0x3f; ret; 
0x0005d212: mov edx, eax; xor eax, eax; pop esi; pop ebp; ret; 
0x0005bdbe: mov edx, eax; xor eax, eax; shl edx, cl; ret; 
0x000d861b: mov edx, ebx; pop ebx; ret; 
0x000c8e7c: mov edx, ecx; pop edi; pop ebx; ret; 
0x0012a3c9: mov es, word ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000b537d: mov es, word ptr [edx + ecx]; add byte ptr [ebx - 0x7cd7dbac], cl; ret 0xc731; 
0x0012b75e: mov esi, 0x140e0a01; inc ecx; ret; 
0x00147ae6: mov esi, 0x41080e0a; ret; 
0x00127372: mov esi, 0x41140e0a; ret; 
0x000ee8d3: mov esi, 0x489fffc; and al, 0xe8; ret 0xf362; 
0x000d2259: mov esi, 0x75d285d0; pop es; mov eax, 1; pop esi; ret; 
0x000ee436: mov esi, 0x810001d2; ret; 
0x000c3736: mov esi, 0x8100047f; ret; 
0x000a9436: mov esi, 0x81000622; ret; 
0x00091e36: mov esi, 0x81000798; ret; 
0x00066536: mov esi, 0x81000a51; ret; 
0x00053536: mov esi, 0x81000b81; ret; 
0x0004fa36: mov esi, 0x81000bbc; ret; 
0x00031536: mov esi, 0x81000da1; ret; 
0x0002c036: mov esi, 0x81000df6; ret; 
0x000e9351: mov esi, 0x89000000; ret 0xe280; 
0x0004e9e7: mov esi, 0x8901c683; ret 0xb7eb; 
0x00062876: mov esi, 0x89fffffe; ret 0x448b; 
0x00118e5b: mov esi, 0xbf597fc7; ret 0xa88f; 
0x001090ea: mov esi, 0xc483fff1; or al, 0x5b; pop esi; ret; 
0x0002a027: mov esi, 0xc483ffff; add al, 0x5b; ret; 
0x00027b12: mov esi, 0xc483ffff; or byte ptr [edi + 0x5b], bl; ret; 
0x0004e194: mov esi, 0xe8c10f45; pop ds; pop ebp; ret; 
0x000d78c1: mov esi, ebp; hlt; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000f3d57: mov esi, esi; lea edi, dword ptr [edi]; ret; 
0x00142b3f: mov esp, 0x12d0308; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00144224: mov esp, 0x140e0a02; inc ecx; ret; 
0x0005be24: mov esp, 0x1c083c0; ret; 
0x0005be51: mov esp, 0x20e283c0; add eax, edx; pop esi; ret; 
0x0013a76b: mov esp, 0x21c0308; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0005be2b: mov esp, 0x21c083c2; ret; 
0x001279ed: mov esp, 0x41140e0a; ret; 
0x0000be39: mov esp, 0x6b0002; add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x6a; 
0x000216b0: mov esp, 0x7001516; ret 4; 
0x000faa38: mov esp, 0x8100010c; ret; 
0x000eb838: mov esp, 0x810001fe; ret; 
0x000e9d38: mov esp, 0x81000219; ret; 
0x000dae38: mov esp, 0x81000308; ret; 
0x000c2f38: mov esp, 0x81000487; ret; 
0x000b6938: mov esp, 0x8100054d; ret; 
0x000b1c38: mov esp, 0x8100059a; ret; 
0x000a9a38: mov esp, 0x8100061c; ret; 
0x000a4238: mov esp, 0x81000674; ret; 
0x000a3838: mov esp, 0x8100067e; ret; 
0x00079838: mov esp, 0x8100091e; ret; 
0x00059e38: mov esp, 0x81000b18; ret; 
0x00054c38: mov esp, 0x81000b6a; ret; 
0x00046438: mov esp, 0x81000c52; ret; 
0x00042138: mov esp, 0x81000c95; ret; 
0x0003b838: mov esp, 0x81000cfe; ret; 
0x00036538: mov esp, 0x81000d51; ret; 
0x00035c38: mov esp, 0x81000d5a; ret; 
0x0002d438: mov esp, 0x81000de2; ret; 
0x0002c738: mov esp, 0x81000def; ret; 
0x000c6eb0: mov esp, 0x89fff5fa; ret 0xc085; 
0x000c92ed: mov esp, 0x89fffc7f; ret 0xcac1; 
0x00057200: mov esp, 0x89fffd00; ret 0x8389; 
0x0003b164: mov esp, 0x89ffffd9; ret 0x4483; 
0x0007000c: mov esp, 0x8b000002; push ebp; adc al, 1; ret 0x7a8d; 
0x000af017: mov esp, 0x8c24; add cl, ch; ret; 
0x00047ff3: mov esp, 0x9824; add byte ptr [ecx + 0xf], dh; popfd; ret 0xc283; 
0x0013c18f: mov esp, 0xa700210; push cs; adc al, 0x41; ret; 
0x00138f63: mov esp, 0xa7c0204; push cs; adc al, 0x41; ret; 
0x0014308f: mov esp, 0xabb0208; push cs; adc al, 0x41; ret; 
0x0014cd13: mov esp, 0xac00208; push cs; adc al, 0x41; ret; 
0x00134af3: mov esp, 0xace0209; push cs; adc al, 0x41; ret; 
0x0013ec2f: mov esp, 0xad10201; push cs; adc al, 0x41; ret; 
0x0012d773: mov esp, 0xad70209; push cs; adc al, 0x41; ret; 
0x0012d8eb: mov esp, 0xaea0210; push cs; adc al, 0x41; ret; 
0x00124654: mov esp, 0xbe00027f; ret 0xfffc; 
0x000a9a90: mov esp, 0xc483fff7; or al, 0x5b; ret; 
0x000d5b4f: mov esp, 0xff5bb13a; dec dword ptr [ecx + 0x21d2f7ca]; ret 0xcd89; 
0x000a9538: mov esp, dword ptr [eax + 0x24]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000e4901: mov esp, dword ptr [eax]; ret; 
0x000e206b: mov esp, edi; dec dword ptr [ecx - 0x38fbdbbc]; add al, 0x24; and eax, 0xe8000000; ret 0xf458; 
0x000b5c6d: mov gs, word ptr [ebx]; add dword ptr [eax], eax; add byte ptr [ebx - 0x7cd7dbac], cl; ret 0x8331; 
0x0003e705: mov word ptr [eax + 0xa], dx; mov dword ptr [eax + 0x18], 0; ret; 
0x00031404: mov word ptr [eax + 2], 0xdeec; mov word ptr [eax + 4], 5; mov eax, dword ptr [ecx - 0x188]; mov word ptr [eax], 0xb; ret; 
0x0003140a: mov word ptr [eax + 4], 5; mov eax, dword ptr [ecx - 0x188]; mov word ptr [eax], 0xb; ret; 
0x000b1ba3: mov word ptr [eax + eax*4], fs; add byte ptr [eax], al; add cl, ch; ret; 
0x00031416: mov word ptr [eax], 0xb; ret; 
0x00032c57: mov word ptr [eax], dx; add esp, 0x10; pop ebx; pop esi; ret; 
0x0005243b: mov word ptr [eax], dx; xor eax, eax; ret; 
0x000104fc: mov word ptr [eax], es; add byte ptr [eax], al; and al, byte ptr [eax]; or byte ptr [eax], al; ret 0x34; 
0x000354dc: mov word ptr [eax], es; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00091130: mov word ptr [ebx - 7], ss; dec dword ptr [ebx - 0x7cc7dbac]; ret 0x8901; 
0x000107d4: mov word ptr [ebx], ds; add byte ptr [eax], al; mov cl, 0x5c; add eax, dword ptr [eax]; ret 0; 
0x0012c21f: mov word ptr [ecx], cs; add ch, al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014408f: mov word ptr [ecx], cs; add edx, dword ptr [0x140e0a02]; inc ecx; ret; 
0x0012b3ef: mov word ptr [ecx], es; add bh, al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00131b4f: mov word ptr [ecx], es; add cl, byte ptr [ebx + 0x41140e0a]; ret; 
0x0014b327: mov word ptr [ecx], es; add dl, byte ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0013e4a3: mov word ptr [ecx], es; add ebp, dword ptr [edx + 4]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00131814: mov word ptr [ecx], es; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000d5ff7: mov word ptr [ecx], es; ret; 
0x001297f9: mov word ptr [edx], cs; push cs; adc al, 0x41; ret; 
0x00138817: mov word ptr [edx], cs; push cs; or al, 0x41; ret; 
0x000d0fd5: mov word ptr [esi + 0xc], ax; add esp, 0x14; pop ebx; pop esi; ret; 
0x000af6d5: mov word ptr [esp + eax*8], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x78f0f807], al; mov edx, 0x83000007; ret 0x8b08; 
0x0005cfb2: movd dword ptr [esp + 4], mm0; fld dword ptr [esp + 4]; ret; 
0x0005cfb1: movd dword ptr [esp + 4], xmm0; fld dword ptr [esp + 4]; ret; 
0x0005d008: movq qword ptr [esp + 4], xmm0; fild qword ptr [esp + 4]; ret; 
0x001481fb: movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [edx], eax; ror dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x0014ab3b: movsb byte ptr es:[edi], byte ptr [esi]; add dword ptr [edx], eax; test byte ptr [edx], 0xe; adc al, 0x41; ret; 
0x00041568: movsb byte ptr es:[edi], byte ptr [esi]; and al, 0xfe; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000fa719: movsb byte ptr es:[edi], byte ptr [esi]; dec dword ptr [ebx + 0x408b0045]; sbb byte ptr [ebx - 0x16e7dbb4], cl; ret 0xfffe; 
0x001398dc: movsb byte ptr es:[edi], byte ptr [esi]; inc esi; add dword ptr [eax], eax; pushfd; ret 0xfff5; 
0x00134e8d: movsb byte ptr es:[edi], byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012a383: movsb byte ptr es:[edi], byte ptr [esi]; or dword ptr [ebx], eax; ret 0xa02; 
0x00120824: movsb byte ptr es:[edi], byte ptr [esi]; ret 0; 
0x0002a883: movsb byte ptr es:[edi], byte ptr [esi]; ret 0x101; 
0x000311bc: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000a2698: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc104; 
0x00080bd3: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc105; 
0x000a26ab: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc106; 
0x00030f6f: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc109; 
0x000311e4: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10a; 
0x000311a8: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc114; 
0x000311d0: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc11e; 
0x00080bcc: movsb byte ptr es:[edi], byte ptr [esi]; test dword ptr [ebx], 0xf03e6c1; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc105; 
0x000a788d: movsd dword ptr es:[edi], dword ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x2817dbcc], cl; ret; 
0x00129969: movsd dword ptr es:[edi], dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000e015f: movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0012fdd5: movsd dword ptr es:[edi], dword ptr [esi]; push cs; adc al, 0x41; ret; 
0x00064307: movsd dword ptr es:[edi], dword ptr [esi]; push es; cld; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0005bdb9: movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x0005cf44: movsd qword ptr [esp + 4], xmm0; fadd qword ptr [esp + 4]; ret; 
0x0005cfea: movsd qword ptr [esp + 4], xmm0; fld qword ptr [esp + 4]; ret; 
0x0004e193: movsx eax, byte ptr [ebp + 0xf]; shr eax, 0x1f; pop ebp; ret; 
0x0004e08f: movsx eax, byte ptr [esp + 9]; shr eax, 0x1f; leave; ret; 
0x000ead3b: movsx eax, word ptr [eax + edx*2 + 2]; ret; 
0x0003ba8e: movsx eax, word ptr [eax + edx]; pop ebx; ret; 
0x0005cf45: movups xmmword ptr [esp + 4], xmm0; fadd qword ptr [esp + 4]; ret; 
0x0005cfeb: movups xmmword ptr [esp + 4], xmm0; fld qword ptr [esp + 4]; ret; 
0x0009674a: movzx eax, al; add eax, 1; add esp, 4; pop ebx; ret; 
0x0009b183: movzx eax, al; add eax, 1; mov dword ptr [ebx + 0x22cc], eax; pop ebx; ret; 
0x0003ed57: movzx eax, al; add esp, 0x10; pop ebx; pop esi; ret; 
0x00036ff7: movzx eax, al; add esp, 0x10; pop ebx; ret; 
0x00036f4d: movzx eax, al; add esp, 0x14; pop ebx; ret; 
0x000881f2: movzx eax, al; add esp, 0x28; pop ebx; ret; 
0x0002854e: movzx eax, al; add esp, 0xc; pop ebx; ret; 
0x00037102: movzx eax, al; add esp, 0xc; pop esi; pop edi; ret; 
0x00055afe: movzx eax, al; add esp, 4; pop ebx; ret; 
0x0009dc9b: movzx eax, al; add esp, 8; pop ebx; pop edi; ret; 
0x000db19e: movzx eax, al; add esp, 8; pop ebx; pop esi; ret; 
0x000f3656: movzx eax, al; add esp, 8; pop ebx; ret; 
0x0002b850: movzx eax, al; lea eax, dword ptr [eax + eax*2]; pop ebx; ret; 
0x0002b82c: movzx eax, al; lea eax, dword ptr [eax*8 + 3]; pop ebx; ret; 
0x000f9af8: movzx eax, al; mov ecx, dword ptr [esp + 0x18]; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000f96ca: movzx eax, al; mov edx, dword ptr [esp + 0x10]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000f96f9: movzx eax, al; mov edx, dword ptr [esp + 0x14]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00065859: movzx eax, al; neg eax; add esp, 0x14; pop ebx; ret; 
0x0005fadc: movzx eax, al; neg eax; add esp, 0x14; ret; 
0x000bbdd9: movzx eax, al; neg eax; add esp, 0x18; pop ebx; ret; 
0x0005d625: movzx eax, al; neg eax; add esp, 0x24; pop ebx; ret; 
0x0004e1b6: movzx eax, al; pop ebp; ret; 
0x0002a241: movzx eax, al; pop ebx; ret; 
0x000c2c5b: movzx eax, al; pop esi; ret; 
0x0002bc30: movzx eax, al; ret; 
0x000474ec: movzx eax, ax; ret; 
0x000e8916: movzx eax, byte ptr [eax + 1]; or eax, edx; ret; 
0x000fdaa7: movzx eax, byte ptr [eax]; add esp, 0x10; pop ebx; pop esi; ret; 
0x000eb933: movzx eax, byte ptr [eax]; mov byte ptr [ebx + 0x13214], al; pop ebx; ret; 
0x000fad50: movzx eax, byte ptr [eax]; movzx ecx, byte ptr [ecx]; sub eax, ecx; pop ebx; ret; 
0x0003599d: movzx eax, byte ptr [edx]; add esp, 4; pop ebx; ret; 
0x000f9c5d: movzx eax, byte ptr [esp + 0x10]; mov byte ptr [edx], al; xor eax, eax; ret; 
0x000e8992: movzx eax, cl; ret; 
0x000eaba3: movzx eax, word ptr [eax + edx*2 + 2]; and eax, 0x10; movzx eax, ax; ret; 
0x000eac2b: movzx eax, word ptr [eax + edx*2 + 2]; and eax, 0x20; movzx eax, ax; ret; 
0x000eac6e: movzx eax, word ptr [eax + edx*2 + 2]; and eax, 0x40; movzx eax, ax; ret; 
0x000eaa58: movzx eax, word ptr [eax + edx*2 + 2]; and eax, 1; ret; 
0x000eaada: movzx eax, word ptr [eax + edx*2 + 2]; and eax, 2; movzx eax, ax; ret; 
0x000eab1d: movzx eax, word ptr [eax + edx*2 + 2]; and eax, 4; movzx eax, ax; ret; 
0x000eaa1b: movzx eax, word ptr [eax + edx*2 + 2]; and eax, 5; ret; 
0x000eab60: movzx eax, word ptr [eax + edx*2 + 2]; and eax, 8; movzx eax, ax; ret; 
0x000283be: movzx eax, word ptr [eax]; ret; 
0x0004e6f0: movzx eax, word ptr [esp + 4]; xchg ah, al; ret; 
0x000fad53: movzx ecx, byte ptr [ecx]; sub eax, ecx; pop ebx; ret; 
0x000e8948: movzx ecx, dh; mov byte ptr [eax], cl; mov byte ptr [eax + 1], dl; ret; 
0x000e8910: movzx edx, byte ptr [eax]; shl edx, 8; movzx eax, byte ptr [eax + 1]; or eax, edx; ret; 
0x000e8936: movzx edx, byte ptr [edx + 2]; shl edx, 8; or eax, edx; ret; 
0x000fb691: movzx edx, dl; sub eax, edx; pop ebx; pop esi; ret; 
0x0003e6fd: movzx edx, word ptr [eax + 0x18]; ror dx, 8; mov word ptr [eax + 0xa], dx; mov dword ptr [eax + 0x18], 0; ret; 
0x00052434: movzx edx, word ptr [eax]; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0005bcdf: mul edx; add ebx, ecx; add edx, ebx; pop ebx; ret; 
0x000777b0: neg byte ptr [esi + 0x5f]; ret; 
0x0002b936: neg byte ptr [esi - 0x3fce0001]; add esp, 4; pop ebx; ret; 
0x0005aa4f: neg dword ptr [ebx + 0x5e]; ret; 
0x000326db: neg eax; adc edx, 0; neg edx; pop ebp; ret; 
0x0002e53c: neg eax; adc edx, 0; neg edx; ret; 
0x0002bd11: neg eax; add esp, 0x10; pop ebx; pop esi; ret; 
0x000d6cb3: neg eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0006585c: neg eax; add esp, 0x14; pop ebx; ret; 
0x0005fadf: neg eax; add esp, 0x14; ret; 
0x000bbddc: neg eax; add esp, 0x18; pop ebx; ret; 
0x00050b95: neg eax; add esp, 0x20; pop ebx; pop esi; ret; 
0x000f4f8d: neg eax; add esp, 0x24; pop ebx; pop esi; ret; 
0x0005d628: neg eax; add esp, 0x24; pop ebx; ret; 
0x0005c8de: neg eax; add esp, 0xc; pop ebx; ret; 
0x000583fe: neg eax; add esp, 4; pop ebx; pop esi; ret; 
0x000f3c4c: neg eax; pop esi; pop edi; pop ebp; ret; 
0x0002e578: neg eax; ret; 
0x0005c00b: neg edx; add esp, 0xc; pop ebx; pop ebp; ret; 
0x000326e0: neg edx; pop ebp; ret; 
0x0002e541: neg edx; ret; 
0x000967a3: not eax; add eax, 2; add esp, 8; pop ebx; ret; 
0x0005bca6: not eax; add eax, 2; pop esi; ret; 
0x000b484f: not eax; add eax, 4; leave; ret; 
0x0004e2a2: not eax; add eax, 4; ret; 
0x0004e6b9: not eax; and eax, 0x3f; add esp, 4; ret; 
0x000638a8: not eax; pop esi; pop edi; ret; 
0x00036ed8: not eax; shr eax, 0x1f; add esp, 0xc; pop ebx; ret; 
0x0006ca85: or ah, bh; dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; ret 2; 
0x0006cab4: or ah, bh; dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; ret; 
0x001190d2: or ah, byte ptr [ebp - 0x45]; or ch, byte ptr [edx + 0x76]; leave; ret 0x8581; 
0x000ea0d5: or al, 0; add byte ptr [eax], al; ret; 
0x000f32ed: or al, 0; add byte ptr [ecx], dh; rol byte ptr [ebp - 0x76ab8b40], cl; ret 0xeac1; 
0x0004407f: or al, 0; add ecx, 0x10d003; mov eax, dword ptr [ecx + 0x6400]; ret; 
0x00090a11: or al, 0; mov eax, dword ptr [ecx + 0xb7c4]; ret; 
0x000909ff: or al, 0; mov eax, dword ptr [ecx + 0xb7c8]; ret; 
0x000909ed: or al, 0; mov eax, dword ptr [ecx + 0xb7cc]; ret; 
0x000909db: or al, 0; mov eax, dword ptr [ecx + 0xb7d0]; ret; 
0x000909c9: or al, 0; mov eax, dword ptr [ecx + 0xb7d4]; ret; 
0x000909b7: or al, 0; mov eax, dword ptr [ecx + 0xb7d8]; ret; 
0x0008ea48: or al, 0; mov eax, dword ptr [esp + 4]; mov dword ptr [ecx + 0x2220], eax; ret; 
0x00006e1a: or al, 0; ret; 
0x00053800: or al, 0x12; std; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00146c44: or al, 0x1a; add al, byte ptr [eax]; ret; 
0x0004e4c7: or al, 0x24; ret; 
0x0002aabc: or al, 0x29; ret 0x448b; 
0x000a09bb: or al, 0x39; ret 0x8d0f; 
0x000337e5: or al, 0x3c; and byte ptr [eax + ecx + 0x3c], dh; or dword ptr [ebp + 0x75002674], ecx; mov cl, 0x83; ret 0xf01; 
0x00125295: or al, 0x41; ret; 
0x00034607: or al, 0x5b; pop ebp; ret; 
0x00080c81: or al, 0x5b; pop edi; ret; 
0x000a32f6: or al, 0x5b; pop esi; pop ebp; ret; 
0x00029de3: or al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00036bc8: or al, 0x5b; pop esi; pop edi; ret; 
0x00028644: or al, 0x5b; pop esi; ret; 
0x0004e46f: or al, 0x5b; xor eax, eax; ret; 
0x00028553: or al, 0x5b; ret; 
0x0002a48d: or al, 0x5d; ret; 
0x00035bb1: or al, 0x5e; pop edi; pop ebp; ret; 
0x00037107: or al, 0x5e; pop edi; ret; 
0x000b66c2: or al, 0x81; ret 0x160; 
0x0013e250: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [eax + 0xe], bh; or al, 0x41; ret; 
0x001438b0: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [eax + 0xe], ch; or al, 0x41; ret; 
0x0012c4fc: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebp + 0xe], ch; or al, 0x41; ret; 
0x00130fd0: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebp + 0xe], dh; or al, 0x41; ret; 
0x00128e04: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xe], bh; or al, 0x41; ret; 
0x001304dc: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xe], ch; or al, 0x41; ret; 
0x00140794: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ebx + 0xe], dh; or al, 0x41; ret; 
0x001275a8: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [ecx + 0xe], ch; or al, 0x41; ret; 
0x00148bd8: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [edi + 0xe], ah; or al, 0x41; ret; 
0x001276ac: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [edi + 0xe], ch; or al, 0x41; ret; 
0x00141b4c: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x00134de0: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [edx + 0xe], dh; or al, 0x41; ret; 
0x00147a94: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [edx + ecx + 0xe], bh; or al, 0x41; ret; 
0x00129150: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [edx + ecx + 0xe], bl; or al, 0x41; ret; 
0x00144f50: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [esi + 0xe], ah; or al, 0x41; ret; 
0x0013efb0: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [esi + 0xe], ch; or al, 0x41; ret; 
0x00128b70: or al, 0x83; add eax, dword ptr [ebx + 0xe]; adc byte ptr [esi + 0xe], dh; or al, 0x41; ret; 
0x0013aed8: or al, 0x83; add eax, dword ptr [ebx + 0xe]; and al, 2; push 0x410c0e0a; ret; 
0x00138b74: or al, 0x83; add eax, dword ptr [ebx + 0xe]; and byte ptr [eax + 0xe], bh; or al, 0x41; ret; 
0x00125fa8: or al, 0x83; add eax, dword ptr [ebx + 0xe]; and byte ptr [edx + ecx + 0xe], bh; or al, 0x41; ret; 
0x0013581c: or al, 0x83; add eax, dword ptr [ebx + 0xe]; and byte ptr [edx + ecx + 0xe], dh; or al, 0x41; ret; 
0x0014cea0: or al, 0x83; add eax, dword ptr [ebx + 0xe]; dec eax; add al, byte ptr [edi + 0x410c0e0a]; ret; 
0x0013b0d0: or al, 0x83; add eax, dword ptr [ebx + 0xe]; dec eax; add bl, byte ptr [esi + 0x410c0e0a]; ret; 
0x0012ab08: or al, 0x83; add eax, dword ptr [ebx + 0xe]; inc esp; add ah, byte ptr [ebx + 0x410c0e0a]; ret; 
0x00138bc4: or al, 0x83; add eax, dword ptr [ebx + 0xe]; push 0x410c0e7f; ret; 
0x0012eaec: or al, 0x83; add eax, dword ptr [ebx + 0xe]; sbb byte ptr [eax + 0xe], dh; or al, 0x41; ret; 
0x00141d64: or al, 0x83; add eax, dword ptr [ebx + 0xe]; sbb byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x0012a0c4: or al, 0x83; add eax, dword ptr [ebx + 0xe]; sbb byte ptr [edx], al; push 0x410c0e0a; ret; 
0x0012779c: or al, 0x83; add eax, dword ptr [ebx + 0xe]; sbb byte ptr [esi + 0xe], ch; or al, 0x41; ret; 
0x00143c38: or al, 0x83; add eax, dword ptr [ebx + 0xe]; sbb byte ptr [esi + 0xe], dh; or al, 0x41; ret; 
0x0012d3e8: or al, 0x83; add eax, dword ptr [ebx + 0xe]; sub byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x0012aad8: or al, 0x83; add eax, dword ptr [ebx + 0xe]; xor byte ptr [edx], al; or cl, byte ptr [0x410c]; ret; 
0x00147948: or al, 0x83; add eax, dword ptr [edx]; bound ecx, qword ptr [edx]; ret; 
0x001259c0: or al, 0x83; add ebp, dword ptr [ebp + 0xa]; ret; 
0x001259e8: or al, 0x83; add ebp, dword ptr [edi + 0xa]; ret; 
0x0014c004: or al, 0x83; add ebp, dword ptr [esi + 0xa]; ret; 
0x0014bd5c: or al, 0x83; add edi, dword ptr [edx + 0xa]; ret; 
0x000cd007: or al, 0x83; ret 0x3910; 
0x0003b424: or al, 0x83; ret 0x8301; 
0x000f85b0: or al, 0x83; ret 0x8304; 
0x000d124a: or al, 0x83; ret 0x8901; 
0x000ec5c5: or al, 0x83; ret 0x8902; 
0x0008fcaf: or al, 0x83; ret 0xe901; 
0x00062510: or al, 0x83; rol byte ptr [ecx], 0x83; ret 0x3b04; 
0x000cd001: or al, 0x83; rol byte ptr [ecx], 0x8b; dec esi; or al, 0x83; ret 0x3910; 
0x000dfda5: or al, 0x83; clc; add esi, dword ptr [ebp + 0xe]; lea eax, dword ptr [ecx - 0x3620d]; ret; 
0x000f9c3a: or al, 0x85; sal byte ptr [ebp + 0xc], cl; mov dword ptr [eax], 0xffffffff; mov eax, 7; ret; 
0x000326d4: or al, 0x85; sar byte ptr [eax + 2], cl; pop ebp; ret; 
0x0014bcec: or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa500204], al; ret; 
0x00143bc8: or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa590204], al; ret; 
0x00146e44: or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa5d0204], al; ret; 
0x00138758: or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa8f0204], al; ret; 
0x0014207c: or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xaa00204], al; ret; 
0x0014221c: or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xaf60204], al; ret; 
0x000c5374: or al, 0x89; adc dword ptr [ebx - 0x47fbf3c0], eax; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000bf696: or al, 0x89; add dword ptr [eax + 1], edi; pop ebx; ret; 
0x00051e4c: or al, 0x89; add dword ptr [eax + 1], edi; ret; 
0x000611fb: or al, 0x89; jno 0x6120f; mov dword ptr [ecx + 0x14], edi; xor eax, eax; ret; 
0x0004e4e1: or al, 0x89; jo 0x4e4f5; mov dword ptr [eax + 0x14], edi; xor eax, eax; ret; 
0x0005c059: or al, 0x89; ret 0x4489; 
0x000ffa71: or al, 0x89; ret 0xc166; 
0x00054740: or al, 0x89; ret 0xce80; 
0x00051114: or al, 0x89; ret 0xe283; 
0x000512d8: or al, 0x89; ret 0xeac1; 
0x00047c3a: or al, 0x89; ret 0xfad1; 
0x000b6e31: or al, 0x8b; inc eax; or byte ptr [ecx - 0x2c17dbfc], cl; ret 0xfff6; 
0x000d8ffc: or al, 0x8d; cmp dword ptr [ebp - 0x70], -4; inc dword ptr [ebx + 0x5e5b18c4]; ret; 
0x00030fd1: or al, 0x8d; cmp dword ptr [edx - 0x16000449], 0x3f; add dword ptr [eax], eax; add byte ptr [ebx - 0x7cc7dbac], cl; ret 0x8b01; 
0x000d8f3d: or al, 0x8d; sub dword ptr [esi - 0x70], -4; inc dword ptr [ebx + 0x5e5b18c4]; ret; 
0x00074a14: or al, 0x8d; xchg eax, ebx; ret 0xfc0b; 
0x000ecbd0: or al, 0xac; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x000c534c: or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; ret; 
0x000c531d: or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x00035bf5: or al, 0xc9; ret; 
0x000612e8: or al, 0xda; insd dword ptr es:[edi], dx; or cl, cl; ret; 
0x000ebcb5: or al, 0xe8; cmp eax, 0x810001fa; ret; 
0x00059b50: or al, 0xe8; mov byte ptr [0x81000b1b], al; ret; 
0x000fd54f: or al, 0xe8; mov dword ptr [0x810000e1], eax; ret; 
0x0002a14f: or al, 0xe8; mov dword ptr [0x81000e15], eax; ret; 
0x0009c335: or al, 0xe8; mov ebp, 0x810006f3; ret; 
0x000ea637: or al, 0xe8; mov ebx, 0x81000210; ret; 
0x00034e37: or al, 0xe8; mov ebx, 0x81000d68; ret; 
0x00109033: or al, 0xe8; mov edi, 0x81000026; ret; 
0x000d6a33: or al, 0xe8; mov edi, 0x8100034c; ret; 
0x0007d233: or al, 0xe8; mov edi, 0x810008e4; ret; 
0x00029d33: or al, 0xe8; mov edi, 0x81000e19; ret; 
0x000c9138: or al, 0xe8; mov edx, 0x81000425; ret; 
0x000a9434: or al, 0xe8; mov esi, 0x81000622; ret; 
0x000ca28a: or al, 0xe8; push 0x81000414; ret; 
0x000655d5: or al, 0xe8; sbb eax, 0x81000a61; ret; 
0x000c1dc5: or al, 0xe8; sub eax, 0x81000499; ret; 
0x00047da6: or al, 0xe8; test bh, dh; std; dec dword ptr [ebx + 0x10c2454]; ret 0x542b; 
0x0009c4bd: or al, 0xe8; xor eax, 0x810006f2; ret; 
0x000c572f: or al, 0xe8; ret; 
0x00047c38: or al, 0xeb; or al, 0x89; ret 0xfad1; 
0x00060bfb: or al, 0xf; mov cl, 0xa; ret; 
0x00060bdb: or al, 0xf0; cmpxchg dword ptr [edx], ecx; ret; 
0x001097de: or al, 0xf6; ret 0x7408; 
0x00036595: or al, 0xf6; ret 0x7540; 
0x0005bcbc: or al, 0xf7; fadd dword ptr [ebx - 0x2508ff2e]; pop ebp; ret; 
0x001233e4: or al, 0xfe; add dword ptr [eax], eax; ret 0xf9e0; 
0x00034820: or al, 0xff; inc dword ptr [ebx + 0x5e5b18c4]; ret; 
0x00131375: or al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00047daf: or al, 1; ret 0x542b; 
0x000b53f5: or al, 1; ret 0x5489; 
0x0005fe8e: or al, 1; ret 0xfa81; 
0x00086e8d: or al, 2; add byte ptr [eax], al; add byte ptr [ebx + 0x917c83], cl; add al, ch; ret; 
0x00147ae4: or al, 2; mov esi, 0x41080e0a; ret; 
0x00134a9d: or al, 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b0d7: or al, 4; add al, 0x41; or eax, dword ptr [ebx]; add byte ptr [ecx], 0xa; ret; 
0x0012afcb: or al, 4; add al, 0x41; or eax, dword ptr [edx]; fmul qword ptr [edx]; ret; 
0x0012f04f: or al, 4; add al, 0x41; or eax, dword ptr [edx]; lea ecx, dword ptr [edx]; ret; 
0x0012713f: or al, 4; add al, 0x41; or ebp, dword ptr [eax + 0xa]; ret; 
0x0014a021: or al, 4; add al, 0x41; or ebp, dword ptr [ebx + 0xa]; ret; 
0x0013dd8b: or al, 4; add al, 0x41; or ebp, dword ptr [edx + 0xa]; ret; 
0x00127083: or al, 4; add al, 0x41; or ebx, dword ptr [eax + 0xa]; ret; 
0x0012709f: or al, 4; add al, 0x41; or ebx, dword ptr [ebp + 0xa]; ret; 
0x00127091: or al, 4; add al, 0x41; or ebx, dword ptr [edx + 0xa]; ret; 
0x0012fe7e: or al, 4; add al, 0x41; or ebx, dword ptr [esi + 0xa]; ret; 
0x0012f05e: or al, 4; add al, 0x41; or ecx, dword ptr [ebx + 0xa]; ret; 
0x0012fe8c: or al, 4; add al, 0x41; or ecx, dword ptr [edi + 0xa]; ret; 
0x0013de25: or al, 4; add al, 0x41; or edi, dword ptr [esi + 0xa]; ret; 
0x0013de80: or al, 4; add al, 0x41; or edx, dword ptr [eax + 0xa]; ret; 
0x0013de72: or al, 4; add al, 0x41; or edx, dword ptr [ebx + 0xa]; ret; 
0x0013e0de: or al, 4; add al, 0x41; or edx, dword ptr [ecx + 0xa]; ret; 
0x0013de17: or al, 4; add al, 0x41; or esi, dword ptr [edx + 0xa]; ret; 
0x00125bea: or al, 4; add al, 0x41; or esp, dword ptr [esi + 0xa]; ret; 
0x00142a2d: or al, 4; add al, 0x43; or edi, dword ptr [ebp + 0xa]; ret; 
0x000c5379: or al, 4; mov eax, 1; ret; 
0x0006a0c0: or al, 9; ret 0x840f; 
0x000ea0bd: or al, byte ptr [eax]; add byte ptr [eax], al; ret; 
0x000b537f: or al, byte ptr [eax]; add byte ptr [ebx - 0x7cd7dbac], cl; ret 0xc731; 
0x0003e6b3: or al, byte ptr [eax]; ret; 
0x0005d429: or al, byte ptr [ebp + 0x390978c9]; ret 0x297f; 
0x000d2286: or al, byte ptr [ebx - 0xd8bd206]; xor eax, eax; pop esi; nop; ret; 
0x0013fc80: or al, byte ptr [ebx]; mov bh, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012bafc: or al, byte ptr [ebx]; mov edx, 0x140e0a01; inc ecx; ret; 
0x0012b92c: or al, byte ptr [ebx]; mov esi, 0x140e0a01; inc ecx; ret; 
0x0012f7dd: or al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0003e089: or al, byte ptr [ecx]; ret 0xc031; 
0x001452b0: or al, byte ptr [edx]; mov dl, 0xa; push cs; adc al, 0x41; ret; 
0x0012da14: or al, byte ptr [edx]; pop ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0005c5ed: or al, ch; add eax, 0x81000af1; ret; 
0x00044fed: or al, ch; add eax, 0x81000c67; ret; 
0x000f4dac: or al, ch; inc esi; imul eax, dword ptr [ecx], 0xd2c38100; ret 5; 
0x0009c950: or al, ch; mov byte ptr [0x810006ed], al; ret; 
0x000eae4f: or al, ch; mov dword ptr [0x81000208], eax; ret; 
0x0007624f: or al, ch; mov dword ptr [0x81000954], eax; ret; 
0x0005d54f: or al, ch; mov dword ptr [0x81000ae1], eax; ret; 
0x000db83a: or al, ch; mov eax, 0x810002fe; ret; 
0x0010a637: or al, ch; mov ebx, 0x81000010; ret; 
0x000bb637: or al, ch; mov ebx, 0x81000500; ret; 
0x0005d633: or al, ch; mov edi, 0x81000ae0; ret; 
0x000eb836: or al, ch; mov esp, 0x810001fe; ret; 
0x000ebee5: or al, ch; or eax, 0x810001f8; ret; 
0x000ecb8a: or al, ch; push 0x810001eb; ret; 
0x00048330: or al, ch; ret 0xc33; 
0x00037d30: or al, ch; ret 0xd39; 
0x0012f3ee: or al, ch; ret; 
0x00060af7: or al, dh; add dword ptr [edx], eax; ret; 
0x00060b27: or al, dh; and dword ptr [edx], eax; ret; 
0x00060b97: or al, dh; or dword ptr [edx], eax; ret; 
0x0010961b: or al, dl; mov byte ptr [ecx + 0x18], al; xor eax, eax; ret; 
0x0003502e: or ax, 0x8100; ret; 
0x000be899: or bh, al; inc esp; and al, 4; add dword ptr [ecx], 0x838d0000; ret 0xfc6f; 
0x000bab2f: or bh, al; inc esp; and al, 4; ret 0; 
0x0009395c: or bh, al; inc esp; and al, 4; ret 1; 
0x00054566: or bh, al; inc esp; and al, 4; ret 2; 
0x0008ca5c: or bh, al; inc esp; and al, 4; ret 4; 
0x0003b676: or bh, al; inc esp; and al, 4; ret; 
0x000c5475: or bh, byte ptr [eax + 0x20]; add esp, 0x18; pop ebx; ret; 
0x000f89dc: or bh, byte ptr [eax + 0x20]; ret; 
0x000a603c: or bh, byte ptr [eax + 0x22]; add esp, 0x10; pop ebx; ret; 
0x000f281c: or bh, byte ptr [eax + 0x4f]; add esp, 0x18; pop ebx; ret; 
0x00036fc3: or bh, byte ptr [eax + 1]; add esp, 0x10; pop ebx; ret; 
0x000c156b: or bh, byte ptr [eax + 1]; add esp, 0x14; pop ebx; ret; 
0x00052320: or bh, byte ptr [eax + 9]; add esp, 4; pop esi; ret; 
0x00059d06: or bh, byte ptr [eax - 1]; add esp, 0x58; pop ebx; ret; 
0x000d6702: or bh, byte ptr [eax - 1]; add esp, 0xc; pop ebx; ret; 
0x000f9f39: or bh, byte ptr [ecx]; ret 0xdb7d; 
0x00052a6e: or bh, ch; inc dword ptr [ebx + 0x5e5b1cc4]; ret; 
0x000cface: or bh, dh; ret 0; 
0x000d8618: or bh, dh; int1; mov edx, ebx; pop ebx; ret; 
0x00061670: or bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0005c90e: or byte ptr [0x80000000], al; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x000d27cf: or byte ptr [eax + 0x24c48309], dh; pop ebx; pop esi; ret; 
0x000f842c: or byte ptr [eax + 1], bh; pop esi; pop edi; ret; 
0x000bd2ca: or byte ptr [eax + 1], bh; ret; 
0x001202fc: or byte ptr [eax + eax - 0xe3dd200], bl; ljmp ptr [esp + ebx*4]; add byte ptr [eax], al; push ds; ret; 
0x0004361a: or byte ptr [eax + eax], 0x81; ret; 
0x0009d184: or byte ptr [eax + edi*8 - 1], ah; add esp, 0xc; pop ebx; ret; 
0x00108053: or byte ptr [eax - 0x3b7cd7ba], cl; add al, 0x5b; pop esi; ret; 
0x000cea62: or byte ptr [eax - 0x7bf00107], al; ret 0; 
0x0000da1c: or byte ptr [eax], al; add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x48; 
0x000ea0c3: or byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000325e4: or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00055193: or byte ptr [eax], al; add byte ptr [ebx + 0xf102444], cl; test dword ptr [ecx - 0x18000000], ebx; ret; 
0x000501b0: or byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5489; 
0x0004e389: or byte ptr [eax], al; add esp, 4; pop ebx; ret; 
0x00010fa2: or byte ptr [eax], al; divps xmm0, xmmword ptr [eax]; add dh, dh; ret; 
0x00012582: or byte ptr [eax], al; in al, dx; adc eax, 0xf9700000; add al, byte ptr [eax]; ret 0; 
0x00006582: or byte ptr [eax], al; ret 0; 
0x0000f952: or byte ptr [eax], al; ret 0x1f; 
0x00009a22: or byte ptr [eax], al; ret 0x26; 
0x00013b52: or byte ptr [eax], al; ret 0x29; 
0x00007d32: or byte ptr [eax], al; ret 0x2b; 
0x00009ce2: or byte ptr [eax], al; ret 0x2d; 
0x00010502: or byte ptr [eax], al; ret 0x34; 
0x00006b22: or byte ptr [eax], al; ret 0x38; 
0x00012962: or byte ptr [eax], al; ret 0x41; 
0x0000bb32: or byte ptr [eax], al; ret 0x46; 
0x000139b2: or byte ptr [eax], al; ret 0x47; 
0x0000da22: or byte ptr [eax], al; ret 0x48; 
0x00007c22: or byte ptr [eax], al; ret 0x49; 
0x0000c982: or byte ptr [eax], al; ret 0x64; 
0x0000be42: or byte ptr [eax], al; ret 0x6a; 
0x0000c222: or byte ptr [eax], al; ret 0x6c; 
0x000147b2: or byte ptr [eax], al; ret 0x75; 
0x00006b92: or byte ptr [eax], al; ret 0x78; 
0x00006b72: or byte ptr [eax], al; ret 0x86; 
0x0000dc12: or byte ptr [eax], al; ret 0xb; 
0x0000925a: or byte ptr [eax], al; ret 3; 
0x00012a32: or byte ptr [eax], al; sub al, 0x3e; add byte ptr [eax], al; ret; 
0x00006c12: or byte ptr [eax], al; ret; 
0x000d6a4e: or byte ptr [ebp + 0x390478c0], al; ret 0x1d72; 
0x000e3240: or byte ptr [ebp + 0x390874c0], al; ret 0x850f; 
0x000f844e: or byte ptr [ebp + 0x39da75c9], al; ret 0xf372; 
0x00059d4c: or byte ptr [ebp + 0x48d8004], 0x82; add esp, 0x58; pop ebx; ret; 
0x00127c53: or byte ptr [ebp + 0x50d4202], al; dec eax; xchg byte ptr [ebx], al; add dword ptr [esi], 0xa; ret; 
0x00142a1b: or byte ptr [ebp + 0x50d4202], al; inc ebp; xchg byte ptr [ebx], al; add dword ptr [esp + edi*2], 0xa; ret; 
0x00126eff: or byte ptr [ebp + 0x50d4202], al; inc ecx; add dword ptr [ebx], 0x61; ret; 
0x0012feef: or byte ptr [ebp + 0x50d4202], al; inc edi; add dword ptr [ebx], 0x6a; or al, ch; ret; 
0x00139d23: or byte ptr [ebp + 0x50d4202], al; inc esp; add dword ptr [ebx], 0x62; ret; 
0x0013bdab: or byte ptr [ebp + 0x50d4202], al; inc esp; add dword ptr [ebx], 0x65; ret; 
0x00127c03: or byte ptr [ebp + 0x50d4202], al; inc esp; add dword ptr [ebx], 0x6a; ret; 
0x0013bd87: or byte ptr [ebp + 0x50d4202], al; inc esp; add dword ptr [ebx], 0x6c; ret; 
0x0014afd3: or byte ptr [ebp + 0x50d4202], al; inc esp; add dword ptr [ebx], 0x77; ret; 
0x001091d4: or byte ptr [ebp + 0xf3e74f6], al; mov dh, 0x56; sbb dh, dh; ret 0x7502; 
0x000e2067: or byte ptr [ebp - 0x3765f7d], cl; dec dword ptr [ecx - 0x38fbdbbc]; add al, 0x24; and eax, 0xe8000000; ret 0xf458; 
0x00059d4f: or byte ptr [ebp - 0x3b7c7dfc], 0x58; pop ebx; ret; 
0x0006b6fa: or byte ptr [ebp - 0x3f6af0fe], al; movzx eax, al; pop ebx; ret; 
0x0006ac74: or byte ptr [ebp - 0x76fd8b0a], al; push es; add esp, 0x10; pop esi; ret; 
0x0005be17: or byte ptr [ebp - 0x7af88a40], al; sal byte ptr [ebp + 0xa], cl; xor eax, eax; ret; 
0x0002d607: or byte ptr [ebp - 0x7ce78b37], al; ret 0x8b04; 
0x0006772e: or byte ptr [ebp - 0x7cef8b0a], al; ret 0x8904; 
0x0002d174: or byte ptr [ebp - 0x7cf68b37], al; ret 0x8b04; 
0x001342d7: or byte ptr [ebx + 0x100e4302], al; push 0x41080e0a; ret; 
0x000f4d97: or byte ptr [ebx + 0x11c82], cl; add byte ptr [ebp - 0x76f98b37], al; mov bl, byte ptr [ecx + eax]; add byte ptr [eax], al; ret; 
0x00128eaf: or byte ptr [ebx + 0x1c0e4302], al; add al, byte ptr [esi + ecx + 8]; inc ecx; ret; 
0x0013b003: or byte ptr [ebx + 0x200e4302], al; add al, byte ptr [esi + ecx + 8]; inc ecx; ret; 
0x00035bed: or byte ptr [ebx + 0x24048901], cl; call dword ptr [ecx + 0xc]; leave; ret; 
0x0013e95f: or byte ptr [ebx + 0x240e4302], al; add cl, byte ptr [esi + ecx + 8]; inc ecx; ret; 
0x000dcc1d: or byte ptr [ebx + 0x29342454], cl; ret 0x5489; 
0x0012aa6b: or byte ptr [ebx + 0x2c0e4302], al; add al, byte ptr [ecx + 0x41080e0a]; ret; 
0x0013e93b: or byte ptr [ebx + 0x2c0e4302], al; add bl, byte ptr [esi + ecx + 8]; inc ecx; ret; 
0x000a426f: or byte ptr [ebx + 0x3a8001c0], al; add byte ptr [edi + eax - 0x7d], dh; ret 0x3901; 
0x00136537: or byte ptr [ebx + 0x440e4302], al; add dl, byte ptr [edx + 0x41080e0a]; ret; 
0x00096cb3: or byte ptr [ebx + 0x5d], bl; ret; 
0x000cf638: or byte ptr [ebx + 0x5e5b0cc4], al; ret; 
0x0003edda: or byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0002c1f0: or byte ptr [ebx + 0x5e5b10c4], al; ret; 
0x00050270: or byte ptr [ebx + 0x5e5b18c4], al; ret; 
0x00065a33: or byte ptr [ebx + 0x5e5b20c4], al; ret; 
0x00090aa9: or byte ptr [ebx + 0x5e5b3cc4], al; ret; 
0x000915ad: or byte ptr [ebx + 0x5e5b5cc4], al; ret; 
0x0004d6d6: or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00035963: or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000285f0: or byte ptr [ebx + 0x5e], bl; ret; 
0x000ab679: or byte ptr [ebx + 0x5f5e08c4], al; pop ebp; ret; 
0x000ab852: or byte ptr [ebx + 0x5f5e14c4], al; pop ebp; ret; 
0x0009dca0: or byte ptr [ebx + 0x5f], bl; ret; 
0x000524b8: or byte ptr [ebx + 0x66042444], cl; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0003b41e: or byte ptr [ebx + 0x68890c69], cl; or al, 0x83; ret 0x8301; 
0x000d1244: or byte ptr [ebx + 0x69890c6e], cl; or al, 0x83; ret 0x8901; 
0x0014771b: or byte ptr [ebx + 0xa510202], al; ret; 
0x00147adf: or byte ptr [ebx + 0xc0e4302], al; add bh, byte ptr [esi + 0x41080e0a]; ret; 
0x00139b27: or byte ptr [ebx + 0xc0e4302], al; or cl, byte ptr [0x4108]; ret; 
0x001306f3: or byte ptr [ebx + 0xc0e4302], al; push 0x41080e0a; ret; 
0x00060bf7: or byte ptr [ebx + 0xf0c244c], cl; mov cl, 0xa; ret; 
0x000b8fd7: or byte ptr [ebx - 0x17], bl; ret; 
0x000ca949: or byte ptr [ebx - 0x35f0f3bb], cl; bswap eax; pop ebp; ret; 
0x001097f2: or byte ptr [ebx - 0x3f7cfb98], cl; or byte ptr [ecx - 0x9efdbbc], cl; ret 0x7402; 
0x000df097: or byte ptr [ebx - 0x74b3db8c], cl; push esi; add al, 0x29; ret 0x5489; 
0x000bd2d6: or byte ptr [ebx - 0x76f3dbb4], cl; add dword ptr [eax + 1], edi; ret; 
0x00108fd2: or byte ptr [ebx - 0x76f7dbbc], cl; xlatb; pop esi; ret; 
0x001089f1: or byte ptr [ebx - 0x7c0dfeea], cl; ret 0x8909; 
0x000f85ac: or byte ptr [ebx - 0x7cf3dbbc], cl; ret 0x8304; 
0x00060bd7: or byte ptr [ebx - 0xff3dbb4], cl; cmpxchg dword ptr [edx], ecx; ret; 
0x00142afc: or byte ptr [ebx], al; cmp byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00142bc8: or byte ptr [ebx], al; fiadd word ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013c9b4: or byte ptr [ebx], al; mov edx, 0x140e0a03; inc ecx; ret; 
0x0014273c: or byte ptr [ebx], al; or al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00142b84: or byte ptr [ebx], al; pop dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00138478: or byte ptr [ebx], al; push 0x140e0a05; inc ecx; ret; 
0x0013a76c: or byte ptr [ebx], al; sbb al, 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012de2c: or byte ptr [ebx], al; sbb dword ptr [ebx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00142b40: or byte ptr [ebx], al; sub eax, 0x140e0a01; inc ecx; ret; 
0x0014c134: or byte ptr [ebx], al; xor eax, 0x140e0a01; inc ecx; ret; 
0x000abad3: or byte ptr [ebx], ch; inc esi; or byte ptr [esi + 0x5f], bl; ret; 
0x000357df: or byte ptr [ecx + 0x14c483f0], cl; pop ebx; pop esi; ret; 
0x0005c640: or byte ptr [ecx + 0x1eed3d1], cl; ret 0xf189; 
0x000c5a3c: or byte ptr [ecx + 0x30c483f0], cl; pop ebx; pop esi; ret; 
0x000a32e2: or byte ptr [ecx + 0x34890c55], cl; and al, 0xe8; ret 0xf816; 
0x0002bb06: or byte ptr [ecx + 0x367c8194], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x000ba6f4: or byte ptr [ecx + 0x43e82404], cl; ret; 
0x00037e63: or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x0005c913: or byte ptr [ecx + 0x4d92404], 0x24; add esp, 4; ret; 
0x000ba3da: or byte ptr [ecx + 0x54ff2404], cl; and al, 0x10; add esp, 8; ret; 
0x000e6976: or byte ptr [ecx + 0x54ff2404], cl; and al, 0x24; add esp, 0x20; ret; 
0x0010b64a: or byte ptr [ecx + 0x6de82434], cl; ret; 
0x0004e4de: or byte ptr [ecx + 0x70890c68], cl; adc byte ptr [ecx - 0x3fceeb88], cl; ret; 
0x000611f8: or byte ptr [ecx + 0x71890c69], cl; adc byte ptr [ecx - 0x3fceeb87], cl; ret; 
0x000f927a: or byte ptr [ecx + 0x7de82404], cl; ret 0xfff2; 
0x000c7088: or byte ptr [ecx + 0x8c483f0], cl; pop ebx; pop esi; ret; 
0x0003254b: or byte ptr [ecx + 0xcc483d0], cl; pop ebx; pop esi; ret; 
0x000659b7: or byte ptr [ecx + 0xcc483f0], cl; pop ebx; pop esi; ret; 
0x0005c936: or byte ptr [ecx - 0x22fbdbbc], 4; and al, 0xc9; ret; 
0x000b6e34: or byte ptr [ecx - 0x2c17dbfc], cl; ret 0xfff6; 
0x00146e55: or byte ptr [ecx - 0x39], al; push cs; add al, 0x41; or eax, dword ptr [ebp + 0xa]; ret; 
0x0012e250: or byte ptr [ecx - 0x39], al; push cs; add al, 0x41; or ebp, dword ptr [ebx + 0xa]; ret; 
0x00146e64: or byte ptr [ecx - 0x39], al; push cs; add al, 0x41; or edx, dword ptr [ecx + 0xa]; ret; 
0x0013dceb: or byte ptr [ecx - 0x39], al; push cs; add al, 0x41; or esi, dword ptr [ecx + 0xa]; ret; 
0x0013dcdc: or byte ptr [ecx - 0x39], al; push cs; add al, 0x41; or esp, dword ptr [edi + 0xa]; ret; 
0x0014bcfd: or byte ptr [ecx - 0x39], al; push cs; add al, 0x45; or ebx, dword ptr [ebx + 0xa]; ret; 
0x0005cb67: or byte ptr [ecx - 0x3a27430], cl; leave; ret 4; 
0x00125dcc: or byte ptr [ecx - 0x3a], al; push cs; add al, 0x41; or ebp, dword ptr [esi + 0xa]; ret; 
0x0014bd63: or byte ptr [ecx - 0x3a], al; push cs; add al, 0x45; or ebx, dword ptr [ebx + 0xa]; ret; 
0x0012fa94: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x41; or eax, dword ptr [edx]; ret; 
0x00130022: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x41; or ecx, dword ptr [ecx + 0xa]; ret; 
0x00149292: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x41; or edx, dword ptr [ebx + 0xa]; ret; 
0x0012990e: or byte ptr [ecx - 0x3b], al; push cs; add al, 0x45; or eax, dword ptr [edx]; ret 0xe0a; 
0x0006f798: or byte ptr [ecx - 0x74fbdbbc], cl; adc dword ptr [ebx + eax*4], 0; add bl, ch; ret 0x44c7; 
0x0002ba30: or byte ptr [ecx - 0x7cf61438], cl; ret 0x830c; 
0x001097f8: or byte ptr [ecx - 0x9efdbbc], cl; ret 0x7402; 
0x000b9076: or byte ptr [ecx], 0; call 0x271e0; pop ebx; ret; 
0x000db8f1: or byte ptr [ecx], al; ret 0x5489; 
0x0004ee31: or byte ptr [ecx], al; ror byte ptr [ecx - 0x16e3dbbc], 1; ret; 
0x00034a07: or byte ptr [ecx], bh; ljmp 0x8304:0x4e8b1274; ret 0x8d01; 
0x0010a74e: or byte ptr [ecx], bh; ret 0x473; 
0x000f75f1: or byte ptr [ecx], bh; ret 0x840f; 
0x000e3244: or byte ptr [ecx], bh; ret 0x850f; 
0x000f5178: or byte ptr [ecx], bh; ret 0x8d0f; 
0x000f8d92: or byte ptr [ecx], bh; sar dword ptr [esi + 9], -0x7d; ret 0x101; 
0x0010983a: or byte ptr [ecx], ch; ret 0x5189; 
0x00098eef: or byte ptr [ecx], ch; ret 0xc729; 
0x000da758: or byte ptr [ecx], cl; ret 0xfa81; 
0x00027b17: or byte ptr [edi + 0x5b], bl; ret; 
0x000ff778: or byte ptr [edi], cl; mov bh, 0x44; inc esi; add bh, byte ptr [ecx]; ret 0x870f; 
0x000eab67: or byte ptr [edi], cl; mov bh, 0xc0; ret; 
0x000df6e9: or byte ptr [edi], cl; mov dh, 0x40; or dword ptr [ecx], ecx; ret 0x9189; 
0x0009b39f: or byte ptr [edi], cl; mov dh, 0x44; push es; or dword ptr [ecx], ecx; ret 0x348d; 
0x000e9521: or byte ptr [edi], cl; mov dh, 0x46; add dword ptr [ecx], ecx; ret 0x543b; 
0x000e8947: or byte ptr [edi], cl; mov dh, 0xce; mov byte ptr [eax], cl; mov byte ptr [eax + 1], dl; ret; 
0x0003599c: or byte ptr [edi], cl; mov dh, 2; add esp, 4; pop ebx; ret; 
0x000aafaf: or byte ptr [edx + 7], dh; seta al; movzx eax, al; ret; 
0x000780e0: or byte ptr [edx - 0x39], al; add al, 0x24; add byte ptr [eax], 0; add al, ch; ret 0xfabd; 
0x0012d6f6: or byte ptr [edx], 0xe; adc al, 0x41; ret; 
0x00123535: or byte ptr [edx], al; add ah, cl; or eax, 0x858fffa; add al, byte ptr [eax]; ret 0xfa0e; 
0x0012a83c: or byte ptr [edx], al; dec eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012aa00: or byte ptr [edx], al; dec esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012aa40: or byte ptr [edx], al; loope 0x12aa4e; push cs; adc al, 0x41; ret; 
0x0012d068: or byte ptr [edx], al; mov cl, 0xa; push cs; adc al, 0x41; ret; 
0x00148574: or byte ptr [edx], al; mov dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00143090: or byte ptr [edx], al; mov ebx, 0x41140e0a; ret; 
0x0014a438: or byte ptr [edx], al; mov word ptr [edx], cs; push cs; adc al, 0x41; ret; 
0x0012d6f4: or byte ptr [edx], al; or byte ptr [edx], 0xe; adc al, 0x41; ret; 
0x0013851a: or byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012fadc: or byte ptr [edx], al; out dx, eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001426a4: or byte ptr [edx], al; push edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014cd14: or byte ptr [edx], al; ror byte ptr [edx], 0xe; adc al, 0x41; ret; 
0x00148a84: or byte ptr [edx], al; scasb al, byte ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00142780: or byte ptr [edx], al; test eax, 0x41140e0a; ret; 
0x001487fc: or byte ptr [edx], al; xchg dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00143e04: or byte ptr [edx], al; xchg eax, ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00137340: or byte ptr [edx], al; lahf; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013d0be: or byte ptr [edx], cl; push cs; adc al, 0x41; ret; 
0x0005d27a: or byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x000cf6bc: or byte ptr [esi + 0x5f], bl; ret 4; 
0x0005bfb8: or byte ptr [esi + 0x5f], bl; ret; 
0x0012eb13: or byte ptr [esi + 0xc0e4102], al; add dword ptr [ebx], 0x5f; ret; 
0x00135d87: or byte ptr [esi + 0xc0e4102], al; add dword ptr [ebx], 0x70; ret; 
0x000c5b98: or byte ptr [esp + edx - 0x7d], dh; ret 0x8301; 
0x0003edd9: or byte ptr ds:[ebx + 0x5e5b10c4], al; pop edi; ret; 
0x001190d5: or ch, byte ptr [edx + 0x76]; leave; ret 0x8581; 
0x0009ca03: or cl, al; call 0x8ce4d28; pop ebx; ret; 
0x00136d92: or cl, byte ptr [0x4108]; ret; 
0x0012aadf: or cl, byte ptr [0x410c]; ret; 
0x00135515: or cl, byte ptr [0x4110]; ret; 
0x0012ff55: or cl, byte ptr [0x4114]; ret; 
0x000777cd: or cl, byte ptr [eax + 0x75c98408]; int1; ret; 
0x000f299c: or cl, byte ptr [ebx - 0x37f0f7be]; add esp, 0x10; pop ebx; ret; 
0x00050e57: or cl, byte ptr [ebx - 0x7ce3dbac]; ret 0x8901; 
0x000e6552: or cl, byte ptr [ecx + 0xfc138f1]; test byte ptr [eax - 0x7d000000], ch; ret 0x8301; 
0x000eb932: or cl, byte ptr [edi]; mov dh, 0; mov byte ptr [ebx + 0x13214], al; pop ebx; ret; 
0x000e1352: or cl, byte ptr [edi]; xchg eax, esp; ret 0x688d; 
0x001252df: or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00125293: or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00126929: or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x0013fafb: or cl, byte ptr fs:[esi]; or al, 0x41; ret; 
0x0012534a: or cl, byte ptr gs:[esi]; adc al, 0x41; ret; 
0x00129036: or cl, byte ptr gs:[esi]; or al, 0x41; ret; 
0x000612eb: or cl, cl; ret; 
0x0003e948: or cl, dl; call 0x5b14add2; pop esi; ret; 
0x000d1188: or dh, bh; add esp, 4; pop ebx; pop esi; ret; 
0x00060b3f: or dh, byte ptr [ebp + 3]; mov eax, ecx; ret; 
0x000b2872: or dh, byte ptr [edx]; idiv edi; add esp, 0x10; pop ebx; ret; 
0x000c5c4e: or dh, dh; inc dword ptr [ebx + 0x5e5b1cc4]; ret; 
0x000ab708: or dh, dh; ret 0x7401; 
0x000ab6c5: or dh, dh; ret 0x7501; 
0x000c53ce: or dh, dh; ret 0x7503; 
0x000f884b: or dh, dh; ret 0x750f; 
0x000f3d7e: or dword ptr [eax + 0x27604f9], eax; pop esi; ret; 
0x000f3e1e: or dword ptr [eax + 0x27604fa], eax; pop esi; ret; 
0x000f3cf8: or dword ptr [eax + 0x37604fa], eax; nop; ret; 
0x0004337e: or dword ptr [eax + eax], 0xffffff81; ret; 
0x000ee8d1: or dword ptr [eax - 0x76000342], 4; and al, 0xe8; ret 0xf362; 
0x000565c7: or dword ptr [eax - 0x7cffff90], 0xffffffc4; or al, 0x5b; pop esi; ret; 
0x000e3783: or dword ptr [eax - 0xc], eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000ebada: or dword ptr [eax - 2], 0x548bffff; and al, 4; mov dword ptr [eax], edx; ret; 
0x000eba6e: or dword ptr [eax - 2], 0x8bffff; ret; 
0x0000538d: or dword ptr [eax], eax; add byte ptr [eax + 0xb], cl; add byte ptr [eax], al; ret 0xb; 
0x00052322: or dword ptr [eax], eax; add byte ptr [eax], al; add esp, 4; pop esi; ret; 
0x0000565d: or dword ptr [eax], eax; add byte ptr [ebp + 0xb], ah; add byte ptr [eax], al; ret; 
0x00000691: or dword ptr [eax], eax; add byte ptr [ebx + ecx + 0x2590000], al; add byte ptr [eax], al; ret; 
0x000b9077: or dword ptr [eax], eax; call 0x271e0; pop ebx; ret; 
0x0007e6cc: or dword ptr [eax], esi; add esp, 8; pop ebx; pop esi; ret; 
0x000337eb: or dword ptr [ebp + 0x75002674], ecx; mov cl, 0x83; ret 0xf01; 
0x000eaa4d: or dword ptr [ebp + edi*8 + 0x8bffff], 0x424548b; movzx eax, word ptr [eax + edx*2 + 2]; and eax, 1; ret; 
0x000eaa10: or dword ptr [ebp + edi*8 + 0x8bffff], 0x424548b; movzx eax, word ptr [eax + edx*2 + 2]; and eax, 5; ret; 
0x000c77c8: or dword ptr [ebp - 0x36], esi; lea eax, dword ptr [ebx - 0x38580]; pop ebx; ret; 
0x000b8f33: or dword ptr [ebp - 0x3b7c000a], esi; and al, 0x5b; ret; 
0x000d27d1: or dword ptr [ebx + 0x5e5b24c4], eax; ret; 
0x0002c23b: or dword ptr [ebx - 0x3b7cd7ba], ecx; adc byte ptr [ebx + 0x5e], bl; ret; 
0x0002c28f: or dword ptr [ebx - 0x3b7cdbba], ecx; adc byte ptr [ebx + 0x5e], bl; ret; 
0x00144090: or dword ptr [ebx], eax; adc eax, 0x140e0a02; inc ecx; ret; 
0x0012a2dc: or dword ptr [ebx], eax; cmp eax, 0x140e0a03; inc ecx; ret; 
0x0012d7b4: or dword ptr [ebx], eax; lea eax, dword ptr [ebx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001372b8: or dword ptr [ebx], eax; mov dword ptr [ecx], 0x41140e0a; ret; 
0x00132bdc: or dword ptr [ebx], eax; mov eax, dword ptr [ebx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012be8c: or dword ptr [ebx], eax; mov edx, 0x140e0a01; inc ecx; ret; 
0x0012a384: or dword ptr [ebx], eax; ret 0xa02; 
0x000cf723: or dword ptr [ecx + 0x1ff8c1d0], ecx; or eax, 1; ret; 
0x0009b3a4: or dword ptr [ecx], ecx; ret 0x348d; 
0x000df6ed: or dword ptr [ecx], ecx; ret 0x9189; 
0x0005c73e: or dword ptr [ecx], edi; ret 0x297c; 
0x0005d42d: or dword ptr [ecx], edi; ret 0x297f; 
0x00104971: or dword ptr [edi], ecx; mov dh, 0x57; adc al, 0xf6; ret 0x7501; 
0x00084163: or dword ptr [edx + ebx*4], 0; add al, ch; ret; 
0x0008415d: or dword ptr [edx + ebx*4], 0; add byte ptr [ebp + 0x9a0c83], cl; add al, ch; ret; 
0x0004f9d5: or dword ptr [edx + esi*4], eax; xor eax, eax; pop ebx; pop esi; ret; 
0x0004e385: or dword ptr [edx], 0x80000; add esp, 4; pop ebx; ret; 
0x0012ac49: or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x0012c220: or dword ptr [edx], eax; call 0x4126d031; ret; 
0x0013693c: or dword ptr [edx], eax; in al, 0xa; push cs; adc al, 0x41; ret; 
0x0013b18c: or dword ptr [edx], eax; push ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0006b685: or dword ptr [edx], eax; xor eax, eax; pop ebx; ret; 
0x00134af4: or dword ptr [edx], eax; into; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00060b99: or dword ptr [edx], eax; ret; 
0x0012d774: or dword ptr [edx], eax; xlatb; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0009459a: or dword ptr [esi + 0x18], eax; add esp, 8; pop ebx; pop esi; ret; 
0x000d6cfd: or dword ptr [esi + 0x20], eax; add esp, 4; pop ebx; pop esi; ret; 
0x00037aba: or dword ptr [esi + 4], eax; add esp, 8; pop ebx; pop esi; ret; 
0x0009d478: or dword ptr [esi + 8], 0xc4838000; and al, 0x5b; pop esi; ret; 
0x0002a281: or dword ptr [esi + eax*4], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x000e8757: or dword ptr [esi - 0x18], esi; xor eax, eax; pop esi; ret; 
0x00068d0d: or dword ptr [esi], 0; call 0x23be0; pop ebx; ret; 
0x00010e2d: or eax, 0x120000; or byte ptr [eax], al; ret; 
0x00034e70: or eax, 0x12c38100; ret 0x11; 
0x00126cb9: or eax, 0x140e0a01; inc ecx; ret; 
0x00022d6e: or eax, 0x15221c00; add byte ptr [edi], al; ret; 
0x0007fece: or eax, 0x24748b00; and al, 0x85; test byte ptr [edi], 0x84; add dword ptr [eax], 0x3d8d0000; ret 0x8b; 
0x00126f03: or eax, 0x3834105; popal; ret; 
0x0013bd8b: or eax, 0x3834405; insb byte ptr es:[edi], dx; ret; 
0x0012f3e7: or eax, 0x3834705; add dh, byte ptr [edx + ecx - 0x3b]; ret; 
0x00142a1f: or eax, 0x3864505; add dword ptr [esp + edi*2], 0xa; ret; 
0x00127c57: or eax, 0x3864805; add dword ptr [esi], 0xa; ret; 
0x0012706f: or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011903; ret; 
0x0012f03b: or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011d03; ret; 
0x00126eb3: or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa019e03; ret; 
0x00126fdb: or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01bf03; ret; 
0x0012afb7: or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01fe03; ret; 
0x0012b0c3: or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa025f03; ret; 
0x0012712b: or eax, 0x3874605; xchg byte ptr [ebx + eax*4], al; add eax, 0xa02a103; ret; 
0x0013b92b: or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011b03; ret; 
0x0013deeb: or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa013e03; ret; 
0x0013dd77: or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa014c03; ret; 
0x0013dd1b: or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa015603; ret; 
0x0013865b: or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa015d03; ret; 
0x0014999b: or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa019e03; ret; 
0x0013b993: or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa022a03; ret; 
0x001427af: or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa030503; ret; 
0x0013de03: or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa03a003; ret; 
0x00126c77: or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa053b03; ret; 
0x0013d833: or eax, 0x3874905; xchg byte ptr [ebx + eax*4], al; add eax, 0xa068003; ret; 
0x00139243: or eax, 0x3874c05; xchg byte ptr [ebx + eax*4], al; add eax, 0xa013503; ret; 
0x0013472f: or eax, 0x3874c05; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01ad03; ret; 
0x001348fb: or eax, 0x3874c05; xchg byte ptr [ebx + eax*4], al; add eax, 0xa024003; ret; 
0x0012e93f: or eax, 0x3874c05; xchg byte ptr [ebx + eax*4], al; add eax, 0xa026b03; ret; 
0x0013d8af: or eax, 0x3874c05; xchg byte ptr [ebx + eax*4], al; add eax, 0xa050803; ret; 
0x000560da: or eax, 0x39000000; ret 0x575; 
0x00034e3b: or eax, 0x47c38100; ret 0x11; 
0x001190cd: or eax, 0x73545338; or ah, byte ptr [ebp - 0x45]; or ch, byte ptr [edx + 0x76]; leave; ret 0x8581; 
0x0004e059: or eax, 0x80000000; ret; 
0x00101de7: or eax, 0x81000099; ret; 
0x000ebee7: or eax, 0x810001f8; ret; 
0x000e61e7: or eax, 0x81000255; ret; 
0x000e07e7: or eax, 0x810002af; ret; 
0x000a62e7: or eax, 0x81000654; ret; 
0x00065ee7: or eax, 0x81000a58; ret; 
0x00056de7: or eax, 0x81000b49; ret; 
0x00048ce7: or eax, 0x81000c2a; ret; 
0x000488e7: or eax, 0x81000c2e; ret; 
0x000428e7: or eax, 0x81000c8e; ret; 
0x00036ee7: or eax, 0x81000d48; ret; 
0x00034e01: or eax, 0x81c38100; ret 0x11; 
0x000a79a9: or eax, 0x83000001; ret 0x3901; 
0x00123539: or eax, 0x858fffa; add al, byte ptr [eax]; ret 0xfa0e; 
0x00034dcf: or eax, 0xb3c38100; ret 0x11; 
0x00065c34: or eax, 0xc483fffc; or al, 0x5b; ret; 
0x000347ae: or eax, 0xc483ffff; adc al, 0x5b; pop esi; ret; 
0x000f89d4: or eax, 0xe281; add byte ptr [eax + 0x75], al; or bh, byte ptr [eax + 0x20]; ret; 
0x001088fe: or eax, 0xffffffe4; cld; dec dword ptr [ecx - 0x6a17dbfc]; ret 0xfff1; 
0x0002863f: or eax, 1; add esp, 0xc; pop ebx; pop esi; ret; 
0x000f8ea5: or eax, 1; pop esi; ret; 
0x000cf729: or eax, 1; ret; 
0x000f3cf5: or eax, dword ptr [eax - 0x57ff616]; add al, 0x76; add esp, dword ptr [esi - 0x70]; ret; 
0x00131629: or eax, dword ptr [eax]; add byte ptr [eax + eax], al; add al, bh; ret; 
0x00000695: or eax, dword ptr [eax]; add byte ptr [ecx + 2], bl; add byte ptr [eax], al; ret; 
0x0000577d: or eax, dword ptr [eax]; add byte ptr [ecx], al; add eax, 0x4ad0000; add byte ptr [eax], al; ret 5; 
0x000f64ce: or eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0xef77; 
0x0005a022: or eax, dword ptr [eax]; add ecx, 0xf7060; lea eax, dword ptr [ecx + 0x142c]; ret; 
0x0005cfe4: or eax, dword ptr [eax]; addsd xmm0, xmm1; movsd qword ptr [esp + 4], xmm0; fld qword ptr [esp + 4]; ret; 
0x0003e6af: or eax, dword ptr [eax]; mov byte ptr [eax + 0xa], 0; ret; 
0x0009c1d6: or eax, dword ptr [eax]; mov eax, dword ptr [ecx + 0x22cc]; ret; 
0x001314ce: or eax, dword ptr [eax]; xor al, 0; add byte ptr [eax], al; pushfd; ret 0; 
0x00031419: or eax, dword ptr [eax]; ret; 
0x00126512: or eax, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x00129b10: or eax, dword ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x00146e5b: or eax, dword ptr [ebp + 0xa]; ret; 
0x0012574a: or eax, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x0012c0ec: or eax, dword ptr [ebp + 0xe]; or al, 0x41; ret; 
0x000954a2: or eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; ret; 
0x0013fd58: or eax, dword ptr [ebx + 0xa]; ret; 
0x00143b2c: or eax, dword ptr [ebx]; aad 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012930b: or eax, dword ptr [ebx]; adc al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00149b33: or eax, dword ptr [ebx]; add al, byte ptr [edx + ecx]; push cs; adc al, 0x41; ret; 
0x0012b0db: or eax, dword ptr [ebx]; add byte ptr [ecx], 0xa; ret; 
0x0012df6d: or eax, dword ptr [ebx]; add byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014b68c: or eax, dword ptr [ebx]; add ecx, dword ptr es:[edx]; push cs; adc al, 0x41; ret; 
0x0014bde7: or eax, dword ptr [ebx]; add ecx, dword ptr gs:[edx]; push cs; adc al, 0x41; ret; 
0x0012a9bf: or eax, dword ptr [ebx]; and eax, 0x140e0a01; inc ecx; ret; 
0x00141b03: or eax, dword ptr [ebx]; arpl word ptr [ecx], ax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014cbe6: or eax, dword ptr [ebx]; cmp eax, 0x140e0a01; inc ecx; ret; 
0x0012da8a: or eax, dword ptr [ebx]; fiadd dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014aaf8: or eax, dword ptr [ebx]; imul eax, dword ptr [ecx], 0xa; push cs; adc al, 0x41; ret; 
0x00143467: or eax, dword ptr [ebx]; jns 0x14346c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001302c8: or eax, dword ptr [ebx]; jp 0x1302d0; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127b2e: or eax, dword ptr [ebx]; loope 0x127b33; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014c2e8: or eax, dword ptr [ebx]; mov dword ptr [edx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b75c: or eax, dword ptr [ebx]; mov esi, 0x140e0a01; inc ecx; ret; 
0x00144222: or eax, dword ptr [ebx]; mov esp, 0x140e0a02; inc ecx; ret; 
0x00131812: or eax, dword ptr [ebx]; mov word ptr [ecx], es; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014c2d0: or eax, dword ptr [ebx]; or al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001297c7: or eax, dword ptr [ebx]; out 1, al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00136f03: or eax, dword ptr [ebx]; pop esi; add dword ptr [esi], ecx; adc al, 0x41; ret; 
0x0013b943: or eax, dword ptr [ebx]; push cs; add al, 0xa; ret; 
0x00139467: or eax, dword ptr [ebx]; rol byte ptr [ecx], 0xa; push cs; adc al, 0x41; ret; 
0x0012df85: or eax, dword ptr [ebx]; rol dword ptr [ecx], 0xa; push cs; adc al, 0x41; ret; 
0x00137b56: or eax, dword ptr [ebx]; rol dword ptr [ecx], 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00133483: or eax, dword ptr [ebx]; sbb al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013391b: or eax, dword ptr [ebx]; sbb dword ptr [ecx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014af4e: or eax, dword ptr [ebx]; sbb eax, 0x140e0a01; inc ecx; ret; 
0x0013a6a3: or eax, dword ptr [ebx]; sbb eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012997e: or eax, dword ptr [ebx]; scasb al, byte ptr es:[edi]; add eax, 0x41140e0a; ret; 
0x00144c95: or eax, dword ptr [ebx]; sidt ptr [edx]; push cs; adc al, 0x41; ret; 
0x0014ba86: or eax, dword ptr [ebx]; sub dword ptr [ebx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013edc2: or eax, dword ptr [ebx]; sub dword ptr [edx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001443b1: or eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001295b1: or eax, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00128394: or eax, dword ptr [edi + 0xa]; push cs; or al, 0x41; ret; 
0x00141b7c: or eax, dword ptr [edi + 0xa]; ret; 
0x0014068e: or eax, dword ptr [edi + 0xe]; adc al, 0x41; ret; 
0x00128c0c: or eax, dword ptr [edi + 0xe]; or al, 0x41; ret; 
0x0013e61d: or eax, dword ptr [edx]; arpl word ptr [edx], cx; push cs; adc al, 0x41; ret; 
0x0014392f: or eax, dword ptr [edx]; bound ecx, qword ptr [edx]; push cs; adc al, 0x41; ret; 
0x00126e6c: or eax, dword ptr [edx]; call 0x41267c7d; ret; 
0x0012d63e: or eax, dword ptr [edx]; dec eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00131974: or eax, dword ptr [edx]; dec ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00131d1f: or eax, dword ptr [edx]; dec ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012dd82: or eax, dword ptr [edx]; dec edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012754a: or eax, dword ptr [edx]; dec edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013f668: or eax, dword ptr [edx]; dec esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012cab4: or eax, dword ptr [edx]; dec esi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001262d5: or eax, dword ptr [edx]; dec esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00140986: or eax, dword ptr [edx]; dec esp; push cs; adc al, 0x41; ret; 
0x0014b442: or eax, dword ptr [edx]; fisttp dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x00140f1d: or eax, dword ptr [edx]; fisttp qword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0014bca3: or eax, dword ptr [edx]; fisttp word ptr [edx]; push cs; adc al, 0x41; ret; 
0x0013d7c2: or eax, dword ptr [edx]; fmul qword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0012afcf: or eax, dword ptr [edx]; fmul qword ptr [edx]; ret; 
0x00125b16: or eax, dword ptr [edx]; imul ecx, dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x00144bf3: or eax, dword ptr [edx]; in eax, dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127b46: or eax, dword ptr [edx]; inc eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001317a3: or eax, dword ptr [edx]; inc ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127a02: or eax, dword ptr [edx]; inc ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129689: or eax, dword ptr [edx]; inc edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014ab69: or eax, dword ptr [edx]; inc edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014c558: or eax, dword ptr [edx]; inc esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00136142: or eax, dword ptr [edx]; inc esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126bc7: or eax, dword ptr [edx]; insd dword ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012d593: or eax, dword ptr [edx]; int 0xa; push cs; adc al, 0x41; ret; 
0x00130170: or eax, dword ptr [edx]; jnp 0x13017e; push cs; adc al, 0x41; ret; 
0x0013b7fc: or eax, dword ptr [edx]; jnp 0x13b80a; push cs; adc al, 0x41; ret; 
0x0013131a: or eax, dword ptr [edx]; jns 0x131328; push cs; adc al, 0x41; ret; 
0x0014a73b: or eax, dword ptr [edx]; jns 0x14a749; push cs; adc al, 0x41; ret; 
0x001364b1: or eax, dword ptr [edx]; jo 0x1364bf; push cs; adc al, 0x41; ret; 
0x00136509: or eax, dword ptr [edx]; jo 0x136517; push cs; adc al, 0x41; ret; 
0x001365f5: or eax, dword ptr [edx]; jo 0x136603; push cs; adc al, 0x41; ret; 
0x0013664d: or eax, dword ptr [edx]; jo 0x13665b; push cs; adc al, 0x41; ret; 
0x0014b3ef: or eax, dword ptr [edx]; jo 0x14b401; adc al, 0x41; ret; 
0x0013f425: or eax, dword ptr [edx]; jp 0x13f433; push cs; adc al, 0x41; ret; 
0x00144abb: or eax, dword ptr [edx]; lea ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0012f053: or eax, dword ptr [edx]; lea ecx, dword ptr [edx]; ret; 
0x00131e11: or eax, dword ptr [edx]; lodsb al, byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b16f: or eax, dword ptr [edx]; mov al, byte ptr [0x41140e0a]; ret; 
0x0014bf5a: or eax, dword ptr [edx]; mov bl, 0xa; push cs; adc al, 0x41; ret; 
0x0012b4c3: or eax, dword ptr [edx]; mov byte ptr [0x41140e0a], al; ret; 
0x001392ef: or eax, dword ptr [edx]; mov ch, 0xa; push cs; adc al, 0x41; ret; 
0x001298e6: or eax, dword ptr [edx]; mov dh, 0xa; push cs; adc al, 0x41; ret; 
0x001328fb: or eax, dword ptr [edx]; mov dword ptr [0x41140e0a], eax; ret; 
0x00144b2b: or eax, dword ptr [edx]; mov dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0013314d: or eax, dword ptr [edx]; mov eax, 0x41140e0a; ret; 
0x0014cdf8: or eax, dword ptr [edx]; mov ebp, 0x41100e0a; ret; 
0x00133a7d: or eax, dword ptr [edx]; mov ebp, 0x41140e0a; ret; 
0x00142153: or eax, dword ptr [edx]; mov ebx, 0x41140e0a; ret; 
0x001335e5: or eax, dword ptr [edx]; mov ecx, 0x41140e0a; ret; 
0x0013c91c: or eax, dword ptr [edx]; mov ecx, dword ptr [esi]; adc al, 0x41; ret; 
0x00127b9e: or eax, dword ptr [edx]; mov edi, 0x41140e0a; ret; 
0x00133f15: or eax, dword ptr [edx]; mov edx, 0x41140e0a; ret; 
0x00137852: or eax, dword ptr [edx]; mov esp, 0x41140e0a; ret; 
0x001297f7: or eax, dword ptr [edx]; mov word ptr [edx], cs; push cs; adc al, 0x41; ret; 
0x001366a6: or eax, dword ptr [edx]; or cl, byte ptr [0x4114]; ret; 
0x00137f29: or eax, dword ptr [edx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00133aab: or eax, dword ptr [edx]; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x00131331: or eax, dword ptr [edx]; or cl, byte ptr gs:[esi]; adc al, 0x41; ret; 
0x0012fd2a: or eax, dword ptr [edx]; or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x0013b4b6: or eax, dword ptr [edx]; out dx, al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012a07f: or eax, dword ptr [edx]; pop eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014832b: or eax, dword ptr [edx]; pop eax; push cs; or al, 0x41; ret; 
0x00136712: or eax, dword ptr [edx]; pop ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127b17: or eax, dword ptr [edx]; pop ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012d177: or eax, dword ptr [edx]; pop ecx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012ed52: or eax, dword ptr [edx]; pop esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012959a: or eax, dword ptr [edx]; push 0x41140e0a; ret; 
0x00131946: or eax, dword ptr [edx]; push 0xa; push cs; adc al, 0x41; ret; 
0x0012b62b: or eax, dword ptr [edx]; push 0xa; push cs; or al, 0x41; ret; 
0x00133f2c: or eax, dword ptr [edx]; push eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00131b67: or eax, dword ptr [edx]; push ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00125568: or eax, dword ptr [edx]; push ebx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00131a6c: or eax, dword ptr [edx]; push ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00147913: or eax, dword ptr [edx]; push ecx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013c75c: or eax, dword ptr [edx]; push ecx; push cs; adc al, 0x41; ret; 
0x00129a30: or eax, dword ptr [edx]; push edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013571e: or eax, dword ptr [edx]; push edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126e12: or eax, dword ptr [edx]; push esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013876f: or eax, dword ptr [edx]; push esi; ret; 
0x0012f79a: or eax, dword ptr [edx]; push esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129914: or eax, dword ptr [edx]; ret 0xe0a; 
0x0013eea2: or eax, dword ptr [edx]; ror byte ptr [edx], 0xe; adc al, 0x41; ret; 
0x00139ce2: or eax, dword ptr [edx]; ror byte ptr [edx], cl; push cs; adc al, 0x41; ret; 
0x00134fc6: or eax, dword ptr [edx]; ror dword ptr [edx], 1; push cs; adc al, 0x41; ret; 
0x00143306: or eax, dword ptr [edx]; scasb al, byte ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013195d: or eax, dword ptr [edx]; stosb byte ptr es:[edi], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00149f12: or eax, dword ptr [edx]; stosd dword ptr es:[edi], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013f9f2: or eax, dword ptr [edx]; test al, 0xa; push cs; adc al, 0x41; ret; 
0x0014427c: or eax, dword ptr [edx]; test byte ptr [edx], cl; push cs; adc al, 0x41; ret; 
0x0014beab: or eax, dword ptr [edx]; test eax, 0x41140e0a; ret; 
0x0012988d: or eax, dword ptr [edx]; xchg eax, ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001298fd: or eax, dword ptr [edx]; xchg eax, edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012d903: or eax, dword ptr [edx]; xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012d5aa: or eax, dword ptr [edx]; aad; push cs; adc al, 0x41; ret; 
0x001475ea: or eax, dword ptr [edx]; cdq; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012678e: or eax, dword ptr [edx]; iretd; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00149aaf: or eax, dword ptr [edx]; lahf; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001470bb: or eax, dword ptr [edx]; leave; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013f1e5: or eax, dword ptr [edx]; popal; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012fa9a: or eax, dword ptr [edx]; ret; 
0x00128764: or eax, dword ptr [edx]; sahf; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001361f1: or eax, dword ptr [edx]; stc; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013501e: or eax, dword ptr [edx]; sti; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00131282: or eax, dword ptr [edx]; wait; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00145cbb: or eax, dword ptr [edx]; xlatb; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012e17e: or eax, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00129e40: or eax, dword ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x000e8934: or eax, ecx; movzx edx, byte ptr [edx + 2]; shl edx, 8; or eax, edx; ret; 
0x00056d97: or eax, edx; add esp, 0x8c; pop ebx; pop esi; ret; 
0x000e891a: or eax, edx; ret; 
0x001318ee: or ebp, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00137493: or ebp, dword ptr [eax + 0xa]; push cs; or al, 0x41; ret; 
0x00127143: or ebp, dword ptr [eax + 0xa]; ret; 
0x001424fa: or ebp, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x0013ebee: or ebp, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x0012632e: or ebp, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x0012e256: or ebp, dword ptr [ebx + 0xa]; ret; 
0x0009c671: or ebp, dword ptr [ebx - 0x3b7c0008]; or al, 0x5b; ret; 
0x00126aea: or ebp, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0012cc33: or ebp, dword ptr [ecx + 0xe]; or al, 0x41; ret; 
0x0012d9ae: or ebp, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00127bb5: or ebp, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x0013dd8f: or ebp, dword ptr [edx + 0xa]; ret; 
0x0013d20e: or ebp, dword ptr [edx + 0xe]; adc al, 0x41; ret; 
0x001275fa: or ebp, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0014a83a: or ebp, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00125dd2: or ebp, dword ptr [esi + 0xa]; ret; 
0x0012c633: or ebp, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x00128ada: or ebx, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00127087: or ebx, dword ptr [eax + 0xa]; ret; 
0x0014388c: or ebx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x0014ac59: or ebx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x0013d887: or ebx, dword ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x001270a3: or ebx, dword ptr [ebp + 0xa]; ret; 
0x0012fd97: or ebx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x0014472f: or ebx, dword ptr [ebp + 0xe]; or al, 0x41; ret; 
0x00126b6f: or ebx, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x001289ab: or ebx, dword ptr [ebx + 0xa]; push cs; or al, 0x41; ret; 
0x0014bd03: or ebx, dword ptr [ebx + 0xa]; ret; 
0x0014c8f0: or ebx, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x0014811b: or ebx, dword ptr [ebx + 0xe]; or al, 0x41; ret; 
0x0012a892: or ebx, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x001447d6: or ebx, dword ptr [ecx + 0xe]; adc al, 0x41; ret; 
0x00139baa: or ebx, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0012c686: or ebx, dword ptr [edi + 0xe]; adc al, 0x41; ret; 
0x0013994c: or ebx, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x00136237: or ebx, dword ptr [edx + 0xa]; push cs; or al, 0x41; ret; 
0x00127095: or ebx, dword ptr [edx + 0xa]; ret; 
0x001388fb: or ebx, dword ptr [edx + 0xe]; adc al, 0x41; ret; 
0x0012646e: or ebx, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0012ce47: or ebx, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00148d28: or ebx, dword ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x0012fe82: or ebx, dword ptr [esi + 0xa]; ret; 
0x0012a93e: or ebx, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x0004e031: or ebx, ebx; pop esp; and al, 4; mov eax, dword ptr [esp + 4]; ret; 
0x00125333: or ecx, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00125fbb: or ecx, dword ptr [eax + 0xa]; push cs; or al, 0x41; ret; 
0x0012535f: or ecx, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x0012d0f5: or ecx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x0012627e: or ecx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x0012d6bb: or ecx, dword ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x0014b49a: or ecx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x000f31bb: or ecx, dword ptr [ebx + 0x29242454]; ret 0xfa83; 
0x0012776a: or ecx, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x00128245: or ecx, dword ptr [ebx + 0xa]; push cs; or al, 0x41; ret; 
0x0012f062: or ecx, dword ptr [ebx + 0xa]; ret; 
0x00149df7: or ecx, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x0012e800: or ecx, dword ptr [ebx + 0xe]; or al, 0x41; ret; 
0x0013e066: or ecx, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0012db9b: or ecx, dword ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x00130028: or ecx, dword ptr [ecx + 0xa]; ret; 
0x0012e683: or ecx, dword ptr [ecx + 0xe]; or al, 0x41; ret; 
0x001266e0: or ecx, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0013ad6b: or ecx, dword ptr [edi + 0xa]; push cs; or al, 0x41; ret; 
0x0012fe90: or ecx, dword ptr [edi + 0xa]; ret; 
0x00132587: or ecx, dword ptr [edi + 0xe]; adc al, 0x41; ret; 
0x00140b73: or ecx, dword ptr [edi + 0xe]; or al, 0x41; ret; 
0x00126d62: or ecx, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x0013ac5d: or ecx, dword ptr [edx + 0xe]; adc al, 0x41; ret; 
0x00147922: or ecx, dword ptr [edx + 0xe]; or al, 0x41; ret; 
0x00132dc2: or ecx, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0012a0e6: or ecx, dword ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x001294de: or ecx, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00143e7a: or ecx, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x0013d40b: or ecx, dword ptr [esi + ecx + 0xc]; inc ecx; ret; 
0x000d6a21: or ecx, dword ptr [esi*8 + 0xcc483ff]; pop ebx; ret; 
0x0013dca7: or edi, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x00141edb: or edi, dword ptr [eax + eax]; add byte ptr [eax], al; test al, 0xcc; add dword ptr [eax], eax; ret; 
0x00127dba: or edi, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x00142a31: or edi, dword ptr [ebp + 0xa]; ret; 
0x00125ba6: or edi, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x00131c57: or edi, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0014045e: or edi, dword ptr [ecx + 0xe]; adc al, 0x41; ret; 
0x00131882: or edi, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x0014c1cd: or edi, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x00127eb6: or edi, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0013c7eb: or edi, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x0013de29: or edi, dword ptr [esi + 0xa]; ret; 
0x0014abf0: or edi, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x000462d9: or edi, esi; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x001263de: or edx, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0013e11c: or edx, dword ptr [eax + 0xa]; push cs; or al, 0x41; ret; 
0x0013de84: or edx, dword ptr [eax + 0xa]; ret; 
0x00143f0e: or edx, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x00130f2f: or edx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x0013634a: or edx, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x00129e03: or edx, dword ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x0012a096: or edx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x0014c954: or edx, dword ptr [ebp + 0xe]; or al, 0x41; ret; 
0x0012e609: or edx, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x0012e20b: or edx, dword ptr [ebx + 0xa]; push cs; or al, 0x41; ret; 
0x0013de76: or edx, dword ptr [ebx + 0xa]; ret; 
0x00138390: or edx, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x00130bf4: or edx, dword ptr [ebx + 0xe]; or al, 0x41; ret; 
0x0009a7c1: or edx, dword ptr [ebx - 0x3b7c0008]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0012854a: or edx, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x00129043: or edx, dword ptr [ecx + 0xa]; push cs; or al, 0x41; ret; 
0x0013e0e2: or edx, dword ptr [ecx + 0xa]; ret; 
0x0012e219: or edx, dword ptr [ecx + 0xe]; or al, 0x41; ret; 
0x00126484: or edx, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00149d53: or edx, dword ptr [edi + 0xa]; push cs; or al, 0x41; ret; 
0x0012a012: or edx, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x00125b90: or edx, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0012b5cb: or edx, dword ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x0013566f: or edx, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x001430d3: or edx, dword ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x00144930: or edx, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x0013cf13: or edx, dword ptr [esi + ecx + 0xc]; inc ecx; ret; 
0x00128cd2: or edx, dword ptr [esi + ecx + 8]; inc ecx; ret; 
0x0004748e: or edx, ecx; bswap edx; mov dword ptr [eax], edx; ret 4; 
0x0004e649: or edx, ecx; mov dword ptr [esp - 4], edx; fldcw word ptr [esp - 4]; ret; 
0x00135ab8: or esi, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x0012887a: or esi, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x0012618b: or esi, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x0014148f: or esi, dword ptr [eax + eax]; add byte ptr [eax], al; pop esp; ret 1; 
0x0013ed4b: or esi, dword ptr [eax + eax]; add byte ptr [eax], al; sbb byte ptr [ebx - 0x4904ffff], bl; idiv edi; ret; 
0x0012b26b: or esi, dword ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x00143a93: or esi, dword ptr [ebp + 0xe]; or al, 0x41; ret; 
0x0012cb43: or esi, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x00139516: or esi, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x0014192c: or esi, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0013dcf1: or esi, dword ptr [ecx + 0xa]; ret; 
0x00144000: or esi, dword ptr [ecx + 0xe]; or al, 0x41; ret; 
0x00136eed: or esi, dword ptr [edi + 0xa]; push cs; adc al, 0x41; ret; 
0x00127dff: or esi, dword ptr [edi + 0xe]; or al, 0x41; ret; 
0x0012e152: or esi, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x0013de1b: or esi, dword ptr [edx + 0xa]; ret; 
0x0012c1a4: or esi, dword ptr [edx + 0xe]; or al, 0x41; ret; 
0x0013837a: or esi, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0014bb5b: or esi, dword ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x001451ea: or esi, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x001260ef: or esi, dword ptr [esi + 0xe]; or al, 0x41; ret; 
0x0014b9c3: or esi, dword ptr [esi + ecx + 8]; inc ecx; ret; 
0x000e4b81: or esi, eax; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0009b18a: or esp, 0x22; add byte ptr [eax], al; pop ebx; ret; 
0x000488ab: or esp, 0xffffffe1; sti; dec dword ptr [ecx - 0x1717dbfc]; ret 0xfffd; 
0x000487e0: or esp, 0xffffffe1; sti; dec dword ptr [ecx - 0x4c17dbfc]; ret; 
0x0012cb70: or esp, dword ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00125349: or esp, dword ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x00135b0a: or esp, dword ptr [ebp + 0xa]; push cs; or al, 0x41; ret; 
0x0012992b: or esp, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x00141c43: or esp, dword ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x0013f137: or esp, dword ptr [ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x00135afc: or esp, dword ptr [edi + 0xa]; push cs; or al, 0x41; ret; 
0x0013dce2: or esp, dword ptr [edi + 0xa]; ret; 
0x00131a40: or esp, dword ptr [edx + 0xa]; push cs; adc al, 0x41; ret; 
0x00148229: or esp, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0013cb27: or esp, dword ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00125bee: or esp, dword ptr [esi + 0xa]; ret; 
0x0012a8ea: or esp, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x00139367: or esp, dword ptr [esi + ecx + 0xc]; inc ecx; ret; 
0x0006e930: or esp, edi; dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; ret 2; 
0x0006e95f: or esp, edi; dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; ret; 
0x00000690: or word ptr [eax], ax; add byte ptr [ebx + ecx + 0x2590000], al; add byte ptr [eax], al; ret; 
0x0009d477: or word ptr [esi + 8], 0x8000; add esp, 0x24; pop ebx; pop esi; ret; 
0x0005d05e: orpd xmm0, xmm2; addsd xmm0, xmm1; movsd qword ptr [esp + 4], xmm0; fld qword ptr [esp + 4]; ret; 
0x0005d05f: orps xmm0, xmm2; addsd xmm0, xmm1; movsd qword ptr [esp + 4], xmm0; fld qword ptr [esp + 4]; ret; 
0x000354d7: out -2, eax; inc dword ptr [ecx + 0x8cc4]; add byte ptr [ebx + 0x5e], bl; ret; 
0x0005725a: out 0x31, al; rcr byte ptr [ebx + 0x66], 0x90; ret; 
0x0007779b: out 0x5e, eax; pop edi; ret; 
0x00140585: out 0xa, al; push cs; adc al, 0x41; ret; 
0x0012d735: out 0xa, eax; push cs; adc al, 0x41; ret; 
0x00118eb0: out 0xae, al; in eax, dx; inc edi; leave; ret 0x3b81; 
0x00037dd7: out 0xe8, al; ret; 
0x0010673e: out 0xf3, al; stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000c7766: out 0xf6, al; cmc; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x001297c9: out 1, al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000c9235: out dx, al; add ch, bl; ret 0x66aa; 
0x0002cd6d: out dx, al; add dword ptr [edx + ebp*8 - 0x7d], esi; ret 0xc704; 
0x0004ea16: out dx, al; add dword ptr [edx + esi*4 - 0x77], esi; ret 0x748d; 
0x00137e42: out dx, al; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00053557: out dx, al; add esp, 0x18; pop ebx; pop esi; ret; 
0x0010df06: out dx, al; dec dword ptr [ecx]; ret; 
0x0010df2e: out dx, al; dec esi; ret; 
0x000e4cab: out dx, al; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0010df1a: out dx, al; lcall ptr [ebp + 0x34ffeec2]; ret; 
0x0010df12: out dx, al; lcall ptr [ebp + 0x3effeec2]; ret; 
0x0010df2a: out dx, al; lcall ptr [ebp - 0x3100113e]; ret; 
0x000f9b6a: out dx, al; mov eax, dword ptr [esp + 0x14]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0013b4b8: out dx, al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0010dfe2: out dx, al; push ebp; ret 0xffee; 
0x0013efcc: out dx, al; ret 0xfff7; 
0x000d8027: out dx, al; hlt; inc dword ptr [ebx + 0x5e5b0cc4]; ret; 
0x0004f7e1: out dx, al; nop; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0012ec51: out dx, eax; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x000e4c18: out dx, eax; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0002ba72: out dx, eax; mov eax, 0x23; pop ebx; pop esi; ret; 
0x00118e5a: out dx, eax; mov esi, 0xbf597fc7; ret 0xa88f; 
0x0012fade: out dx, eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000282d1: out dx, eax; pop esi; ret; 
0x000f119b: out dx, eax; ret 0xfffc; 
0x000647f9: out dx, eax; xor edx, edx; sub eax, edx; pop esi; ret; 
0x00097e7f: out dx, eax; clc; dec dword ptr [ebx + 0x4891447]; and al, 0xe8; ret; 
0x00067297: out dx, eax; popfd; push cs; add byte ptr [ebx - 0x76dbdbbc], cl; ret 0xe283; 
0x0002a1d4: outsb dx, byte ptr [esi]; adc al, byte ptr [eax]; mov eax, dword ptr [ecx + 0x35d0]; ret; 
0x00126d4d: outsb dx, byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127c32: outsb dx, byte ptr [esi]; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012c634: outsb dx, byte ptr [esi]; push cs; adc al, 0x41; ret; 
0x001277a2: outsb dx, byte ptr [esi]; push cs; or al, 0x41; ret; 
0x00011418: outsb dx, byte ptr [esi]; ret 9; 
0x000d8f40: outsb dx, byte ptr [esi]; nop; cld; inc dword ptr [ebx + 0x5e5b18c4]; ret; 
0x0006db11: outsb dx, byte ptr [esi]; sti; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00009115: outsd dx, dword ptr [esi]; add byte ptr [eax], al; ret 0xcf6; 
0x00122005: outsd dx, dword ptr [esi]; add dword ptr [eax], eax; ret; 
0x0005a9df: outsd dx, dword ptr [esi]; mov edx, 0xff6c7072; pop ebp; ret; 
0x00126555: outsd dx, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126072: outsd dx, dword ptr [esi]; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x000347ad: outsd dx, dword ptr [esi]; or eax, 0xc483ffff; adc al, 0x5b; pop esi; ret; 
0x001276b2: outsd dx, dword ptr [esi]; push cs; or al, 0x41; ret; 
0x000ebf0d: outsd dx, dword ptr [esi]; xchg eax, edi; inc dword ptr [ebx + 0x5f5b08c4]; ret; 
0x0004f0ad: outsd dx, dword ptr [esi]; std; inc dword ptr [ebx + 0x5e5b28c4]; pop edi; ret; 
0x0005a9de: outsw dx, word ptr [esi]; mov edx, 0xff6c7072; pop ebp; ret; 
0x00061e77: pop ds; add byte ptr [eax], al; add byte ptr [eax + edi - 0x7d], dh; ret 0xeb01; 
0x00036edc: pop ds; add esp, 0xc; pop ebx; ret; 
0x0005be7d: pop ds; and edx, 0x20; add eax, edx; pop esi; ret; 
0x0009bb2d: pop ds; mov bl, 0xf8; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000cf728: pop ds; or eax, 1; ret; 
0x0006b367: pop ds; pop ebp; push cs; add byte ptr [ebx - 0x76dbdbbc], cl; ret 0xe283; 
0x0004e199: pop ds; pop ebp; ret; 
0x000a2ebd: pop ds; push es; clc; inc dword ptr [ebx + 0x5d5b08c4]; ret; 
0x0005bd9e: pop ds; sar eax, cl; ret; 
0x000db3bd: pop ds; xchg eax, edx; hlt; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000a2a83: pop ds; clc; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0004e096: pop ds; leave; ret; 
0x0004e1a2: pop ds; ret; 
0x00005410: pop dword ptr [eax]; add byte ptr [eax], al; ret 4; 
0x0010a6e4: pop dword ptr [eax]; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0013f0f5: pop dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012603b: pop eax; add ah, byte ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x00137f6b: pop eax; add al, ah; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00124065: pop eax; add al, byte ptr [eax]; ret 0xfc17; 
0x0012b803: pop eax; add al, byte ptr [edx + 0x41140e0a]; ret; 
0x00138003: pop eax; add al, dl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013433b: pop eax; add cl, al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00135d00: pop eax; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x000a998c: pop eax; and al, 0; add byte ptr [ecx - 0x1717dbd4], cl; ret; 
0x001361db: pop eax; jno 0x1361e8; push cs; adc al, 0x41; ret; 
0x00128adb: pop eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00059d0e: pop eax; pop ebx; ret; 
0x0009137d: pop eax; pop esi; pop edi; ret; 
0x00144785: pop eax; push cs; adc al, 0x41; ret; 
0x00136beb: pop eax; push cs; or al, 0x41; ret; 
0x00036629: pop eax; ret 0xfffb; 
0x0005cfe8: pop eax; sal edx, 0xf; adc dword ptr [esp + 4], eax; fld qword ptr [esp + 4]; ret; 
0x00120830: pop eax; lahf; dec dword ptr [eax]; ret; 
0x001270e1: pop eax; ret; 
0x00008a65: pop ebp; add byte ptr [eax], al; cmpsb byte ptr [esi], byte ptr es:[edi]; ret 9; 
0x00011415: pop ebp; add byte ptr [eax], al; outsb dx, byte ptr [esi]; ret 9; 
0x000616e5: pop ebp; add byte ptr [ebx + 0x5f5e0cc4], al; pop ebp; ret; 
0x0012c121: pop ebp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00138665: pop ebp; add dword ptr [edx], ecx; ret; 
0x00035e9f: pop ebp; call 0xc4875ea3; or al, 0x5b; ret; 
0x00058cff: pop ebp; mov dword ptr [0xc483fffc], eax; or al, 0x5b; ret; 
0x001266b5: pop ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013d888: pop ebp; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012fd98: pop ebp; push cs; adc al, 0x41; ret; 
0x0006b368: pop ebp; push cs; add byte ptr [ebx - 0x76dbdbbc], cl; ret 0xe283; 
0x00144730: pop ebp; push cs; or al, 0x41; ret; 
0x000326c7: pop ebp; ret 4; 
0x0005cb6b: pop ebp; cld; leave; ret 4; 
0x000345d4: pop ebp; cld; leave; ret; 
0x00027dfc: pop ebp; ret; 
0x00006225: pop ebx; add byte ptr [eax], al; inc esp; ret 9; 
0x0012d57d: pop ebx; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x001293a5: pop ebx; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0002a48a: pop ebx; add esp, 0xc; pop ebp; ret; 
0x00076ffe: pop ebx; mov dword ptr [edx], ecx; xor eax, eax; ret; 
0x000a8d40: pop ebx; mov eax, dword ptr [edx]; mov dword ptr [edx], ecx; ret; 
0x00126b70: pop ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001289ac: pop ebx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0010a6e3: pop ebx; pop dword ptr [eax]; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x00034608: pop ebx; pop ebp; ret; 
0x000c8fdf: pop ebx; pop edi; pop esi; ret; 
0x0007fc2e: pop ebx; pop edi; ret; 
0x000cf7b5: pop ebx; pop esi; pop ebp; ret 4; 
0x000346a0: pop ebx; pop esi; pop ebp; ret; 
0x000326c4: pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00027df9: pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00028274: pop ebx; pop esi; pop edi; ret; 
0x00027bc5: pop ebx; pop esi; ret; 
0x000e0f01: pop ebx; pop esp; hlt; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x00147755: pop ebx; push cs; adc al, 0x41; ret; 
0x0014811c: pop ebx; push cs; or al, 0x41; ret; 
0x00118da4: pop ebx; ret 0x3956; 
0x0002e567: pop ebx; ret 4; 
0x00034601: pop ebx; sub eax, 0xc483ffff; or al, 0x5b; pop ebp; ret; 
0x0004e470: pop ebx; xor eax, eax; ret; 
0x000c8ed3: pop ebx; xor edx, edx; ret; 
0x00096b21: pop ebx; clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0005725d: pop ebx; nop; ret; 
0x00027b19: pop ebx; ret; 
0x00126605: pop ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012617e: pop ecx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001447d7: pop ecx; push cs; adc al, 0x41; ret; 
0x001258bf: pop ecx; push cs; or al, 0x41; ret; 
0x00137422: pop ecx; ret; 
0x00006a45: pop edi; add byte ptr [eax], al; ret 0x9d0; 
0x0012b0cd: pop edi; add cl, byte ptr [edx]; ret; 
0x001278e1: pop edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001260e2: pop edi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x000326c6: pop edi; pop ebp; ret 4; 
0x00027dfb: pop edi; pop ebp; ret; 
0x000b46eb: pop edi; pop ebx; pop esi; ret; 
0x00027b18: pop edi; pop ebx; ret; 
0x0002c353: pop edi; pop esi; ret; 
0x0012c687: pop edi; push cs; adc al, 0x41; ret; 
0x000bdc20: pop edi; ret 0xfff6; 
0x000cf6be: pop edi; ret 4; 
0x00028276: pop edi; ret; 
0x0014b711: pop edx; add al, 0xa; push cs; adc al, 0x41; ret; 
0x0014340e: pop edx; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0012e5dd: pop edx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0005cb66: pop edx; or byte ptr [ecx - 0x3a27430], cl; leave; ret 4; 
0x001269b1: pop edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00136238: pop edx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001388fc: pop edx; push cs; adc al, 0x41; ret; 
0x0012c7c7: pop edx; push cs; or al, 0x41; ret; 
0x00124638: pop edx; ret 0xfffc; 
0x00074a0d: pop edx; xor bh, ah; dec dword ptr [ecx - 0x72f3dbac]; xchg eax, ebx; ret 0xfc0b; 
0x0012ac1b: pop edx; ret; 
0x000050bd: pop es; add byte ptr [eax], al; ret 0xa; 
0x000041dd: pop es; add byte ptr [eax], al; ret; 
0x000500e2: pop es; add byte ptr [ebx + 0x5f5e01c4], al; pop ebp; ret; 
0x0005b030: pop es; add dword ptr [eax], 1; adc dword ptr [eax + 4], 0; ret; 
0x0008240f: pop es; add dword ptr [edi + edx - 0x77], esi; ret 0xca0f; 
0x0012b4ad: pop es; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x000f27d5: pop es; inc eax; inc dword ptr [ebx + 0x5f5b18c4]; ret; 
0x000d225e: pop es; mov eax, 1; pop esi; ret; 
0x0004e0cc: pop es; mov eax, 1; leave; ret; 
0x0005bc96: pop es; mov eax, 2; pop esi; ret; 
0x0002e53b: pop es; neg eax; adc edx, 0; neg edx; ret; 
0x0005c8dd: pop es; neg eax; add esp, 0xc; pop ebx; ret; 
0x00144173: pop es; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014225f: pop es; push cs; adc al, 0x41; ret; 
0x00118f88: pop es; ret 0x21c0; 
0x00116ce8: pop es; ret 0xfff5; 
0x00021184: pop es; ret 2; 
0x000213e4: pop es; ret 3; 
0x000216b4: pop es; ret 4; 
0x0002194c: pop es; rol dword ptr [0x15180c00], 0; pop es; ret; 
0x000e89ab: pop es; sar eax, 3; add eax, 1; ret; 
0x000aafb1: pop es; seta al; movzx eax, al; ret; 
0x000cf739: pop es; setg al; movzx eax, al; ret; 
0x00036f8f: pop es; xor eax, eax; add esp, 0x14; pop ebx; ret; 
0x000c6523: pop es; xor eax, eax; add esp, 0x18; pop ebx; ret; 
0x00089375: pop es; xor eax, eax; add esp, 0x28; pop ebx; ret; 
0x000893f5: pop es; xor eax, eax; add esp, 0x2c; pop ebx; ret; 
0x0005a782: pop es; xor eax, eax; add esp, 4; pop ebx; ret; 
0x0009c9df: pop es; xor eax, eax; add esp, 8; pop ebx; ret; 
0x000d5d2c: pop es; aaa; ret; 
0x0010f626: pop es; aas; xchg eax, esp; ret 0x8910; 
0x000216bc: pop es; ret; 
0x0014369e: pop esi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00136f05: pop esi; add dword ptr [esi], ecx; adc al, 0x41; ret; 
0x000f3e2c: pop esi; lea esi, dword ptr [esi]; ret; 
0x001275e5: pop esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00130f5b: pop esi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x000cf7b6: pop esi; pop ebp; ret 4; 
0x000346a1: pop esi; pop ebp; ret; 
0x000326c5: pop esi; pop edi; pop ebp; ret 4; 
0x00027dfa: pop esi; pop edi; pop ebp; ret; 
0x000cf6bd: pop esi; pop edi; ret 4; 
0x00028275: pop esi; pop edi; ret; 
0x001438e3: pop esi; push cs; or al, 0x41; ret; 
0x000ea8fe: pop esi; ret 0xfff3; 
0x0005fa00: pop esi; ret 4; 
0x000d228e: pop esi; nop; ret; 
0x00027bc6: pop esi; ret; 
0x00128097: pop esp; add ah, al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012e7f1: pop esp; add ah, byte ptr [esi + 0xa]; push cs; or al, 0x41; ret; 
0x001303cd: pop esp; add al, 0xa; push cs; adc al, 0x41; ret; 
0x001441cb: pop esp; add al, byte ptr [edx + 0x41140e0a]; ret; 
0x0013b081: pop esp; add bh, byte ptr [esi + 0xe]; or al, 0x41; ret; 
0x0012c48b: pop esp; add ch, dl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000ee431: pop esp; add dword ptr [eax], eax; add al, ch; mov esi, 0x810001d2; ret; 
0x000e07e2: pop esp; add dword ptr [eax], eax; add al, ch; or eax, 0x810002af; ret; 
0x000e134a: pop esp; add dword ptr [eax], eax; add byte ptr [ecx], dh; rol byte ptr [eax - 0x6bf0f5c8], cl; ret 0x688d; 
0x00136271: pop esp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x000107d9: pop esp; add eax, dword ptr [eax]; ret 0; 
0x0012d57b: pop esp; add ebx, dword ptr [ebx + 2]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0005d02f: pop esp; and al, 4; fld dword ptr [esp + 4]; ret; 
0x0004e052: pop esp; and al, 4; mov eax, dword ptr [esp + 4]; or eax, 0x80000000; ret; 
0x0004e033: pop esp; and al, 4; mov eax, dword ptr [esp + 4]; ret; 
0x000c2f25: pop esp; mov eax, 1; ret; 
0x0012646f: pop esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001276df: pop esp; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00124064: pop esp; pop eax; add al, byte ptr [eax]; ret 0xfc17; 
0x00064a23: pop esp; pop ebx; pop esi; pop edi; ret; 
0x000915b0: pop esp; pop ebx; pop esi; ret; 
0x000d615a: pop esp; pop esi; pop edi; pop ebp; ret; 
0x0012a93f: pop esp; push cs; adc al, 0x41; ret; 
0x0005cfa2: pop esp; ret 0xff2; 
0x000f03b4: pop esp; ret 0xfffc; 
0x00141494: pop esp; ret 1; 
0x00091250: pop esp; aaa; stc; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0007e263: pop esp; cli; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000e0f02: pop esp; hlt; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x00009112: pop ss; add al, ch; outsd dx, dword ptr [esi]; add byte ptr [eax], al; ret 0xcf6; 
0x001428c9: pop ss; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0014c415: pop ss; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x000b21cb: pop ss; idiv edi; add esp, 0x14; pop ebx; ret; 
0x000d5eac: pop ss; jo 0xd5e6b; mov edi, 0x31f289be; ret 0xca31; 
0x000bf0dd: pop ss; mov byte ptr [eax + eax], 0x81; ret; 
0x00084002: pop ss; pop ebx; pop esi; pop edi; ret; 
0x0005d005: punpckldq mm0, mm1; movq qword ptr [esp + 4], xmm0; fild qword ptr [esp + 4]; ret; 
0x0005d004: punpckldq xmm0, xmm1; movq qword ptr [esp + 4], xmm0; fild qword ptr [esp + 4]; ret; 
0x000bab29: push -4; dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; ret 0; 
0x000baafa: push -4; dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; ret; 
0x0004e4e0: push 0x1070890c; mov dword ptr [eax + 0x14], edi; xor eax, eax; ret; 
0x0013847a: push 0x140e0a05; inc ecx; ret; 
0x000a008c: push 0x31000046; rol byte ptr [eax - 0x468bffc6], 0x83; rol byte ptr [ecx], 0x83; ret 0x8b10; 
0x000a1c30: push 0x39000046; ret 0xdf74; 
0x001306f9: push 0x41080e0a; ret; 
0x0012724a: push 0x410c0e0a; ret; 
0x00138bc9: push 0x410c0e7f; ret; 
0x00128607: push 0x41100e0a; ret; 
0x0012959c: push 0x41140e0a; ret; 
0x0004110e: push 0x5d5f5e5b; ret; 
0x000d2345: push 0x74000001; mov byte ptr [0x891c708b], al; ret 0xf089; 
0x001190d6: push 0x76; leave; ret 0x8581; 
0x000fb78c: push 0x810000ff; ret; 
0x000ecb8c: push 0x810001eb; ret; 
0x000ca28c: push 0x81000414; ret; 
0x00077a8c: push 0x8100093c; ret; 
0x00036e8c: push 0x81000d48; ret; 
0x0010b5e7: push 0x830e0310; shl byte ptr [eax], 0x39; ret 0xe977; 
0x000a6700: push 0x890000c0; push eax; adc al, 0x89; ret 0x838d; 
0x001262c0: push 0xa; push cs; adc al, 0x41; ret; 
0x00127e2a: push 0xa; push cs; or al, 0x41; ret; 
0x0012efa0: push 0xa; ret; 
0x00140063: push 0xa012d03; push cs; adc al, 0x41; ret; 
0x0013e59b: push 0xa015803; push cs; adc al, 0x41; ret; 
0x0012b3af: push 0xa016b03; push cs; adc al, 0x41; ret; 
0x0013a3af: push 0xa01f403; push cs; adc al, 0x41; ret; 
0x0013944f: push 0xa02f703; push cs; adc al, 0x41; ret; 
0x0013346b: push 0xa034a03; push cs; adc al, 0x41; ret; 
0x00133903: push 0xa035303; push cs; adc al, 0x41; ret; 
0x001454b3: push 0xa038303; push cs; adc al, 0x41; ret; 
0x00132fd3: push 0xa041203; push cs; adc al, 0x41; ret; 
0x0012cb2b: push 0xa050203; push cs; adc al, 0x41; ret; 
0x00120820: push 0xa4fff29e; ret 0; 
0x00122f70: push 0xa8fff8c0; fld qword ptr [ecx]; add byte ptr [eax], ah; ret 0xfff8; 
0x0010f621: push 0xb2159179; pop es; aas; xchg eax, esp; ret 0x8910; 
0x000f4e36: push 0xc3810001; dec ebx; ret 5; 
0x000e4e3d: push 0xc3810002; inc esp; ret 6; 
0x00074e2f: push 0xc3810009; push edx; ret 0xd; 
0x00064e2a: push 0xc381000a; push edi; ret 0xe; 
0x00034e3a: push 0xc381000d; inc edi; ret 0x11; 
0x000828e2: push 0xc483c031; and al, 0x5b; pop esi; ret; 
0x000e07d4: push 0xc483fff4; add al, 0x5b; ret; 
0x0013d20f: push 0xe; adc al, 0x41; ret; 
0x00126777: push 0xe0a6f02; adc al, 0x41; ret; 
0x0012b71b: push 0xe0a8502; adc al, 0x41; ret; 
0x00144d9f: push 0xe0a8a02; adc al, 0x41; ret; 
0x00126457: push 0xe0ae502; adc al, 0x41; ret; 
0x000b1a7c: push 0xffc55ee9; dec dword ptr [ebx - 0x7c97dbac]; ret 0x8301; 
0x00115a5c: push 0xfffff4c4; ret; 
0x0013f816: push 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013e4a6: push 4; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001302ae: push cs; aam 1; add ebx, dword ptr [0x140e0a01]; inc ecx; ret; 
0x0012d066: push cs; aam 8; add dh, byte ptr [ecx + 0x41140e0a]; ret; 
0x001252e0: push cs; adc al, 0x41; ret; 
0x0012d168: push cs; adc al, 0x5b; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0014ce48: push cs; adc al, 0x5e; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00144efc: push cs; adc al, 0x60; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013b27c: push cs; adc al, 0x63; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00139358: push cs; adc al, 0x67; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013ad5c: push cs; adc al, 0x68; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012b694: push cs; adc al, 0x6a; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00144720: push cs; adc al, 0x6c; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00129008: push cs; adc al, 0x6d; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012cc24: push cs; adc al, 0x6e; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00147a0c: push cs; adc al, 0x6e; push cs; or al, 0x41; ret; 
0x0012de64: push cs; adc al, 0x6f; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00141ecc: push cs; adc al, 0x73; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00134f4c: push cs; adc al, 0x74; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013c23c: push cs; adc al, 0x76; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00141980: push cs; adc al, 0x78; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012552c: push cs; adc al, 0x78; push cs; or al, 0x41; ret; 
0x00134db8: push cs; adc al, 0x7a; push cs; or al, 0x41; ret; 
0x001290c8: push cs; adc al, 0x7b; push cs; or al, 0x41; ret; 
0x00149d44: push cs; adc al, 0x7c; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001431b4: push cs; adc al, 0x7d; push cs; or al, 0x41; ret; 
0x00144e71: push cs; adc al, 0x83; add eax, 0x10a80e46; add dl, byte ptr [eax + 0x41140e0a]; ret; 
0x0012a251: push cs; adc al, 0x83; add eax, 0x10e00e46; add bl, byte ptr [ebp + 0x41140e0a]; ret; 
0x00142c05: push cs; adc al, 0x83; add eax, 0x1840e43; add dh, byte ptr [ebx + 0x41140e0a]; ret; 
0x00133c05: push cs; adc al, 0x83; add eax, 0x1880e43; add cl, byte ptr [eax + 0x41140e0a]; ret; 
0x0013376d: push cs; adc al, 0x83; add eax, 0x1880e43; add cl, byte ptr [ebx + 0x41140e0a]; ret; 
0x00131b49: push cs; adc al, 0x83; add eax, 0x18c0e43; add cl, byte ptr [ebx + 0x41140e0a]; ret; 
0x00148605: push cs; adc al, 0x83; add eax, 0x18c40e46; add al, byte ptr [ebp + 0x41140e0a]; ret; 
0x00131695: push cs; adc al, 0x83; add eax, 0x1a80e46; add cl, byte ptr [esi + 0x41140e0a]; ret; 
0x00141471: push cs; adc al, 0x83; add eax, 0x1b40e46; add bh, byte ptr [esi + 0x41140e0a]; ret; 
0x001348c5: push cs; adc al, 0x83; add eax, 0x1e00e46; add dh, byte ptr [ebp + 0x41140e0a]; ret; 
0x0013c729: push cs; adc al, 0x83; add eax, 0x2200e43; mov eax, dword ptr [0x41140e0a]; ret; 
0x0012ff4d: push cs; adc al, 0x83; add eax, 0x2200e43; or cl, byte ptr [0x4114]; ret; 
0x0012b451: push cs; adc al, 0x83; add eax, 0x2200e43; push 0x41140e0a; ret; 
0x0012c00d: push cs; adc al, 0x83; add eax, 0x2200e43; ret 0xe0a; 
0x0014b511: push cs; adc al, 0x83; add eax, 0x2240e43; mov al, byte ptr [0x41140e0a]; ret; 
0x001431e5: push cs; adc al, 0x83; add eax, 0x2240e43; mov eax, dword ptr [0x41140e0a]; ret; 
0x0013ebd1: push cs; adc al, 0x83; add eax, 0x2240e43; mov ebx, 0x41140e0a; ret; 
0x001468bd: push cs; adc al, 0x83; add eax, 0x2240e43; mov ecx, 0x41140e0a; ret; 
0x0014a939: push cs; adc al, 0x83; add eax, 0x2240e43; mov edx, 0x41140e0a; ret; 
0x00149189: push cs; adc al, 0x83; add eax, 0x2240e43; or cl, byte ptr [0x4114]; ret; 
0x00138625: push cs; adc al, 0x83; add eax, 0x2280e43; mov byte ptr [0x41140e0a], al; ret; 
0x00134411: push cs; adc al, 0x83; add eax, 0x2280e43; mov dword ptr [0x41140e0a], eax; ret; 
0x00142c45: push cs; adc al, 0x83; add eax, 0x2280e43; mov ebp, 0x41140e0a; ret; 
0x00131745: push cs; adc al, 0x83; add eax, 0x2280e43; mov edi, 0x41140e0a; ret; 
0x0013ae19: push cs; adc al, 0x83; add eax, 0x2280e43; or cl, byte ptr [0x4114]; ret; 
0x00144a05: push cs; adc al, 0x83; add eax, 0x2280e43; push 0x41140e0a; ret; 
0x0013b401: push cs; adc al, 0x83; add eax, 0x2280e43; ret 0xe0a; 
0x0013cf81: push cs; adc al, 0x83; add eax, 0x22c0e43; mov esi, 0x41140e0a; ret; 
0x001279e5: push cs; adc al, 0x83; add eax, 0x22c0e43; mov esp, 0x41140e0a; ret; 
0x001496d1: push cs; adc al, 0x83; add eax, 0x22d80e46; add bh, byte ptr [eax + 0x41140e0a]; ret; 
0x0014bc25: push cs; adc al, 0x83; add eax, 0x2300e43; mov edi, 0x41140e0a; ret; 
0x00134ce1: push cs; adc al, 0x83; add eax, 0x2300e43; mov esi, 0x41140e0a; ret; 
0x0012d991: push cs; adc al, 0x83; add eax, 0x2300e43; ret 0xe0a; 
0x001451cd: push cs; adc al, 0x83; add eax, 0x2380e43; mov al, byte ptr [0x41140e0a]; ret; 
0x0014cbc9: push cs; adc al, 0x83; add eax, 0x2380e43; mov byte ptr [0x41140e0a], al; ret; 
0x001292ad: push cs; adc al, 0x83; add eax, 0x23c0e43; mov ebp, 0x41140e0a; ret; 
0x00127ab9: push cs; adc al, 0x83; add eax, 0x23c0e43; ret 0xe0a; 
0x00136a55: push cs; adc al, 0x83; add eax, 0x2400e43; mov edx, 0x41140e0a; ret; 
0x0013f5dd: push cs; adc al, 0x83; add eax, 0x2440e43; mov esi, 0x41140e0a; ret; 
0x00145585: push cs; adc al, 0x83; add eax, 0x2440e43; mov esp, 0x41140e0a; ret; 
0x00136b95: push cs; adc al, 0x83; add eax, 0x2440e43; ret 0xe0a; 
0x00125af9: push cs; adc al, 0x83; add eax, 0x2480e43; mov edi, 0x41140e0a; ret; 
0x0012a53d: push cs; adc al, 0x83; add eax, 0x2500e43; ret; 
0x00137ffd: push cs; adc al, 0x83; add eax, 0x2580e43; ret 0xe0a; 
0x0014c171: push cs; adc al, 0x83; add eax, 0x2780e43; mov eax, dword ptr [0x41140e0a]; ret; 
0x0014a8f9: push cs; adc al, 0x83; add eax, 0x2900e46; add al, byte ptr [edx + 0x41140e0a]; ret; 
0x00146d9d: push cs; adc al, 0x83; add eax, 0x2b00e46; add dl, byte ptr [ebx + 0x41140e0a]; ret; 
0x00127369: push cs; adc al, 0x83; add eax, 0x2c40e46; add bh, byte ptr [esi + 0x41140e0a]; ret; 
0x0014c48d: push cs; adc al, 0x83; add eax, 0x3300e43; imul eax, dword ptr [ecx], 0x41140e0a; ret; 
0x00139f95: push cs; adc al, 0x83; add eax, 0x3300e43; test dword ptr [ecx], 0x41140e0a; ret; 
0x0013cb09: push cs; adc al, 0x83; add eax, 0x3340e43; mov dword ptr [ecx], 0x41140e0a; ret; 
0x001303ad: push cs; adc al, 0x83; add eax, 0x3480e43; ret 0xa02; 
0x0012e2c9: push cs; adc al, 0x83; add eax, 0x4c80e46; add al, byte ptr [ebx + 0x41140e0a]; ret; 
0x001425cd: push cs; adc al, 0x83; add eax, 0x4c80e46; add dl, byte ptr [edx + 0x41140e0a]; ret; 
0x00143eb1: push cs; adc al, 0x83; add eax, 0x8b00e46; add al, byte ptr [eax + 0x41140e0a]; ret; 
0x00143dfd: push cs; adc al, 0x83; add eax, 0x8b40e46; add dl, byte ptr [ebp + 0x41140e0a]; ret; 
0x00142779: push cs; adc al, 0x83; add eax, 0x8c80e46; add ch, byte ptr [ecx + 0x41140e0a]; ret; 
0x0012d061: push cs; adc al, 0x83; add eax, 0x8d40e46; add dh, byte ptr [ecx + 0x41140e0a]; ret; 
0x001487f5: push cs; adc al, 0x83; add eax, 0x8e00e46; add al, byte ptr [edi + 0x41140e0a]; ret; 
0x0014856d: push cs; adc al, 0x83; add eax, 0x8e00e46; add cl, byte ptr [ecx + 0x41140e0a]; ret; 
0x00143c6d: push cs; adc al, 0x83; add eax, 0xa028d03; ret; 
0x001452a9: push cs; adc al, 0x83; add eax, 0xadc0e46; add dh, byte ptr [edx + 0x41140e0a]; ret; 
0x0012d0d8: push cs; adc byte ptr [eax + 0xa], bh; push cs; or al, 0x41; ret; 
0x0013e254: push cs; adc byte ptr [eax + 0xe], bh; or al, 0x41; ret; 
0x001438b4: push cs; adc byte ptr [eax + 0xe], ch; or al, 0x41; ret; 
0x00129034: push cs; adc byte ptr [ebp + 0xa], ah; push cs; or al, 0x41; ret; 
0x00141f78: push cs; adc byte ptr [ebp + 0xa], ch; push cs; or al, 0x41; ret; 
0x0012c500: push cs; adc byte ptr [ebp + 0xe], ch; or al, 0x41; ret; 
0x00130fd4: push cs; adc byte ptr [ebp + 0xe], dh; or al, 0x41; ret; 
0x0013f574: push cs; adc byte ptr [ebx + 0x140e4304], al; add al, byte ptr [edi + 0x41100e0a]; ret; 
0x0012b298: push cs; adc byte ptr [ebx + 0x140e4304], al; imul ecx, dword ptr [esi], 0x10; inc ecx; ret; 
0x00128600: push cs; adc byte ptr [ebx + 0x140e4304], al; push 0x41100e0a; ret; 
0x00144508: push cs; adc byte ptr [ebx + 0x180e4304], al; add al, byte ptr [ebp + 0x41100e0a]; ret; 
0x00147634: push cs; adc byte ptr [ebx + 0x180e4304], al; add ch, byte ptr [eax + 0x41100e0a]; ret; 
0x0012e598: push cs; adc byte ptr [ebx + 0x200e4304], al; add ah, byte ptr [esi + 0x41100e0a]; ret; 
0x0012ca6c: push cs; adc byte ptr [ebx + 0x200e4304], al; add al, byte ptr [ebp + 0x41100e0a]; ret; 
0x0014ca74: push cs; adc byte ptr [ebx + 0x200e4304], al; add al, byte ptr [ecx + 0x41100e0a]; ret; 
0x0013e09c: push cs; adc byte ptr [ebx + 0x200e4304], al; add bh, byte ptr [eax + 0x41100e0a]; ret; 
0x0012e750: push cs; adc byte ptr [ebx + 0x200e4304], al; add bl, byte ptr [edi + 0x41100e0a]; ret; 
0x0014b258: push cs; adc byte ptr [ebx + 0x200e4304], al; add ch, byte ptr [edi + 0x41100e0a]; ret; 
0x0013ed68: push cs; adc byte ptr [ebx + 0x200e4304], al; add cl, byte ptr [edx + 0x41100e0a]; ret; 
0x0013e4f4: push cs; adc byte ptr [ebx + 0x240e4304], al; add al, byte ptr [edi + 0x41100e0a]; ret; 
0x00128798: push cs; adc byte ptr [ebx + 0x240e4304], al; add al, byte ptr [esi + 0x41100e0a]; ret; 
0x00142608: push cs; adc byte ptr [ebx + 0x240e4304], al; add bl, byte ptr [esi + ecx + 0x10]; inc ecx; ret; 
0x0014c97c: push cs; adc byte ptr [ebx + 0x240e4304], al; add dl, byte ptr [edi + 0x41100e0a]; ret; 
0x00140e44: push cs; adc byte ptr [ebx + 0x240e4304], al; or cl, byte ptr [0x4110]; ret; 
0x00125820: push cs; adc byte ptr [ebx + 0x280e4304], al; add ah, byte ptr [esi + ecx + 0x10]; inc ecx; ret; 
0x0012f9b0: push cs; adc byte ptr [ebx + 0x2c0e4304], al; add bl, byte ptr [esi + ecx + 0x10]; inc ecx; ret; 
0x001355f4: push cs; adc byte ptr [ebx + 0x340e4304], al; add ah, byte ptr [esi + 0x41100e0a]; ret; 
0x00128fb0: push cs; adc byte ptr [ebx + 0x340e4304], al; add bh, byte ptr [edx + 0x41100e0a]; ret; 
0x00147e14: push cs; adc byte ptr [ebx + 0x380e4304], al; add al, byte ptr [ebp + 0x41100e0a]; ret; 
0x00138080: push cs; adc byte ptr [ebx + 0x3c0e4304], al; add dl, byte ptr [eax + 0x41100e0a]; ret; 
0x001253d0: push cs; adc byte ptr [ebx + 0x440e4304], al; add bl, byte ptr [esi + 0x41100e0a]; ret; 
0x00130bac: push cs; adc byte ptr [ebx + 0x4c0e4304], al; add al, byte ptr [ebx + 0x41100e0a]; ret; 
0x00130cb0: push cs; adc byte ptr [ebx + 0x500e4304], al; add cl, byte ptr [ebx + 0x41100e0a]; ret; 
0x0014bcf0: push cs; adc byte ptr [ebx + 0xa500204], al; ret; 
0x00143bcc: push cs; adc byte ptr [ebx + 0xa590204], al; ret; 
0x00146e48: push cs; adc byte ptr [ebx + 0xa5d0204], al; ret; 
0x0013875c: push cs; adc byte ptr [ebx + 0xa8f0204], al; ret; 
0x0013df4c: push cs; adc byte ptr [ebx + 0xa], bh; push cs; or al, 0x41; ret; 
0x00142080: push cs; adc byte ptr [ebx + 0xaa00204], al; ret; 
0x00142220: push cs; adc byte ptr [ebx + 0xaf60204], al; ret; 
0x00128e08: push cs; adc byte ptr [ebx + 0xe], bh; or al, 0x41; ret; 
0x001304e0: push cs; adc byte ptr [ebx + 0xe], ch; or al, 0x41; ret; 
0x00140798: push cs; adc byte ptr [ebx + 0xe], dh; or al, 0x41; ret; 
0x00143850: push cs; adc byte ptr [ecx + 0xa], bh; push cs; or al, 0x41; ret; 
0x001275ac: push cs; adc byte ptr [ecx + 0xe], ch; or al, 0x41; ret; 
0x0013d3fc: push cs; adc byte ptr [edi + 0xa], ah; push cs; or al, 0x41; ret; 
0x00141408: push cs; adc byte ptr [edi + 0xa], ch; push cs; or al, 0x41; ret; 
0x00148bdc: push cs; adc byte ptr [edi + 0xe], ah; or al, 0x41; ret; 
0x001276b0: push cs; adc byte ptr [edi + 0xe], ch; or al, 0x41; ret; 
0x00141b50: push cs; adc byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x0013cf04: push cs; adc byte ptr [edx + 0xa], bh; push cs; or al, 0x41; ret; 
0x00134de4: push cs; adc byte ptr [edx + 0xe], dh; or al, 0x41; ret; 
0x00147a98: push cs; adc byte ptr [edx + ecx + 0xe], bh; or al, 0x41; ret; 
0x00129154: push cs; adc byte ptr [edx + ecx + 0xe], bl; or al, 0x41; ret; 
0x00142dcc: push cs; adc byte ptr [edx], al; mov byte ptr [esi], cl; or al, 0x41; ret; 
0x0013ccf0: push cs; adc byte ptr [edx], al; push cs; or al, 0x41; ret; 
0x0012a378: push cs; adc byte ptr [esi + 0x140e4104], al; add dword ptr [0x9a40e46], 3; ret 0xa02; 
0x0012e1fc: push cs; adc byte ptr [esi + 0xa], bh; push cs; or al, 0x41; ret; 
0x00144f54: push cs; adc byte ptr [esi + 0xe], ah; or al, 0x41; ret; 
0x0013efb4: push cs; adc byte ptr [esi + 0xe], ch; or al, 0x41; ret; 
0x00128b74: push cs; adc byte ptr [esi + 0xe], dh; or al, 0x41; ret; 
0x0012749f: push cs; adc byte ptr [esi + ecx + 8], ah; inc ecx; ret; 
0x001414fe: push cs; add al, 0x3c; add byte ptr [eax], al; add ah, cl; ret 1; 
0x00146e58: push cs; add al, 0x41; or eax, dword ptr [ebp + 0xa]; ret; 
0x00125747: push cs; add al, 0x41; or eax, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x0012c0e9: push cs; add al, 0x41; or eax, dword ptr [ebp + 0xe]; or al, 0x41; ret; 
0x0013fd55: push cs; add al, 0x41; or eax, dword ptr [ebx + 0xa]; ret; 
0x00141b79: push cs; add al, 0x41; or eax, dword ptr [edi + 0xa]; ret; 
0x0014068b: push cs; add al, 0x41; or eax, dword ptr [edi + 0xe]; adc al, 0x41; ret; 
0x00128c09: push cs; add al, 0x41; or eax, dword ptr [edi + 0xe]; or al, 0x41; ret; 
0x00126e69: push cs; add al, 0x41; or eax, dword ptr [edx]; call 0x41267c7d; ret; 
0x0012b16c: push cs; add al, 0x41; or eax, dword ptr [edx]; mov al, byte ptr [0x41140e0a]; ret; 
0x0012b4c0: push cs; add al, 0x41; or eax, dword ptr [edx]; mov byte ptr [0x41140e0a], al; ret; 
0x001328f8: push cs; add al, 0x41; or eax, dword ptr [edx]; mov dword ptr [0x41140e0a], eax; ret; 
0x0013314a: push cs; add al, 0x41; or eax, dword ptr [edx]; mov eax, 0x41140e0a; ret; 
0x0014cdf5: push cs; add al, 0x41; or eax, dword ptr [edx]; mov ebp, 0x41100e0a; ret; 
0x00133a7a: push cs; add al, 0x41; or eax, dword ptr [edx]; mov ebp, 0x41140e0a; ret; 
0x00142150: push cs; add al, 0x41; or eax, dword ptr [edx]; mov ebx, 0x41140e0a; ret; 
0x001335e2: push cs; add al, 0x41; or eax, dword ptr [edx]; mov ecx, 0x41140e0a; ret; 
0x00127b9b: push cs; add al, 0x41; or eax, dword ptr [edx]; mov edi, 0x41140e0a; ret; 
0x00133f12: push cs; add al, 0x41; or eax, dword ptr [edx]; mov edx, 0x41140e0a; ret; 
0x0013784f: push cs; add al, 0x41; or eax, dword ptr [edx]; mov esp, 0x41140e0a; ret; 
0x001366a3: push cs; add al, 0x41; or eax, dword ptr [edx]; or cl, byte ptr [0x4114]; ret; 
0x00129597: push cs; add al, 0x41; or eax, dword ptr [edx]; push 0x41140e0a; ret; 
0x0013876c: push cs; add al, 0x41; or eax, dword ptr [edx]; push esi; ret; 
0x0014bea8: push cs; add al, 0x41; or eax, dword ptr [edx]; test eax, 0x41140e0a; ret; 
0x0012fa97: push cs; add al, 0x41; or eax, dword ptr [edx]; ret; 
0x001424f7: push cs; add al, 0x41; or ebp, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x0012e253: push cs; add al, 0x41; or ebp, dword ptr [ebx + 0xa]; ret; 
0x0012cc30: push cs; add al, 0x41; or ebp, dword ptr [ecx + 0xe]; or al, 0x41; ret; 
0x0013d20b: push cs; add al, 0x41; or ebp, dword ptr [edx + 0xe]; adc al, 0x41; ret; 
0x001275f7: push cs; add al, 0x41; or ebp, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x00125dcf: push cs; add al, 0x41; or ebp, dword ptr [esi + 0xa]; ret; 
0x0012c630: push cs; add al, 0x41; or ebp, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x00143889: push cs; add al, 0x41; or ebx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x0012fd94: push cs; add al, 0x41; or ebx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x0014472c: push cs; add al, 0x41; or ebx, dword ptr [ebp + 0xe]; or al, 0x41; ret; 
0x0014c8ed: push cs; add al, 0x41; or ebx, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x00148118: push cs; add al, 0x41; or ebx, dword ptr [ebx + 0xe]; or al, 0x41; ret; 
0x001447d3: push cs; add al, 0x41; or ebx, dword ptr [ecx + 0xe]; adc al, 0x41; ret; 
0x0012c683: push cs; add al, 0x41; or ebx, dword ptr [edi + 0xe]; adc al, 0x41; ret; 
0x001388f8: push cs; add al, 0x41; or ebx, dword ptr [edx + 0xe]; adc al, 0x41; ret; 
0x0012646b: push cs; add al, 0x41; or ebx, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0012a93b: push cs; add al, 0x41; or ebx, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x0012535c: push cs; add al, 0x41; or ecx, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x0012d0f2: push cs; add al, 0x41; or ecx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x0014b497: push cs; add al, 0x41; or ecx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x00149df4: push cs; add al, 0x41; or ecx, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x0012e7fd: push cs; add al, 0x41; or ecx, dword ptr [ebx + 0xe]; or al, 0x41; ret; 
0x00130025: push cs; add al, 0x41; or ecx, dword ptr [ecx + 0xa]; ret; 
0x0012e680: push cs; add al, 0x41; or ecx, dword ptr [ecx + 0xe]; or al, 0x41; ret; 
0x00132584: push cs; add al, 0x41; or ecx, dword ptr [edi + 0xe]; adc al, 0x41; ret; 
0x00140b70: push cs; add al, 0x41; or ecx, dword ptr [edi + 0xe]; or al, 0x41; ret; 
0x0013ac5a: push cs; add al, 0x41; or ecx, dword ptr [edx + 0xe]; adc al, 0x41; ret; 
0x00132dbf: push cs; add al, 0x41; or ecx, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0012a0e3: push cs; add al, 0x41; or ecx, dword ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x00143e77: push cs; add al, 0x41; or ecx, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x0013d408: push cs; add al, 0x41; or ecx, dword ptr [esi + ecx + 0xc]; inc ecx; ret; 
0x0013dca4: push cs; add al, 0x41; or edi, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x0014045b: push cs; add al, 0x41; or edi, dword ptr [ecx + 0xe]; adc al, 0x41; ret; 
0x00127eb3: push cs; add al, 0x41; or edi, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0014abed: push cs; add al, 0x41; or edi, dword ptr [esi + 0xe]; adc al, 0x41; ret; 
0x00143f0b: push cs; add al, 0x41; or edx, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x00130f2c: push cs; add al, 0x41; or edx, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x0012a093: push cs; add al, 0x41; or edx, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x0014c951: push cs; add al, 0x41; or edx, dword ptr [ebp + 0xe]; or al, 0x41; ret; 
0x00141b87: push cs; add al, 0x41; or edx, dword ptr [ebx + 0xa]; ret; 
0x0013838d: push cs; add al, 0x41; or edx, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x00130bf1: push cs; add al, 0x41; or edx, dword ptr [ebx + 0xe]; or al, 0x41; ret; 
0x00146e67: push cs; add al, 0x41; or edx, dword ptr [ecx + 0xa]; ret; 
0x0012e216: push cs; add al, 0x41; or edx, dword ptr [ecx + 0xe]; or al, 0x41; ret; 
0x00125b8d: push cs; add al, 0x41; or edx, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0012b5c8: push cs; add al, 0x41; or edx, dword ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x0014492d: push cs; add al, 0x41; or edx, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x0013cf10: push cs; add al, 0x41; or edx, dword ptr [esi + ecx + 0xc]; inc ecx; ret; 
0x00128ccf: push cs; add al, 0x41; or edx, dword ptr [esi + ecx + 8]; inc ecx; ret; 
0x00128877: push cs; add al, 0x41; or esi, dword ptr [eax + 0xe]; adc al, 0x41; ret; 
0x00126188: push cs; add al, 0x41; or esi, dword ptr [eax + 0xe]; or al, 0x41; ret; 
0x00143a90: push cs; add al, 0x41; or esi, dword ptr [ebp + 0xe]; or al, 0x41; ret; 
0x00139513: push cs; add al, 0x41; or esi, dword ptr [ebx + 0xe]; adc al, 0x41; ret; 
0x0013dcee: push cs; add al, 0x41; or esi, dword ptr [ecx + 0xa]; ret; 
0x00143ffd: push cs; add al, 0x41; or esi, dword ptr [ecx + 0xe]; or al, 0x41; ret; 
0x00127dfc: push cs; add al, 0x41; or esi, dword ptr [edi + 0xe]; or al, 0x41; ret; 
0x0012c1a1: push cs; add al, 0x41; or esi, dword ptr [edx + 0xe]; or al, 0x41; ret; 
0x00138377: push cs; add al, 0x41; or esi, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0014bb58: push cs; add al, 0x41; or esi, dword ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x001260ec: push cs; add al, 0x41; or esi, dword ptr [esi + 0xe]; or al, 0x41; ret; 
0x0014b9c0: push cs; add al, 0x41; or esi, dword ptr [esi + ecx + 8]; inc ecx; ret; 
0x00138d13: push cs; add al, 0x41; or esp, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x0013dcdf: push cs; add al, 0x41; or esp, dword ptr [edi + 0xa]; ret; 
0x00148226: push cs; add al, 0x41; or esp, dword ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0012a8e7: push cs; add al, 0x41; or esp, dword ptr [esi + ecx + 0x14]; inc ecx; ret; 
0x00139364: push cs; add al, 0x41; or esp, dword ptr [esi + ecx + 0xc]; inc ecx; ret; 
0x00129911: push cs; add al, 0x45; or eax, dword ptr [edx]; ret 0xe0a; 
0x0014bd00: push cs; add al, 0x45; or ebx, dword ptr [ebx + 0xa]; ret; 
0x0014791f: push cs; add al, 0x45; or ecx, dword ptr [edx + 0xe]; or al, 0x41; ret; 
0x00129928: push cs; add al, 0x45; or esp, dword ptr [ebp + 0xe]; adc al, 0x41; ret; 
0x0013b945: push cs; add al, 0xa; ret; 
0x0013f3a2: push cs; add bl, byte ptr fs:[eax + 0x41140e0a]; ret; 
0x0000657a: push cs; add byte ptr [eax + eax + 0x120000], al; or byte ptr [eax], al; ret 0; 
0x000104fa: push cs; add byte ptr [eax + eax + 0x220000], cl; or byte ptr [eax], al; ret 0x34; 
0x00067299: push cs; add byte ptr [ebx - 0x76dbdbbc], cl; ret 0xe283; 
0x0003e786: push cs; add byte ptr [ecx + 0x10c483f0], cl; pop ebx; pop esi; ret; 
0x0012acc6: push cs; add byte ptr [ecx], 2; imul ecx, dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x00136182: push cs; add ch, byte ptr fs:[ecx + 0xa]; push cs; adc al, 0x41; ret; 
0x0014b1a5: push cs; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x000c876c: push cs; add dword ptr [eax], eax; add byte ptr [ebx + 0x2bf883], cl; add byte ptr [ecx - 0x2d17dbfc], cl; ret; 
0x0014ba09: push cs; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0012e562: push cs; add ebx, dword ptr fs:[esi + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012d5e0: push cs; and al, 0x66; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001262be: push cs; and al, 0x6a; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00145dfa: push cs; and al, 0x6d; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129df4: push cs; and al, 0x73; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012d6ac: push cs; and al, 0x76; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001383ca: push cs; and al, 0x77; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014910e: push cs; and al, 0x78; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00147c9a: push cs; and al, 0x7a; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129eb6: push cs; and al, 0x7e; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014032e: push cs; and al, 0x7f; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014b516: push cs; and al, 2; mov al, byte ptr [0x41140e0a]; ret; 
0x001431ea: push cs; and al, 2; mov eax, dword ptr [0x41140e0a]; ret; 
0x0013ebd6: push cs; and al, 2; mov ebx, 0x41140e0a; ret; 
0x001468c2: push cs; and al, 2; mov ecx, 0x41140e0a; ret; 
0x0014a93e: push cs; and al, 2; mov edx, 0x41140e0a; ret; 
0x0013c2ee: push cs; and al, 2; or byte ptr [edx], 0xe; adc al, 0x41; ret; 
0x0014918e: push cs; and al, 2; or cl, byte ptr [0x4114]; ret; 
0x00125abe: push cs; and al, 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001490ce: push cs; and al, 2; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x00129caa: push cs; and al, 2; or cl, byte ptr gs:[esi]; adc al, 0x41; ret; 
0x0012bf9a: push cs; and al, 2; or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x0013aedc: push cs; and al, 2; push 0x410c0e0a; ret; 
0x0012a1fc: push cs; and byte ptr [eax + 0xa], bh; push cs; or al, 0x41; ret; 
0x0013d878: push cs; and byte ptr [eax + 0xa], ch; push cs; or al, 0x41; ret; 
0x001382b2: push cs; and byte ptr [eax + 0xa], dh; push cs; adc al, 0x41; ret; 
0x00138b78: push cs; and byte ptr [eax + 0xe], bh; or al, 0x41; ret; 
0x0014c1b6: push cs; and byte ptr [ebp + 0xa], ah; push cs; adc al, 0x41; ret; 
0x00130c40: push cs; and byte ptr [ebx + 0xa], bh; push cs; or al, 0x41; ret; 
0x0014396e: push cs; and byte ptr [ebx], al; mov al, byte ptr [0x140e0a01]; inc ecx; ret; 
0x00128400: push cs; and byte ptr [edi + 0xa], bh; push cs; or al, 0x41; ret; 
0x00125f24: push cs; and byte ptr [edi + 0xa], dh; push cs; or al, 0x41; ret; 
0x00125fac: push cs; and byte ptr [edx + ecx + 0xe], bh; or al, 0x41; ret; 
0x00135820: push cs; and byte ptr [edx + ecx + 0xe], dh; or al, 0x41; ret; 
0x0013e0a1: push cs; and byte ptr [edx], al; mov eax, 0x41100e0a; ret; 
0x0013c72e: push cs; and byte ptr [edx], al; mov eax, dword ptr [0x41140e0a]; ret; 
0x0012ff52: push cs; and byte ptr [edx], al; or cl, byte ptr [0x4114]; ret; 
0x001437aa: push cs; and byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00143004: push cs; and byte ptr [edx], al; or cl, byte ptr fs:[esi]; or al, 0x41; ret; 
0x0012b456: push cs; and byte ptr [edx], al; push 0x41140e0a; ret; 
0x00134e4e: push cs; and byte ptr [edx], al; push cs; adc al, 0x41; ret; 
0x0012c012: push cs; and byte ptr [edx], al; ret 0xe0a; 
0x0014bf9a: push cs; and byte ptr [edx], al; test byte ptr [edx], 0xe; adc al, 0x41; ret; 
0x0012b5bc: push cs; and byte ptr [esi + 0xa], bh; push cs; or al, 0x41; ret; 
0x001343a8: push cs; and byte ptr [esi + 0xa], dh; push cs; or al, 0x41; ret; 
0x0014893e: push cs; call 0xa9b8b4c; push cs; adc al, 0x41; ret; 
0x001389d2: push cs; call 0xadf8be8; push cs; adc al, 0x41; ret; 
0x0013e606: push cs; cmp al, 0x6c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00137636: push cs; cmp al, 0x74; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001292b2: push cs; cmp al, 2; mov ebp, 0x41140e0a; ret; 
0x0012baba: push cs; cmp al, 2; or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x00127abe: push cs; cmp al, 2; ret 0xe0a; 
0x001470a2: push cs; cmp byte ptr [ebx], al; and eax, 0x140e0a01; inc ecx; ret; 
0x0013c7d2: push cs; cmp byte ptr [ebx], al; mov dword ptr [0x140e0a01], eax; inc ecx; ret; 
0x00136586: push cs; cmp byte ptr [ebx], al; or eax, 0x140e0a01; inc ecx; ret; 
0x001452ee: push cs; cmp byte ptr [ebx], al; sbb eax, 0x140e0a01; inc ecx; ret; 
0x001451d2: push cs; cmp byte ptr [edx], al; mov al, byte ptr [0x41140e0a]; ret; 
0x0014cbce: push cs; cmp byte ptr [edx], al; mov byte ptr [0x41140e0a], al; ret; 
0x0012ed3a: push cs; cmp byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126926: push cs; cmp byte ptr [edx], al; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x0012ac46: push cs; cmp byte ptr [edx], al; or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x00129966: push cs; dec eax; add ah, byte ptr [ebp + 0x41140e0a]; ret; 
0x0014cea4: push cs; dec eax; add al, byte ptr [edi + 0x410c0e0a]; ret; 
0x0012b8ea: push cs; dec eax; add al, byte ptr [edx + 0x41140e0a]; ret; 
0x00125afe: push cs; dec eax; add bh, byte ptr [edi + 0x41140e0a]; ret; 
0x0013b0d4: push cs; dec eax; add bl, byte ptr [esi + 0x410c0e0a]; ret; 
0x0014560a: push cs; dec eax; add cl, byte ptr [edi + 0x41140e0a]; ret; 
0x0013668e: push cs; dec eax; add dh, byte ptr [eax + 0x41140e0a]; ret; 
0x00127afe: push cs; dec eax; add esi, dword ptr [ebp + 0x140e0a01]; inc ecx; ret; 
0x0013faf8: push cs; dec esp; add ah, byte ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x0013768e: push cs; dec esp; add ah, byte ptr [esi + 0x41140e0a]; ret; 
0x00130bb1: push cs; dec esp; add al, byte ptr [ebx + 0x41100e0a]; ret; 
0x001449ae: push cs; dec esp; add bl, byte ptr [ebx + 0x41140e0a]; ret; 
0x00135eb2: push cs; dec esp; add ch, byte ptr [edi + 0x41140e0a]; ret; 
0x00135ef2: push cs; dec esp; add dh, byte ptr [eax + 0x41140e0a]; ret; 
0x0013fb28: push cs; dec esp; add dl, byte ptr [edx + ecx + 0xe]; or al, 0x41; ret; 
0x001297ae: push cs; dec esp; add ebp, dword ptr [edi + 0x140e0a06]; inc ecx; ret; 
0x0014bc8a: push cs; dec esp; add esi, dword ptr [ebp + 0x140e0a01]; inc ecx; ret; 
0x001452ae: push cs; fmul qword ptr [edx]; add dh, byte ptr [edx + 0x41140e0a]; ret; 
0x001496d6: push cs; fsub dword ptr [edx]; add bh, byte ptr [eax + 0x41140e0a]; ret; 
0x0012d7b2: push cs; in al, 9; add ecx, dword ptr [ebp + 0x140e0a03]; inc ecx; ret; 
0x001291b2: push cs; inc eax; add ah, byte ptr [esi + 0x41140e0a]; ret; 
0x00136a5a: push cs; inc eax; add bh, byte ptr [edx + 0x41140e0a]; ret; 
0x0013e55a: push cs; inc eax; add bl, byte ptr [ebx + 0x41140e0a]; ret; 
0x0012ab0c: push cs; inc esp; add ah, byte ptr [ebx + 0x410c0e0a]; ret; 
0x0014c03a: push cs; inc esp; add al, byte ptr [ebx + 0x41140e0a]; ret; 
0x0012b9d2: push cs; inc esp; add al, byte ptr [edx + 0x41140e0a]; ret; 
0x0013f5e2: push cs; inc esp; add bh, byte ptr [esi + 0x41140e0a]; ret; 
0x00137eba: push cs; inc esp; add bl, byte ptr [ebp + 0x41140e0a]; ret; 
0x001253d5: push cs; inc esp; add bl, byte ptr [esi + 0x41100e0a]; ret; 
0x0013653b: push cs; inc esp; add dl, byte ptr [edx + 0x41080e0a]; ret; 
0x00147b2a: push cs; inc esp; add ebp, dword ptr [edx + 0x140e0a01]; inc ecx; ret; 
0x00131302: push cs; insb byte ptr es:[edi], dx; add bl, byte ptr [eax + 0x41140e0a]; ret; 
0x0014322a: push cs; insb byte ptr es:[edi], dx; add ch, byte ptr [eax + 0x41140e0a]; ret; 
0x0013f0f2: push cs; insb byte ptr es:[edi], dx; add ecx, dword ptr [edi + 0x140e0a01]; inc ecx; ret; 
0x000dfdaa: push cs; lea eax, dword ptr [ecx - 0x3620d]; ret; 
0x00138476: push cs; lock or byte ptr [ebx], al; push 0x140e0a05; inc ecx; ret; 
0x0013fc7e: push cs; mov ah, 0xa; add esi, dword ptr [edi + 0x140e0a01]; inc ecx; ret; 
0x00141476: push cs; mov ah, 1; add bh, byte ptr [esi + 0x41140e0a]; ret; 
0x00143e02: push cs; mov ah, 8; add dl, byte ptr [ebp + 0x41140e0a]; ret; 
0x0012db2e: push cs; mov al, 1; add eax, dword ptr [esi + 0x140e0a02]; inc ecx; ret; 
0x00146da2: push cs; mov al, 2; add dl, byte ptr [ebx + 0x41140e0a]; ret; 
0x0012b222: push cs; mov al, 2; add edi, dword ptr [ecx + 0x140e0a01]; inc ecx; ret; 
0x00143eb6: push cs; mov al, 8; add al, byte ptr [eax + 0x41140e0a]; ret; 
0x00142b82: push cs; mov al, 8; add ecx, dword ptr [edi + 0x140e0a01]; inc ecx; ret; 
0x0012b92a: push cs; mov al, byte ptr [0x1be030a]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013256e: push cs; mov al, byte ptr [0xa580201]; push cs; adc al, 0x41; ret; 
0x00142592: push cs; mov al, byte ptr [0xa670201]; push cs; adc al, 0x41; ret; 
0x001416fc: push cs; mov al, byte ptr [0xa6b0201]; push cs; or al, 0x41; ret; 
0x001257aa: push cs; mov al, byte ptr [0xa7f0201]; push cs; adc al, 0x41; ret; 
0x0013217a: push cs; mov al, byte ptr [0xa810204]; push cs; adc al, 0x41; ret; 
0x0014b2ce: push cs; mov al, byte ptr [0xa890201]; push cs; adc al, 0x41; ret; 
0x0013b45e: push cs; mov al, byte ptr [0xab10201]; push cs; adc al, 0x41; ret; 
0x00135a5e: push cs; mov al, byte ptr [0xabd0202]; push cs; adc al, 0x41; ret; 
0x0014ca16: push cs; mov al, byte ptr [0xacb0201]; push cs; adc al, 0x41; ret; 
0x0012b75a: push cs; mov byte ptr [ebx], cl; add edi, dword ptr [esi + 0x140e0a01]; inc ecx; ret; 
0x00133c0a: push cs; mov byte ptr [ecx], al; add cl, byte ptr [eax + 0x41140e0a]; ret; 
0x00133772: push cs; mov byte ptr [ecx], al; add cl, byte ptr [ebx + 0x41140e0a]; ret; 
0x00138516: push cs; mov eax, 0x2080310; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013830a: push cs; mov eax, 0x2a10311; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00148d5e: push cs; mov eax, 0xa690208; push cs; adc al, 0x41; ret; 
0x00142846: push cs; mov eax, 0xaa90206; push cs; adc al, 0x41; ret; 
0x0012aa3e: push cs; mov eax, 0xae10208; push cs; adc al, 0x41; ret; 
0x0012d892: push cs; mov eax, 0xafc0210; push cs; adc al, 0x41; ret; 
0x00142b3e: push cs; mov esp, 0x12d0308; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013a76a: push cs; mov esp, 0x21c0308; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013c18e: push cs; mov esp, 0xa700210; push cs; adc al, 0x41; ret; 
0x00138f62: push cs; mov esp, 0xa7c0204; push cs; adc al, 0x41; ret; 
0x0014308e: push cs; mov esp, 0xabb0208; push cs; adc al, 0x41; ret; 
0x0014cd12: push cs; mov esp, 0xac00208; push cs; adc al, 0x41; ret; 
0x00134af2: push cs; mov esp, 0xace0209; push cs; adc al, 0x41; ret; 
0x0013ec2e: push cs; mov esp, 0xad10201; push cs; adc al, 0x41; ret; 
0x0012d772: push cs; mov esp, 0xad70209; push cs; adc al, 0x41; ret; 
0x0012d8ea: push cs; mov esp, 0xaea0210; push cs; adc al, 0x41; ret; 
0x0014408e: push cs; mov word ptr [ecx], cs; add edx, dword ptr [0x140e0a02]; inc ecx; ret; 
0x00131b4e: push cs; mov word ptr [ecx], es; add cl, byte ptr [ebx + 0x41140e0a]; ret; 
0x0012a382: push cs; movsb byte ptr es:[edi], byte ptr [esi]; or dword ptr [ebx], eax; ret 0xa02; 
0x00125294: push cs; or al, 0x41; ret; 
0x00138bc3: push cs; or al, 0x83; add eax, dword ptr [ebx + 0xe]; push 0x410c0e7f; ret; 
0x00147947: push cs; or al, 0x83; add eax, dword ptr [edx]; bound ecx, qword ptr [edx]; ret; 
0x001259bf: push cs; or al, 0x83; add ebp, dword ptr [ebp + 0xa]; ret; 
0x001259e7: push cs; or al, 0x83; add ebp, dword ptr [edi + 0xa]; ret; 
0x0014c003: push cs; or al, 0x83; add ebp, dword ptr [esi + 0xa]; ret; 
0x0014bd5b: push cs; or al, 0x83; add edi, dword ptr [edx + 0xa]; ret; 
0x0014bceb: push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa500204], al; ret; 
0x00143bc7: push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa590204], al; ret; 
0x00146e43: push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa5d0204], al; ret; 
0x00138757: push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xa8f0204], al; ret; 
0x0014207b: push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xaa00204], al; ret; 
0x0014221b: push cs; or al, 0x86; add eax, dword ptr [ecx + 0xe]; adc byte ptr [ebx + 0xaf60204], al; ret; 
0x00147ae3: push cs; or al, 2; mov esi, 0x41080e0a; ret; 
0x00126efe: push cs; or byte ptr [ebp + 0x50d4202], al; inc ecx; add dword ptr [ebx], 0x61; ret; 
0x00139d22: push cs; or byte ptr [ebp + 0x50d4202], al; inc esp; add dword ptr [ebx], 0x62; ret; 
0x0013bdaa: push cs; or byte ptr [ebp + 0x50d4202], al; inc esp; add dword ptr [ebx], 0x65; ret; 
0x00127c02: push cs; or byte ptr [ebp + 0x50d4202], al; inc esp; add dword ptr [ebx], 0x6a; ret; 
0x0013bd86: push cs; or byte ptr [ebp + 0x50d4202], al; inc esp; add dword ptr [ebx], 0x6c; ret; 
0x0014afd2: push cs; or byte ptr [ebp + 0x50d4202], al; inc esp; add dword ptr [ebx], 0x77; ret; 
0x001342d6: push cs; or byte ptr [ebx + 0x100e4302], al; push 0x41080e0a; ret; 
0x00128eae: push cs; or byte ptr [ebx + 0x1c0e4302], al; add al, byte ptr [esi + ecx + 8]; inc ecx; ret; 
0x0013b002: push cs; or byte ptr [ebx + 0x200e4302], al; add al, byte ptr [esi + ecx + 8]; inc ecx; ret; 
0x0013e95e: push cs; or byte ptr [ebx + 0x240e4302], al; add cl, byte ptr [esi + ecx + 8]; inc ecx; ret; 
0x0012aa6a: push cs; or byte ptr [ebx + 0x2c0e4302], al; add al, byte ptr [ecx + 0x41080e0a]; ret; 
0x0013e93a: push cs; or byte ptr [ebx + 0x2c0e4302], al; add bl, byte ptr [esi + ecx + 8]; inc ecx; ret; 
0x00136536: push cs; or byte ptr [ebx + 0x440e4302], al; add dl, byte ptr [edx + 0x41080e0a]; ret; 
0x0014771a: push cs; or byte ptr [ebx + 0xa510202], al; ret; 
0x00147ade: push cs; or byte ptr [ebx + 0xc0e4302], al; add bh, byte ptr [esi + 0x41080e0a]; ret; 
0x00139b26: push cs; or byte ptr [ebx + 0xc0e4302], al; or cl, byte ptr [0x4108]; ret; 
0x001306f2: push cs; or byte ptr [ebx + 0xc0e4302], al; push 0x41080e0a; ret; 
0x0012eb12: push cs; or byte ptr [esi + 0xc0e4102], al; add dword ptr [ebx], 0x5f; ret; 
0x00135d86: push cs; or byte ptr [esi + 0xc0e4102], al; add dword ptr [ebx], 0x70; ret; 
0x00118e59: push cs; out dx, eax; mov esi, 0xbf597fc7; ret 0xa88f; 
0x0012b802: push cs; pop eax; add al, byte ptr [edx + 0x41140e0a]; ret; 
0x001441ca: push cs; pop esp; add al, byte ptr [edx + 0x41140e0a]; ret; 
0x0013b080: push cs; pop esp; add bh, byte ptr [esi + 0xe]; or al, 0x41; ret; 
0x00138bc8: push cs; push 0x410c0e7f; ret; 
0x00140062: push cs; push 0xa012d03; push cs; adc al, 0x41; ret; 
0x0013e59a: push cs; push 0xa015803; push cs; adc al, 0x41; ret; 
0x0012b3ae: push cs; push 0xa016b03; push cs; adc al, 0x41; ret; 
0x0013a3ae: push cs; push 0xa01f403; push cs; adc al, 0x41; ret; 
0x0013944e: push cs; push 0xa02f703; push cs; adc al, 0x41; ret; 
0x0013346a: push cs; push 0xa034a03; push cs; adc al, 0x41; ret; 
0x00133902: push cs; push 0xa035303; push cs; adc al, 0x41; ret; 
0x001454b2: push cs; push 0xa038303; push cs; adc al, 0x41; ret; 
0x00132fd2: push cs; push 0xa041203; push cs; adc al, 0x41; ret; 
0x0012cb2a: push cs; push 0xa050203; push cs; adc al, 0x41; ret; 
0x00126776: push cs; push 0xe0a6f02; adc al, 0x41; ret; 
0x0012b71a: push cs; push 0xe0a8502; adc al, 0x41; ret; 
0x00144d9e: push cs; push 0xe0a8a02; adc al, 0x41; ret; 
0x00126456: push cs; push 0xe0ae502; adc al, 0x41; ret; 
0x0012c66e: push cs; push eax; add bl, byte ptr [edx + 0x41140e0a]; ret; 
0x00146d0a: push cs; push eax; add bl, byte ptr [esi + 0x41140e0a]; ret; 
0x001378ea: push cs; push eax; add ch, byte ptr [esi + 0x41140e0a]; ret; 
0x00130cb5: push cs; push eax; add cl, byte ptr [ebx + 0x41100e0a]; ret; 
0x0013f63a: push cs; push eax; add cl, byte ptr [esi + 0x41140e0a]; ret; 
0x0013792a: push cs; push eax; add dh, byte ptr [eax + 0x41140e0a]; ret; 
0x0013ba02: push cs; push eax; add edi, dword ptr [ecx + 0x140e0a03]; inc ecx; ret; 
0x00137bee: push cs; push esp; add bl, byte ptr [eax + 0x41140e0a]; ret; 
0x00137c2e: push cs; push esp; add bl, byte ptr [ebx + 0x41140e0a]; ret; 
0x0014af36: push cs; push esp; add bl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x0013f1b6: push cs; push esp; add eax, dword ptr [eax + 0x140e0a01]; inc ecx; ret; 
0x0012ea7a: push cs; push esp; add ebx, dword ptr [eax + 0x140e0a01]; inc ecx; ret; 
0x0012e28e: push cs; rol byte ptr [edx + eax], 0x74; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013c9b2: push cs; ror byte ptr [eax], 1; add edi, dword ptr [edx + 0x140e0a03]; inc ecx; ret; 
0x0014c132: push cs; ror byte ptr [eax], 1; add esi, dword ptr [0x140e0a01]; inc ecx; ret; 
0x0012617c: push cs; sbb al, 0x59; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00140236: push cs; sbb al, 0x5c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00143a84: push cs; sbb al, 0x5e; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001260e0: push cs; sbb al, 0x5f; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00127df0: push cs; sbb al, 0x60; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0014b21c: push cs; sbb al, 0x65; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012a484: push cs; sbb al, 0x66; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00136228: push cs; sbb al, 0x67; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00127248: push cs; sbb al, 0x68; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013775c: push cs; sbb al, 0x69; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00127e28: push cs; sbb al, 0x6a; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012721c: push cs; sbb al, 0x6b; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00125290: push cs; sbb al, 0x6c; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001478ce: push cs; sbb al, 0x6d; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127c30: push cs; sbb al, 0x6e; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00126070: push cs; sbb al, 0x6f; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013b1c0: push cs; sbb al, 0x70; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00127580: push cs; sbb al, 0x71; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012b25c: push cs; sbb al, 0x72; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00126150: push cs; sbb al, 0x73; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00135b5c: push cs; sbb al, 0x74; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00128184: push cs; sbb al, 0x76; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013a6fc: push cs; sbb al, 0x77; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00128020: push cs; sbb al, 0x78; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00148294: push cs; sbb al, 0x7b; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00148008: push cs; sbb al, 0x7c; push cs; or al, 0x41; ret; 
0x0013e918: push cs; sbb al, 0x7d; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012899c: push cs; sbb al, 0x7e; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013ac46: push cs; sbb al, 0x7f; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012ae1c: push cs; sbb al, 0x7f; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012f748: push cs; sbb al, 2; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0014cd92: push cs; sbb byte ptr [eax + 0xa], ah; push cs; adc al, 0x41; ret; 
0x00130f20: push cs; sbb byte ptr [eax + 0xa], bh; push cs; or al, 0x41; ret; 
0x0012eaf0: push cs; sbb byte ptr [eax + 0xe], dh; or al, 0x41; ret; 
0x0014bb4c: push cs; sbb byte ptr [ebx + 0xa], ch; push cs; or al, 0x41; ret; 
0x0012d09c: push cs; sbb byte ptr [ecx + 0xa], ah; push cs; or al, 0x41; ret; 
0x00127440: push cs; sbb byte ptr [ecx + 0xa], bh; push cs; or al, 0x41; ret; 
0x0012f93e: push cs; sbb byte ptr [edi + 0xe], dh; adc al, 0x41; ret; 
0x00141d68: push cs; sbb byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x00149dca: push cs; sbb byte ptr [edx + 0xa], bh; push cs; adc al, 0x41; ret; 
0x0012e674: push cs; sbb byte ptr [edx + 0xa], dh; push cs; or al, 0x41; ret; 
0x001403f2: push cs; sbb byte ptr [edx], al; imul ecx, dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x0012794a: push cs; sbb byte ptr [edx], al; jp 0x12795d; adc al, 0x41; ret; 
0x0012a0c8: push cs; sbb byte ptr [edx], al; push 0x410c0e0a; ret; 
0x0013d388: push cs; sbb byte ptr [esi + 0xa], bh; push cs; or al, 0x41; ret; 
0x00147904: push cs; sbb byte ptr [esi + 0xa], ch; push cs; or al, 0x41; ret; 
0x0012db8c: push cs; sbb byte ptr [esi + 0xa], dh; push cs; or al, 0x41; ret; 
0x001277a0: push cs; sbb byte ptr [esi + 0xe], ch; or al, 0x41; ret; 
0x0012e9d2: push cs; sbb byte ptr [esi + 0xe], dh; adc al, 0x41; ret; 
0x00143c3c: push cs; sbb byte ptr [esi + 0xe], dh; or al, 0x41; ret; 
0x00147d69: push cs; sbb byte ptr [esi + ecx + 0x10], bh; inc ecx; ret; 
0x0012af2d: push cs; sbb byte ptr [esi + ecx + 0x10], dh; inc ecx; ret; 
0x00128ed7: push cs; sbb byte ptr [esi + ecx + 8], bh; inc ecx; ret; 
0x001311df: push cs; sbb byte ptr [esi + ecx + 8], ch; inc ecx; ret; 
0x00125b47: push cs; sbb byte ptr [esi + ecx + 8], dh; inc ecx; ret; 
0x000f4efe: push cs; sbb eax, 0xc031fff3; add esp, 0x14; pop ebx; ret; 
0x00129876: push cs; sub al, 0x63; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b61c: push cs; sub al, 0x6a; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00144c7e: push cs; sub al, 0x6d; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012c606: push cs; sub al, 0x72; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013649a: push cs; sub al, 0x75; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001466b6: push cs; sub al, 0x78; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001309ac: push cs; sub al, 0x79; push cs; or al, 0x41; ret; 
0x00146662: push cs; sub al, 0x7a; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001274ce: push cs; sub al, 2; mov dword ptr [esi], ecx; adc al, 0x41; ret; 
0x0013cf86: push cs; sub al, 2; mov esi, 0x41140e0a; ret; 
0x001279ea: push cs; sub al, 2; mov esp, 0x41140e0a; ret; 
0x001475d2: push cs; sub al, 2; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x001360d2: push cs; sub al, 2; or cl, byte ptr gs:[esi]; adc al, 0x41; ret; 
0x0012be0a: push cs; sub al, 3; cmp eax, 0x140e0a01; inc ecx; ret; 
0x00129672: push cs; sub byte ptr [ebp + 0xa], ah; push cs; adc al, 0x41; ret; 
0x00131a12: push cs; sub byte ptr [ecx + 0xa], dh; push cs; adc al, 0x41; ret; 
0x0012d3ec: push cs; sub byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x0014831c: push cs; sub byte ptr [edx + 0xa], bl; push cs; or al, 0x41; ret; 
0x0014522a: push cs; sub byte ptr [edx + 0xa], dh; push cs; adc al, 0x41; ret; 
0x0013862a: push cs; sub byte ptr [edx], al; mov byte ptr [0x41140e0a], al; ret; 
0x00134416: push cs; sub byte ptr [edx], al; mov dword ptr [0x41140e0a], eax; ret; 
0x00142c4a: push cs; sub byte ptr [edx], al; mov ebp, 0x41140e0a; ret; 
0x0013174a: push cs; sub byte ptr [edx], al; mov edi, 0x41140e0a; ret; 
0x0013ae1e: push cs; sub byte ptr [edx], al; or cl, byte ptr [0x4114]; ret; 
0x0013783a: push cs; sub byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012f782: push cs; sub byte ptr [edx], al; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x001465be: push cs; sub byte ptr [edx], al; or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x00144a0a: push cs; sub byte ptr [edx], al; push 0x41140e0a; ret; 
0x0013b406: push cs; sub byte ptr [edx], al; ret 0xe0a; 
0x0012fd6a: push cs; sub byte ptr [esi + 0xa], dh; push cs; adc al, 0x41; ret; 
0x00127471: push cs; test al, 0x10; add al, byte ptr [esi + 0x41100e0a]; ret; 
0x00144e76: push cs; test al, 0x10; add dl, byte ptr [eax + 0x41140e0a]; ret; 
0x0013169a: push cs; test al, 1; add cl, byte ptr [esi + 0x41140e0a]; ret; 
0x00147dda: push cs; test al, 1; add esp, dword ptr [ecx + 0x140e0a01]; inc ecx; ret; 
0x00142c0a: push cs; test byte ptr [ecx], al; add dh, byte ptr [ebx + 0x41140e0a]; ret; 
0x00128fb5: push cs; xor al, 2; mov edx, 0x41100e0a; ret; 
0x0014be92: push cs; xor al, 3; cmp eax, 0x140e0a01; inc ecx; ret; 
0x0013cb0e: push cs; xor al, 3; mov dword ptr [ecx], 0x41140e0a; ret; 
0x00140022: push cs; xor byte ptr [eax + 0xa], bh; push cs; adc al, 0x41; ret; 
0x0014c492: push cs; xor byte ptr [ebx], al; imul eax, dword ptr [ecx], 0x41140e0a; ret; 
0x00126cb6: push cs; xor byte ptr [ebx], al; or eax, 0x140e0a01; inc ecx; ret; 
0x00139f9a: push cs; xor byte ptr [ebx], al; test dword ptr [ecx], 0x41140e0a; ret; 
0x00135f32: push cs; xor byte ptr [ecx + 0xa], dh; push cs; adc al, 0x41; ret; 
0x001430c4: push cs; xor byte ptr [edi + 0xa], ah; push cs; or al, 0x41; ret; 
0x0014bc2a: push cs; xor byte ptr [edx], al; mov edi, 0x41140e0a; ret; 
0x00134ce6: push cs; xor byte ptr [edx], al; mov esi, 0x41140e0a; ret; 
0x00136d8f: push cs; xor byte ptr [edx], al; or cl, byte ptr [0x4108]; ret; 
0x0012aadc: push cs; xor byte ptr [edx], al; or cl, byte ptr [0x410c]; ret; 
0x00149f52: push cs; xor byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013eed3: push cs; xor byte ptr [edx], al; push 0x41080e0a; ret; 
0x0012d996: push cs; xor byte ptr [edx], al; ret 0xe0a; 
0x00124f80: push cs; xor esi, edi; call eax; ret; 
0x0014564a: push cs; cwde; add dword ptr [ebx], eax; add dword ptr [edx], 0x41140e0a; ret; 
0x001372b6: push cs; cwde; or dword ptr [ebx], eax; mov dword ptr [ecx], 0x41140e0a; ret; 
0x00142886: push cs; nop; and eax, 0xe0a6f02; adc al, 0x41; ret; 
0x00134ba2: push cs; pushal; add dh, byte ptr [ebp + 0x41140e0a]; ret; 
0x0012539a: push cs; pushal; add dl, byte ptr [edx + 0x41140e0a]; ret; 
0x0012dfda: push cs; pushal; add edi, dword ptr [0x140e0a01]; inc ecx; ret; 
0x000d5d2a: push cs; salc; pop es; aaa; ret; 
0x0012165d: push ds; add dword ptr [eax], eax; ret; 
0x0014682d: push ds; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0009ca06: push ds; add esp, 8; pop ebx; ret; 
0x000a2ab4: push ds; clc; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x00065329: push ds; cld; inc dword ptr [ebx + 0x5e5b20c4]; ret; 
0x00120308: push ds; ret; 
0x0012165b: push dword ptr [eax + 0x1e]; add dword ptr [eax], eax; ret; 
0x00032549: push dword ptr [eax + ecx - 0x77]; rol byte ptr [ebx + 0x5e5b0cc4], 1; ret; 
0x0002c05d: push dword ptr [eax - 1]; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000ea094: push dword ptr [ebp + 6]; mov eax, 4; ret; 
0x000f9a49: push dword ptr [ebp + 9]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00061ed5: push dword ptr [ebp + edx - 0x77]; ret 0xe2c1; 
0x00077799: push dword ptr [ebp - 0x19]; pop esi; pop edi; ret; 
0x0002c454: push dword ptr [ebp - 0x32]; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000c8fdc: push dword ptr [ebp - 0x4f]; pop ebx; pop edi; pop esi; ret; 
0x000eed82: push dword ptr [ebp - 0x55]; xor eax, eax; pop ebx; pop esi; ret; 
0x00116df3: push dword ptr [ebx]; ret 0xfff5; 
0x000be3b0: push dword ptr [ecx]; imul cl; ret 0xfffe; 
0x0008340c: push dword ptr [ecx]; rol byte ptr [ebx - 0x6bf0fe08], cl; ret 0x1689; 
0x00083ff8: push dword ptr [ecx]; rol byte ptr [ebx - 0x6bf0fe08], cl; ret 0x1789; 
0x000c5b94: push dword ptr [ecx]; sar byte ptr [ecx], cl; or byte ptr [esp + edx - 0x7d], dh; ret 0x8301; 
0x00037e83: push dword ptr [ecx]; shr bl, 0xde; ret; 
0x00123be3: push dword ptr [edi + esi + 2]; add byte ptr [ebx + ebp + 0x37b0fffb], cl; add al, byte ptr [eax]; ret; 
0x00116ce3: push dword ptr [edi - 0x40]; cmc; inc dword ptr [edi]; ret 0xfff5; 
0x0005b259: push dword ptr [edx + ecx - 0x77]; ret 0xead1; 
0x000c53e8: push eax; adc al, 0x5b; ret; 
0x000a6705: push eax; adc al, 0x89; ret 0x838d; 
0x00036cff: push eax; adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000bb125: push eax; adc byte ptr [ebx + 0x5e5b24c4], al; pop edi; ret; 
0x000eacb4: push eax; add ah, byte ptr [esi + 0x25]; add byte ptr [eax], 0xf; mov bh, 0xc0; ret; 
0x000eacf9: push eax; add ah, byte ptr [esi + 0x25]; add byte ptr [ecx], al; movzx eax, ax; ret; 
0x000eabe9: push eax; add ah, byte ptr [esi + 0x25]; add byte ptr [edi + ecx], al; mov bh, 0xc0; ret; 
0x000eaa98: push eax; add ah, byte ptr [esi + 0x25]; add byte ptr [edx], al; movzx eax, ax; ret; 
0x0005b035: push eax; add al, 0; ret; 
0x001386ef: push eax; add al, bh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00123f45: push eax; add al, byte ptr [eax]; scasb al, byte ptr es:[edi]; ret; 
0x0012c66f: push eax; add bl, byte ptr [edx + 0x41140e0a]; ret; 
0x00146d0b: push eax; add bl, byte ptr [esi + 0x41140e0a]; ret; 
0x00076f6c: push eax; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x001378eb: push eax; add ch, byte ptr [esi + 0x41140e0a]; ret; 
0x00130cb6: push eax; add cl, byte ptr [ebx + 0x41100e0a]; ret; 
0x0013f63b: push eax; add cl, byte ptr [esi + 0x41140e0a]; ret; 
0x0013792b: push eax; add dh, byte ptr [eax + 0x41140e0a]; ret; 
0x0012f9ef: push eax; add dl, byte ptr [eax + 0xa]; push cs; adc al, 0x41; ret; 
0x00141569: push eax; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x000f9f34: push eax; add ecx, dword ptr [edi]; mov bh, 0x45; or bh, byte ptr [ecx]; ret 0xdb7d; 
0x0013ba03: push eax; add edi, dword ptr [ecx + 0x140e0a03]; inc ecx; ret; 
0x0006aa17: push eax; and al, 0x5b; ret; 
0x0006aa11: push eax; and byte ptr [ebx + 0x50892850], cl; and al, 0x5b; ret; 
0x00035c8c: push eax; and byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000a87f5: push eax; and eax, dword ptr [eax]; add byte ptr [ebx + 0x1482454], cl; ret 0xfa21; 
0x00091ad6: push eax; dec esp; pop esi; pop edi; ret; 
0x0008920c: push eax; in eax, -7; inc dword ptr [ebp - 0x76f68b40]; ret 0xf089; 
0x00122873: push eax; lodsd eax, dword ptr [esi]; add dword ptr [eax], eax; ret; 
0x00051113: push eax; or al, 0x89; ret 0xe283; 
0x000350a4: push eax; or ax, 0x8100; ret; 
0x000bd2c9: push eax; or byte ptr [eax + 1], bh; ret; 
0x000cf6bb: push eax; or byte ptr [esi + 0x5f], bl; ret 4; 
0x001263df: push eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013ba3b: push eax; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x000aba03: push eax; or dh, dh; ret 0x7401; 
0x000ab72c: push eax; or dh, dh; ret 0x7501; 
0x00122003: push eax; outsd dx, dword ptr [esi]; add dword ptr [eax], eax; ret; 
0x0009137c: push eax; pop eax; pop esi; pop edi; ret; 
0x00059f77: push eax; pop ebx; pop esi; ret; 
0x000c2f24: push eax; pop esp; mov eax, 1; ret; 
0x00143f0f: push eax; push cs; adc al, 0x41; ret; 
0x0012b2cf: push eax; push cs; or al, 0x41; ret; 
0x00026d7c: push eax; ret 0xffff; 
0x0005c051: push eax; str word ptr [ebx + 0x458b0875]; or al, 0x89; ret 0x4489; 
0x00064049: push eax; sub byte ptr [ebx + 0x5e5b08c4], al; ret; 
0x000a2579: push eax; sub byte ptr [ebx + 0x5e5b0cc4], al; ret; 
0x0006a878: push eax; sub byte ptr [ecx - 0x3b7cdbb0], cl; add al, 0x5b; ret; 
0x00067429: push eax; sub dh, dh; ret 0x7408; 
0x00060b68: push eax; xadd dword ptr [edx], eax; dec eax; ret; 
0x00026c7c: push eax; ret; 
0x00050cbd: push eax; std; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x00067b0e: push ebp; adc al, 1; ret 0x7a8d; 
0x0006a0b8: push ebp; adc byte ptr [ebx + 0x33102444], cl; inc ebp; or al, 9; ret 0x840f; 
0x00072676: push ebp; adc byte ptr [ebx], dh; inc ebp; or al, 9; ret 0x840f; 
0x000f450a: push ebp; adc dh, dh; ret 0x7422; 
0x000f98ef: push ebp; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x0012b159: push ebp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x000ec5c4: push ebp; or al, 0x83; ret 0x8902; 
0x000326d3: push ebp; or al, 0x85; sar byte ptr [eax + 2], cl; pop ebp; ret; 
0x00036594: push ebp; or al, 0xf6; ret 0x7540; 
0x0005bcbb: push ebp; or al, 0xf7; fadd dword ptr [ebx - 0x2508ff2e]; pop ebp; ret; 
0x000b53f4: push ebp; or al, 1; ret 0x5489; 
0x0006772d: push ebp; or byte ptr [ebp - 0x7cef8b0a], al; ret 0x8904; 
0x000ca948: push ebp; or byte ptr [ebx - 0x35f0f3bb], cl; bswap eax; pop ebp; ret; 
0x00129585: push ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129e04: push ebp; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012a097: push ebp; push cs; adc al, 0x41; ret; 
0x0014c955: push ebp; push cs; or al, 0x41; ret; 
0x0010dfe3: push ebp; ret 0xffee; 
0x0012c401: push ebp; ret; 
0x0013befe: push ebx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00133905: push ebx; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x00022fc4: push ebx; dec ebx; add byte ptr [eax], al; leave; ret; 
0x000e015d: push ebx; movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0012e60a: push ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012556a: push ebx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00138391: push ebx; push cs; adc al, 0x41; ret; 
0x00130bf5: push ebx; push cs; or al, 0x41; ret; 
0x0003c0a1: push ebx; test byte ptr [eax + eax], 0x81; ret; 
0x00149c07: push ebx; ret; 
0x00091131: push ebx; stc; dec dword ptr [ebx - 0x7cc7dbac]; ret 0x8901; 
0x0008222e: push ecx; adc al, 1; ret 0x5439; 
0x0009f3c3: push ecx; add al, 0x31; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x000ff774: push ecx; add al, 0x83; ret 0xf08; 
0x0003bd01: push ecx; add dword ptr [ecx], edi; ret 0x1373; 
0x000a6f69: push ecx; add dword ptr [ecx], edi; ret 0x8d0f; 
0x0003bd14: push ecx; add dword ptr [ecx], edi; ret 0xed72; 
0x0013488a: push ecx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0004e3d4: push ecx; call 0x268b0; add esp, 4; pop ebx; ret; 
0x00044ba3: push ecx; imul ecx, dword ptr [eax + eax], -0x7f; ret; 
0x000ea2b2: push ecx; mov edi, 0x7719fa80; ret; 
0x00035bf4: push ecx; or al, 0xc9; ret; 
0x00109839: push ecx; or byte ptr [ecx], ch; ret 0x5189; 
0x0012854b: push ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129044: push ecx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x000ab6e5: push ecx; or dh, dh; ret 0x7501; 
0x0013c75e: push ecx; push cs; adc al, 0x41; ret; 
0x0012e21a: push ecx; push cs; or al, 0x41; ret; 
0x000364f8: push ecx; ret 0xfffb; 
0x00109616: push ecx; sbb byte ptr [eax - 0x2ff7021e], al; mov byte ptr [ecx + 0x18], al; xor eax, eax; ret; 
0x001259a1: push ecx; ret; 
0x00104974: push edi; adc al, 0xf6; ret 0x7501; 
0x0003c4df: push edi; add al, 0x39; ret 0x870f; 
0x001419b9: push edi; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x001297e1: push edi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0013b78a: push edi; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0014496c: push edi; add esi, dword ptr [edi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000679e8: push edi; cmp al, 0x33; inc edi; cmp byte ptr [ecx], cl; ret 0xcd75; 
0x00126485: push edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013e10f: push edi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0014cb03: push edi; push cs; or al, 0x41; ret; 
0x000638a7: push edi; rcr byte ptr [esi + 0x5f], 1; ret; 
0x00064e2f: push edi; ret 0xe; 
0x00088945: push edi; ret 0xfff9; 
0x00036ed7: push edi; rol cl, 1; call 0xcc7f1ff; pop ebx; ret; 
0x001084fa: push edi; sub dh, dh; ret 0xf02; 
0x00108119: push edi; sub dh, dh; ret 0xf04; 
0x000679b5: push edi; xor al, 0x33; inc edi; xor byte ptr [ecx], cl; ret 0x2174; 
0x00007b85: push edx; add byte ptr [eax], al; xchg eax, esp; ret; 
0x0012a013: push edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127c8b: push edx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0005a9dd: push edx; outsw dx, word ptr [esi]; mov edx, 0xff6c7072; pop ebp; ret; 
0x001388af: push edx; push cs; or al, 0x41; ret; 
0x000a2f5a: push edx; push es; clc; inc dword ptr [ebx + 0x5d5b08c4]; ret; 
0x00074e34: push edx; ret 0xd; 
0x00116dcc: push edx; ret; 
0x0000433d: push es; add byte ptr [eax], al; ret 7; 
0x00004819: push es; add byte ptr [eax], al; ret; 
0x000e8632: push es; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000e88d9: push es; add byte ptr [ebx - 0x10f7f], cl; inc dword ptr [0x1c0]; ret; 
0x00142848: push es; add ch, byte ptr [ecx + 0x41140e0a]; ret; 
0x0012bc59: push es; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0013c82d: push es; add dword ptr [esi], ecx; adc al, 0x41; ret; 
0x000d11a8: push es; add eax, 0x2e8; ret; 
0x000d11ce: push es; add eax, 0x328; ret; 
0x00084b20: push es; add esp, 0x10; pop ebx; pop esi; ret; 
0x0006ac7a: push es; add esp, 0x10; pop esi; ret; 
0x0002bdf9: push es; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010b696: push es; add esp, 0x1c; pop ebx; pop esi; ret; 
0x0004209b: push es; add esp, 0x28; pop ebx; pop esi; ret; 
0x000fe8c6: push es; add esp, 0x38; pop ebx; pop esi; ret; 
0x000565bf: push es; add esp, 0xc; pop ebx; pop esi; ret; 
0x00037b12: push es; add esp, 4; pop ebx; pop esi; ret; 
0x000285ed: push es; add esp, 8; pop ebx; pop esi; ret; 
0x000474d1: push es; and eax, 0xffffff; ret; 
0x0005c84e: push es; fdivr dword ptr [ebx - 0x40610]; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x00020354: push es; mov bh, 1; add byte ptr [eax + 0x600150d], al; ret 1; 
0x000f4da1: push es; mov dword ptr [edx + 0x11c], ecx; ret; 
0x000285aa: push es; mov dword ptr [edx], 0; ret; 
0x000e89a2: push es; mov eax, 0x21; ret; 
0x000f722d: push es; mov eax, 0x2d; sar eax, cl; and eax, 3; ret; 
0x000f9abf: push es; mov eax, 0x2d; ret; 
0x000f9b2d: push es; mov eax, 0x55; ret; 
0x000d0b15: push es; mov eax, 0xff; ret; 
0x000d0b27: push es; mov eax, 0xffffff; ret; 
0x0004e2ad: push es; mov eax, 2; ret; 
0x000ea096: push es; mov eax, 4; ret; 
0x00090a10: push es; or al, 0; mov eax, dword ptr [ecx + 0xb7c4]; ret; 
0x000909fe: push es; or al, 0; mov eax, dword ptr [ecx + 0xb7c8]; ret; 
0x000909ec: push es; or al, 0; mov eax, dword ptr [ecx + 0xb7cc]; ret; 
0x000909da: push es; or al, 0; mov eax, dword ptr [ecx + 0xb7d0]; ret; 
0x000909c8: push es; or al, 0; mov eax, dword ptr [ecx + 0xb7d4]; ret; 
0x000909b6: push es; or al, 0; mov eax, dword ptr [ecx + 0xb7d8]; ret; 
0x001297b2: push es; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0009b3a3: push es; or dword ptr [ecx], ecx; ret 0x348d; 
0x000980e6: push es; ret 0xfff8; 
0x0002035c: push es; ret 1; 
0x000206d4: push es; ret 8; 
0x000a6a66: push es; sal bh, cl; dec dword ptr [ebx + 0x468b1456]; adc al, ch; ret 0xfffa; 
0x0005bdb7: push es; shld edx, eax, cl; shl eax, cl; ret; 
0x0005bd93: push es; shrd eax, edx, cl; sar edx, cl; ret; 
0x0005bcfb: push es; shrd eax, edx, cl; shr edx, cl; ret; 
0x000a2ebe: push es; clc; inc dword ptr [ebx + 0x5d5b08c4]; ret; 
0x00064308: push es; cld; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000653cc: push es; cld; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0002064c: push es; ret; 
0x000a6a6b: push esi; adc al, 0x8b; inc esi; adc al, ch; ret 0xfffa; 
0x001068a3: push esi; adc ch, byte ptr [ecx]; ret 0x8966; 
0x000df09d: push esi; add al, 0x29; ret 0x5489; 
0x00108b04: push esi; add al, 0x83; ret 0x8901; 
0x000314f5: push esi; add al, 0x85; sal byte ptr [edx + eax - 0x77], cl; add al, byte ptr [ebx + 0x5e5b10c4]; ret; 
0x0003286b: push esi; add al, byte ptr [ecx]; rol byte ptr [ebx + 0x5e5b04c4], 1; ret; 
0x00032e3d: push esi; add al, byte ptr [ecx]; rol byte ptr [ebx + 0x5e5b10c4], 1; ret; 
0x00037e40: push esi; add byte ptr [eax], al; add esp, 4; pop ebx; ret; 
0x00037a86: push esi; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x000688df: push esi; add dword ptr [eax], eax; add byte ptr [ebp - 0x3fb857d], cl; dec dword ptr [ecx - 0x5017dbfc]; ret 0xfffb; 
0x0013dd25: push esi; add dword ptr [edx], ecx; ret; 
0x000d7155: push esi; and dh, dh; ret 0x7406; 
0x000660a6: push esi; call 0xc48a60a7; inc eax; pop ebx; ret; 
0x001042e8: push esi; ljmp ptr [ecx]; rcr byte ptr [esi + 0x5f], 1; ret; 
0x001097dd: push esi; or al, 0xf6; ret 0x7408; 
0x000cfacd: push esi; or bh, dh; ret 0; 
0x00065a32: push esi; or byte ptr [ebx + 0x5e5b20c4], al; ret; 
0x00090aa8: push esi; or byte ptr [ebx + 0x5e5b3cc4], al; ret; 
0x000f5177: push esi; or byte ptr [ecx], bh; ret 0x8d0f; 
0x00126e14: push esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001430d4: push esi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x000ab707: push esi; or dh, dh; ret 0x7401; 
0x000ab6c4: push esi; or dh, dh; ret 0x7501; 
0x00142669: push esi; push cs; adc al, 0x41; ret; 
0x000b460f: push esi; ret 0xf01; 
0x00054335: push esi; ret 0xf04; 
0x0005d060: push esi; ret 0xff2; 
0x0005cf9e: push esi; sal edx, 0xf; pop esp; ret 0xff2; 
0x001091db: push esi; sbb dh, dh; ret 0x7502; 
0x000c2730: push esi; sub al, 0x29; ret 0x1775; 
0x0006a1df: push esi; sub al, 0x83; ret 0x8901; 
0x000c2973: push esi; xor byte ptr [eax + 1], bh; add esp, 8; pop esi; ret; 
0x000a9a26: push esi; ret; 
0x000e83a8: push esp; aad 0xf3; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000f0a46: push esp; add al, 0; add al, ch; test eax, 0x810001ac; ret; 
0x00137bef: push esp; add bl, byte ptr [eax + 0x41140e0a]; ret; 
0x00137c2f: push esp; add bl, byte ptr [ebx + 0x41140e0a]; ret; 
0x0014af37: push esp; add bl, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x00139880: push esp; add byte ptr [eax], al; add byte ptr [esi + eax*2 + 1], cl; add byte ptr [edx], ah; ret 0xfff5; 
0x000c33a0: push esp; add dword ptr [eax + eax], -0x7f; ret; 
0x00143a39: push esp; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0013f1b7: push esp; add eax, dword ptr [eax + 0x140e0a01]; inc ecx; ret; 
0x00139053: push esp; add ebp, dword ptr [ebp + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00140c93: push esp; add ebp, dword ptr [ecx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012ea7b: push esp; add ebx, dword ptr [eax + 0x140e0a01]; inc ecx; ret; 
0x00140dcb: push esp; add ecx, dword ptr [ebx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012ce2f: push esp; add edx, dword ptr [ebp + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001252db: push esp; add esi, dword ptr [edx + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000ba3df: push esp; and al, 0x10; add esp, 8; ret; 
0x000c53e4: push esp; and al, 0x10; mov dword ptr [eax + 0x14], edx; pop ebx; ret; 
0x00109383: push esp; and al, 0x10; mov dword ptr [eax + 0x424], edx; ret; 
0x000cf67a: push esp; and al, 0x10; mov dword ptr [eax + 8], edx; ret 4; 
0x000f96ce: push esp; and al, 0x10; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000f96fd: push esp; and al, 0x14; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000e697b: push esp; and al, 0x24; add esp, 0x20; ret; 
0x000f9a4d: push esp; and al, 0xc; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0004e64c: push esp; and al, 0xfc; fldcw word ptr [esp - 4]; ret; 
0x0004e61b: push esp; and al, 4; fldenv dword ptr [esp]; add esp, 0x1c; ret; 
0x00060b51: push esp; and al, 4; lock dec dword ptr [edx]; ret; 
0x00060b71: push esp; and al, 4; lock inc dword ptr [edx]; ret; 
0x000db542: push esp; and al, 4; mov dword ptr [eax + 0x1b8], edx; ret; 
0x000db55e: push esp; and al, 4; mov dword ptr [eax + 0x1bc], edx; ret; 
0x000ebab0: push esp; and al, 4; mov dword ptr [eax], edx; ret; 
0x000c51fe: push esp; and al, 4; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00060af1: push esp; and al, 4; mov eax, dword ptr [esp + 8]; lock add dword ptr [edx], eax; ret; 
0x00060b21: push esp; and al, 4; mov eax, dword ptr [esp + 8]; lock and dword ptr [edx], eax; ret; 
0x00060b91: push esp; and al, 4; mov eax, dword ptr [esp + 8]; lock or dword ptr [edx], eax; ret; 
0x00060bc1: push esp; and al, 4; mov eax, dword ptr [esp + 8]; xchg dword ptr [edx], eax; ret; 
0x000ead38: push esp; and al, 4; movsx eax, word ptr [eax + edx*2 + 2]; ret; 
0x000eaa55: push esp; and al, 4; movzx eax, word ptr [eax + edx*2 + 2]; and eax, 1; ret; 
0x000eaa18: push esp; and al, 4; movzx eax, word ptr [eax + edx*2 + 2]; and eax, 5; ret; 
0x0002bb04: push esp; and al, 8; mov dword ptr [ecx + eax*4 + 0x367c], edx; xor eax, eax; ret; 
0x000cb998: push esp; and al, 8; sub eax, dword ptr [edx + 4]; ret; 
0x0010b473: push esp; and eax, dword ptr [eax]; add byte ptr [ecx + 0x21e82404], cl; ret 0xfff1; 
0x000a8268: push esp; and eax, dword ptr [eax]; add byte ptr [ecx + 0x2ce82404], cl; ret; 
0x000a8203: push esp; and eax, dword ptr [eax]; add byte ptr [ecx - 0x6e17dbfc], cl; ret; 
0x0002c608: push esp; jns 0x2c60a; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00125b91: push esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b5cc: push esp; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00061e76: push esp; pop ds; add byte ptr [eax], al; add byte ptr [eax + edi - 0x7d], dh; ret 0xeb01; 
0x00064b5b: push esp; pop ebx; pop esi; pop edi; ret; 
0x0014bbd6: push esp; pop es; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00044b23: push esp; pop esi; pop edi; pop ebp; ret; 
0x00144931: push esp; push cs; adc al, 0x41; ret; 
0x0013cf14: push esp; push cs; or al, 0x41; ret; 
0x000f882f: push esp; shr edx, 2; mov dword ptr [ecx], edx; mov eax, 2; ret; 
0x0010a748: push esp; sub eax, 0x24548900; or byte ptr [ecx], bh; ret 0x473; 
0x000377b3: push esp; ret; 
0x0002a24d: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x00052204: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00052182: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b0cc4], al; ret; 
0x00143ae9: push ss; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00083774: push ss; add esp, 0x1c; pop ebx; pop esi; ret; 
0x0004f9a3: push ss; add esp, 0x20; pop ebx; pop esi; ret; 
0x0008a607: push ss; add esp, 4; pop ebx; pop esi; ret; 
0x000b483f: push ss; mov eax, 2; leave; ret; 
0x0005a021: push ss; or eax, dword ptr [eax]; add ecx, 0xf7060; lea eax, dword ptr [ecx + 0x142c]; ret; 
0x00083416: push ss; pop ebx; pop esi; ret; 
0x000d604c: push ss; rcr dword ptr [ebp - 0x7c], 1; test dword ptr [ecx + 0x9d2f7ca], ecx; ret 0xfa31; 
0x00124620: push ss; ret 0xfffc; 
0x00116de4: push ss; ret; 
0x000fd9b6: push ss; sahf; inc dword ptr [ebx + 0x5d5b14c4]; ret; 
0x0005bdc1: rcl bl, 0xe2; ret; 
0x0005d1f3: rcl bl, 1; ljmp 0x8904:0x7420c1f6; sal byte ptr [ecx], 1; rcr byte ptr [esi + 0x5d], cl; ret; 
0x0005d167: rcl bl, 1; ljmp 0x8904:0x7420c1f6; sal byte ptr [ecx], 1; ror cl, cl; ret; 
0x0005bd96: rcl bl, 1; cli; ret; 
0x00050cbc: rcl byte ptr [eax - 3], 0xff; add esp, 8; pop ebx; pop esi; ret; 
0x000216b8: rcl byte ptr [esi], 0x15; add byte ptr [edi], al; ret; 
0x0010a076: rcl ebx, 1; jecxz 0x10a083; ret; 
0x000b46a0: rcl ebx, 1; jecxz 0xb46ad; ret; 
0x000c8e3b: rcl ebx, 1; jecxz 0xc8e48; ret; 
0x000d8593: rcl ebx, 1; jecxz 0xd85a0; ret; 
0x000909b4: rcl ecx, 6; or al, 0; mov eax, dword ptr [ecx + 0xb7d8]; ret; 
0x0000f2d8: rcr byte ptr [eax + 0x15000c], 1; add byte ptr [eax], al; and al, byte ptr [eax]; or byte ptr [eax], al; ret; 
0x00061663: rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000d7e52: rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000fb695: rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0005725c: rcr byte ptr [ebx + 0x66], 0x90; ret; 
0x000c99cc: rcr byte ptr [ebx - 0x3b7c000b], 1; or al, 0x5b; ret; 
0x000ff006: rcr byte ptr [ecx + 0xf104d8b], 1; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x000feca3: rcr byte ptr [ecx + 0xf104f8b], 1; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x0005d1fe: rcr byte ptr [esi + 0x5d], cl; ret; 
0x0002d8f9: rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x000483bf: rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x0006389d: rcr byte ptr [esi + 0x5f], 1; ret; 
0x00026d67: rcr byte ptr [esi], 0; add cl, ch; pushal; ret 0xffff; 
0x000b880c: rcr dl, 0xf6; dec dword ptr [ecx - 0x5717dbcc]; ret; 
0x000d604d: rcr dword ptr [ebp - 0x7c], 1; test dword ptr [ecx + 0x9d2f7ca], ecx; ret 0xfa31; 
0x0004ef6b: rcr dword ptr [ebx - 3], -1; add esp, 0xc; pop ebx; ret; 
0x0010a666: rcr dword ptr [edi], 0x6a; add al, 0; mov eax, dword ptr [ecx - 0x2ec]; mov eax, dword ptr [eax]; ret; 
0x000a5f65: rcr dword ptr [edi], 0xf; xchg eax, ebp; ret 0xd789; 
0x000e015e: rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0010673f: rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0002c4af: rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x0010672c: rep stosd dword ptr es:[edi], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0002c4a0: rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00002f08: ret 0; 
0x00044e63: ret 0x10; 
0x0002a884: ret 0x101; 
0x0003d9d1: ret 0x1073; 
0x00034dd4: ret 0x11; 
0x000f2f9e: ret 0x118; 
0x000349c4: ret 0x11c6; 
0x00092d0b: ret 0x12; 
0x0003bd04: ret 0x1373; 
0x0002ee72: ret 0x13eb; 
0x0002f3ea: ret 0x1489; 
0x00056658: ret 0x148d; 
0x00069da7: ret 0x14e9; 
0x000b66c4: ret 0x160; 
0x000560c9: ret 0x1674; 
0x00083414: ret 0x1689; 
0x00068399: ret 0x16e9; 
0x000c2733: ret 0x1775; 
0x0010b5d8: ret 0x1776; 
0x00084000: ret 0x1789; 
0x00052d76: ret 0x17eb; 
0x0005bc92: ret 0x1872; 
0x0005bde2: ret 0x187c; 
0x0003e4b1: ret 0x18e9; 
0x0003b1cb: ret 0x1be9; 
0x000a21cd: ret 0x1c75; 
0x0010000c: ret 0x1ce9; 
0x000d6a54: ret 0x1d72; 
0x0005ca9c: ret 0x1d74; 
0x0003389c: ret 0x1e9; 
0x0000f954: ret 0x1f; 
0x000ccaec: ret 0x1f74; 
0x000fb65d: ret 0x2075; 
0x000949f4: ret 0x20eb; 
0x00013f84: ret 0x21; 
0x000679bb: ret 0x2174; 
0x0005bb55: ret 0x2175; 
0x00118f89: ret 0x21c0; 
0x0007a3b5: ret 0x22; 
0x000597fd: ret 0x2374; 
0x000ab0b3: ret 0x2474; 
0x0006ce3b: ret 0x24e8; 
0x00031994: ret 0x2575; 
0x00009a24: ret 0x26; 
0x0006339e: ret 0x271; 
0x00062494: ret 0x272; 
0x0006208b: ret 0x273; 
0x0005490e: ret 0x27e8; 
0x000a5925: ret 0x28b; 
0x00013b54: ret 0x29; 
0x0003cff1: ret 0x2901; 
0x000aa4e3: ret 0x2904; 
0x00090227: ret 0x2910; 
0x0005c740: ret 0x297c; 
0x0005d42f: ret 0x297f; 
0x001056b6: ret 0x2a74; 
0x00007d34: ret 0x2b; 
0x00009ce4: ret 0x2d; 
0x0002d94f: ret 0x2e75; 
0x000b2e26: ret 0x2f76; 
0x000a74b0: ret 0x3076; 
0x000d6508: ret 0x3101; 
0x000f77e5: ret 0x3103; 
0x0003e2d6: ret 0x3104; 
0x000f2de2: ret 0x3140; 
0x000fe983: ret 0x3273; 
0x00010504: ret 0x34; 
0x0009b3a6: ret 0x348d; 
0x00064043: ret 0x3724; 
0x00006b24: ret 0x38; 
0x0002c593: ret 0x3901; 
0x000d6fbd: ret 0x3902; 
0x00042557: ret 0x3904; 
0x000d57b7: ret 0x3906; 
0x000a801f: ret 0x3908; 
0x000ccd56: ret 0x390c; 
0x00061dec: ret 0x3910; 
0x000e9900: ret 0x3920; 
0x000821f1: ret 0x3928; 
0x00118da5: ret 0x3956; 
0x000cc3c8: ret 0x3960; 
0x0002c793: ret 0x3b04; 
0x0003acf0: ret 0x3b10; 
0x000fbb44: ret 0x3b60; 
0x00118eb6: ret 0x3b81; 
0x0008f3cf: ret 0x3c01; 
0x00044be1: ret 0x3c77; 
0x0008a218: ret 0x3c80; 
0x000d1f64: ret 0x3e74; 
0x000a0033: ret 0x3e95; 
0x00057421: ret 0x3f3c; 
0x00045321: ret 0x3f74; 
0x000b540b: ret 0x3fe; 
0x00060fc4: ret 0x3ff; 
0x000d4a95: ret 0x408b; 
0x0009d981: ret 0x40c6; 
0x00012964: ret 0x41; 
0x0004d53f: ret 0x413b; 
0x0005a3f6: ret 0x4175; 
0x000e33d8: ret 0x418b; 
0x000ba627: ret 0x428b; 
0x000a7722: ret 0x428d; 
0x0007e99e: ret 0x4439; 
0x000e8d1e: ret 0x443b; 
0x00039f44: ret 0x4483; 
0x000d5721: ret 0x4488; 
0x000311f7: ret 0x4489; 
0x0002a814: ret 0x448b; 
0x00054bd4: ret 0x448d; 
0x00057e3d: ret 0x44c7; 
0x000d1cb4: ret 0x44f6; 
0x0003c980: ret 0x4503; 
0x000fef7b: ret 0x4574; 
0x0003c7ed: ret 0x4589; 
0x00039fc0: ret 0x458b; 
0x000c5e24: ret 0x45c6; 
0x0000bb34: ret 0x46; 
0x000a1715: ret 0x465; 
0x0009f68d: ret 0x466; 
0x00068fd2: ret 0x4689; 
0x000139b4: ret 0x47; 
0x0010a750: ret 0x473; 
0x00063d54: ret 0x475; 
0x0000da24: ret 0x48; 
0x000ad314: ret 0x488d; 
0x00064894: ret 0x489; 
0x000387f7: ret 0x48b; 
0x0002a349: ret 0x48d; 
0x00007c24: ret 0x49; 
0x00063d0f: ret 0x4975; 
0x000c1e32: ret 0x498; 
0x0003818c: ret 0x4a8d; 
0x000a3676: ret 0x4c88; 
0x0002eee8: ret 0x4c89; 
0x0002eb49: ret 0x4c8b; 
0x00100a7e: ret 0x4c8d; 
0x000f9082: ret 0x4d8b; 
0x0003098b: ret 0x4e74; 
0x000a2198: ret 0x5175; 
0x00051dfa: ret 0x5189; 
0x001190eb: ret 0x51a3; 
0x0011db86: ret 0x533c; 
0x0004985f: ret 0x5403; 
0x0003180c: ret 0x542b; 
0x0003c6f7: ret 0x5438; 
0x00082231: ret 0x5439; 
0x000e9527: ret 0x543b; 
0x00044d50: ret 0x5489; 
0x0002eb35: ret 0x548b; 
0x001031db: ret 0x548d; 
0x000aad7c: ret 0x54e9; 
0x000b6332: ret 0x553; 
0x0003009c: ret 0x5574; 
0x000f7626: ret 0x5589; 
0x000c2e37: ret 0x562b; 
0x000a2573: ret 0x5664; 
0x000560df: ret 0x575; 
0x0003f025: ret 0x5755; 
0x00105e46: ret 0x6173; 
0x000677c8: ret 0x61e9; 
0x0000c984: ret 0x64; 
0x00047e5b: ret 0x6472; 
0x000d3931: ret 0x65e9; 
0x001052c4: ret 0x6601; 
0x00053cda: ret 0x6602; 
0x00104e58: ret 0x6677; 
0x000c9238: ret 0x66aa; 
0x000a36a4: ret 0x673; 
0x00113737: ret 0x6741; 
0x000e87c4: ret 0x688; 
0x00051b5c: ret 0x688b; 
0x000e1355: ret 0x688d; 
0x0009590d: ret 0x689; 
0x000890ce: ret 0x68b; 
0x0000be44: ret 0x6a; 
0x000dbc58: ret 0x6a8d; 
0x0000c224: ret 0x6c; 
0x000c6cf3: ret 0x6c7; 
0x000fbb14: ret 0x6c89; 
0x0005fdb9: ret 0x6c8b; 
0x00059d99: ret 0x6d74; 
0x00107f42: ret 0x6f74; 
0x0005a3c8: ret 0x6f75; 
0x000ad338: ret 0x708d; 
0x000fc14a: ret 0x70e9; 
0x000f344e: ret 0x71e9; 
0x0009f696: ret 0x728d; 
0x00059da5: ret 0x7373; 
0x000f4a5d: ret 0x73e9; 
0x00037c71: ret 0x7401; 
0x00044daa: ret 0x7402; 
0x000c8f6f: ret 0x7403; 
0x000d7158: ret 0x7406; 
0x000f8822: ret 0x7407; 
0x0006742c: ret 0x7408; 
0x000f450d: ret 0x7422; 
0x0004b46b: ret 0x7489; 
0x0003dfca: ret 0x748b; 
0x0004ea1b: ret 0x748d; 
0x000147b4: ret 0x75; 
0x000ab6c7: ret 0x7501; 
0x000ca33f: ret 0x7502; 
0x000c53d0: ret 0x7503; 
0x000d718d: ret 0x7508; 
0x000f884d: ret 0x750f; 
0x00057baa: ret 0x7510; 
0x00036597: ret 0x7540; 
0x00095932: ret 0x75d; 
0x00044dd6: ret 0x75e9; 
0x000599e8: ret 0x7775; 
0x000b7593: ret 0x77e8; 
0x00006b94: ret 0x78; 
0x0002cc47: ret 0x79b1; 
0x000a747e: ret 0x7a8b; 
0x00067b11: ret 0x7a8d; 
0x000d4cf6: ret 0x7ae9; 
0x000a1b13: ret 0x7c80; 
0x000a9e88: ret 0x7c83; 
0x00057980: ret 0x7c89; 
0x00080e2f: ret 0x7c8b; 
0x000ffd9b: ret 0x7c8d; 
0x000b868e: ret 0x7ce8; 
0x0008dd32: ret 0x7d9; 
0x00036af5: ret 0x8001; 
0x00047e2e: ret 0x8002; 
0x0002c37c: ret 0x8080; 
0x0002e1b2: ret 0x8101; 
0x000dbfda: ret 0x8104; 
0x0003da29: ret 0x820f; 
0x000ce8c4: ret 0x827; 
0x00033114: ret 0x8301; 
0x00054f26: ret 0x8302; 
0x000e00aa: ret 0x8303; 
0x0002cd4e: ret 0x8304; 
0x000af790: ret 0x8308; 
0x0002ba36: ret 0x830c; 
0x0002e3d5: ret 0x830f; 
0x000fbdbc: ret 0x8315; 
0x000a7ff3: ret 0x8320; 
0x000b5c77: ret 0x8331; 
0x00033358: ret 0x8353; 
0x000cc09c: ret 0x8360; 
0x000c4e32: ret 0x8366; 
0x00057205: ret 0x8389; 
0x0008abe6: ret 0x838b; 
0x00027bff: ret 0x838d; 
0x0005b983: ret 0x83ff; 
0x0005532f: ret 0x8401; 
0x00030926: ret 0x840f; 
0x00049836: ret 0x848b; 
0x000f6eb0: ret 0x84dd; 
0x000f8388: ret 0x8501; 
0x0005a39a: ret 0x850f; 
0x001190da: ret 0x8581; 
0x000ce233: ret 0x85c7; 
0x00006b74: ret 0x86; 
0x0003a78d: ret 0x860f; 
0x00085432: ret 0x862; 
0x0003c4e2: ret 0x870f; 
0x00054270: ret 0x873; 
0x0009f9e1: ret 0x874; 
0x0007dc79: ret 0x88; 
0x0002ee12: ret 0x8801; 
0x000acd5d: ret 0x8830; 
0x0002d172: ret 0x88b; 
0x0002bae7: ret 0x8901; 
0x0003dc56: ret 0x8902; 
0x000aa603: ret 0x8903; 
0x00067734: ret 0x8904; 
0x0004e5cd: ret 0x8908; 
0x001089f7: ret 0x8909; 
0x00028681: ret 0x890a; 
0x000f895f: ret 0x890c; 
0x00091dc6: ret 0x890d; 
0x000af98c: ret 0x8910; 
0x0005baa6: ret 0x8921; 
0x0007988b: ret 0x8930; 
0x000ec516: ret 0x8958; 
0x000ce16d: ret 0x8966; 
0x0007fd5e: ret 0x8b; 
0x00030fe2: ret 0x8b01; 
0x0002c881: ret 0x8b04; 
0x000a23c9: ret 0x8b07; 
0x0003e813: ret 0x8b08; 
0x0002ba63: ret 0x8b0c; 
0x000a009b: ret 0x8b10; 
0x000d32aa: ret 0x8b14; 
0x000d356d: ret 0x8b1c; 
0x000f7884: ret 0x8b8b; 
0x00032334: ret 0x8d01; 
0x0008ef38: ret 0x8d0f; 
0x000614cc: ret 0x8e0f; 
0x000df6ef: ret 0x9189; 
0x000613a4: ret 0x920f; 
0x00033b14: ret 0x932b; 
0x000e4058: ret 0x9439; 
0x00077032: ret 0x946; 
0x000d0c3e: ret 0x9688; 
0x0003d8ce: ret 0x973; 
0x000597f4: ret 0x975; 
0x00047ec3: ret 0x98eb; 
0x00057a39: ret 0x9ae9; 
0x00062fd7: ret 0x9c0f; 
0x00006a48: ret 0x9d0; 
0x000a0016: ret 0x9e75; 
0x000f3467: ret 0x9e9; 
0x00036ae8: ret 0x9eb; 
0x00062e20: ret 0x9f0f; 
0x000050c0: ret 0xa; 
0x0012a386: ret 0xa02; 
0x000b2e13: ret 0xa76; 
0x00118e60: ret 0xa88f; 
0x0000d708: ret 0xa96; 
0x0009ff7d: ret 0xa975; 
0x000eec58: ret 0xaceb; 
0x000e2dcc: ret 0xaee8; 
0x00109df2: ret 0xaeeb; 
0x0006ecde: ret 0xafe8; 
0x00005394: ret 0xb; 
0x0003c6cd: ret 0xb075; 
0x00100432: ret 0xb2; 
0x0009cbc4: ret 0xb44; 
0x000af959: ret 0xb489; 
0x000f6328: ret 0xb48b; 
0x0010a9ae: ret 0xb4e9; 
0x0002e3ad: ret 0xb60f; 
0x000e1a03: ret 0xb70f; 
0x0004e9ec: ret 0xb7eb; 
0x00060e7f: ret 0xb8; 
0x000f6ff1: ret 0xbae9; 
0x0004ea37: ret 0xbaeb; 
0x000677cf: ret 0xbbeb; 
0x00047e85: ret 0xbc83; 
0x000e35be: ret 0xbce8; 
0x000d14b1: ret 0xbd04; 
0x00095e49: ret 0xbe0f; 
0x00118ed7: ret 0xbe30; 
0x0004e9e5: ret 0xbeeb; 
0x000a4413: ret 0xbf0f; 
0x000010c4: ret 0xc; 
0x0003e08b: ret 0xc031; 
0x0005be2c: ret 0xc083; 
0x00028122: ret 0xc085; 
0x000311bd: ret 0xc102; 
0x000bff97: ret 0xc103; 
0x000a2699: ret 0xc104; 
0x00080bd4: ret 0xc105; 
0x000a26ac: ret 0xc106; 
0x00030f70: ret 0xc109; 
0x000311e5: ret 0xc10a; 
0x000311a9: ret 0xc114; 
0x000311d1: ret 0xc11e; 
0x0007a318: ret 0xc139; 
0x000ffa73: ret 0xc166; 
0x0004bca1: ret 0xc189; 
0x000b4336: ret 0xc1d8; 
0x0004ea30: ret 0xc1eb; 
0x000483da: ret 0xc269; 
0x0009c74a: ret 0xc28; 
0x00037c6f: ret 0xc283; 
0x000fb669: ret 0xc2f7; 
0x0011de46: ret 0xc300; 
0x00048332: ret 0xc33; 
0x0009c6d7: ret 0xc34; 
0x00044f24: ret 0xc589; 
0x000636bc: ret 0xc6; 
0x000300b4: ret 0xc601; 
0x00092a40: ret 0xc689; 
0x00030942: ret 0xc701; 
0x000d6606: ret 0xc702; 
0x0002cd63: ret 0xc704; 
0x00098ef1: ret 0xc729; 
0x000b5387: ret 0xc731; 
0x000f1fd6: ret 0xc739; 
0x00095046: ret 0xc789; 
0x0003308b: ret 0xc801; 
0x0003c535: ret 0xc84; 
0x00055751: ret 0xc889; 
0x00106997: ret 0xc8d; 
0x00061dd3: ret 0xc931; 
0x0002cd40: ret 0xc985; 
0x0004b91d: ret 0xc9c1; 
0x0005cb1d: ret 0xc9d8; 
0x0004a1f7: ret 0xca09; 
0x000823fe: ret 0xca0f; 
0x00044844: ret 0xca21; 
0x000449f2: ret 0xca31; 
0x000fc601: ret 0xca80; 
0x000ab9f6: ret 0xca83; 
0x0004aadf: ret 0xcac1; 
0x0005cced: ret 0xcad8; 
0x000679ee: ret 0xcd75; 
0x000446de: ret 0xcd89; 
0x00063549: ret 0xcde9; 
0x000d8294: ret 0xce29; 
0x00054742: ret 0xce80; 
0x0004c403: ret 0xcec1; 
0x00009118: ret 0xcf6; 
0x00036b32: ret 0xcf89; 
0x00049952: ret 0xcfc1; 
0x00001f4c: ret 0xd; 
0x0005d85a: ret 0xd028; 
0x000db8b3: ret 0xd029; 
0x0010b5bb: ret 0xd039; 
0x000a74e0: ret 0xd077; 
0x0002afb8: ret 0xd089; 
0x000c3481: ret 0xd0eb; 
0x0004e66a: ret 0xd0f7; 
0x0003c0dc: ret 0xd101; 
0x000f5b93: ret 0xd108; 
0x00063e56: ret 0xd129; 
0x000c82fa: ret 0xd131; 
0x0003a132: ret 0xd15; 
0x00067383: ret 0xd189; 
0x000d6f38: ret 0xd1e9; 
0x000d8af0: ret 0xd201; 
0x000483b2: ret 0xd269; 
0x0006331b: ret 0xd284; 
0x00098798: ret 0xd285; 
0x000446ac: ret 0xd2f7; 
0x00037d32: ret 0xd39; 
0x0006399e: ret 0xd589; 
0x000d5fd0: ret 0xd601; 
0x000e22b7: ret 0xd639; 
0x00094cdd: ret 0xd689; 
0x0004b8f9: ret 0xd701; 
0x0006b426: ret 0xd789; 
0x000dc98a: ret 0xd874; 
0x000b44b4: ret 0xd901; 
0x00059899: ret 0xd975; 
0x00010938: ret 0xda1; 
0x000b39b4: ret 0xda52; 
0x0005be43: ret 0xdaf7; 
0x000f9f3b: ret 0xdb7d; 
0x000b35d2: ret 0xdc01; 
0x000a1c35: ret 0xdf74; 
0x0004e9c4: ret 0xdfeb; 
0x00064dc8: ret 0xe; 
0x0004e5bd: ret 0xe083; 
0x00127ac1: ret 0xe0a; 
0x0004f44f: ret 0xe0c1; 
0x0005bdba: ret 0xe0d3; 
0x000d499b: ret 0xe0eb; 
0x000ccb0b: ret 0xe175; 
0x0005cc27: ret 0xe1d9; 
0x0003a7bc: ret 0xe272; 
0x000284b7: ret 0xe280; 
0x0002d6e9: ret 0xe281; 
0x00051116: ret 0xe283; 
0x0002d707: ret 0xe2c1; 
0x0006acc4: ret 0xe63; 
0x0003ae41: ret 0xe672; 
0x0003c6c6: ret 0xe84; 
0x00062142: ret 0xe883; 
0x0002ae73: ret 0xe889; 
0x000380d8: ret 0xe901; 
0x00047ffe: ret 0xe902; 
0x000d8a8c: ret 0xe903; 
0x000d8aae: ret 0xe904; 
0x00061562: ret 0xe907; 
0x000ec6e4: ret 0xe90f; 
0x00082310: ret 0xe910; 
0x0010b5ef: ret 0xe977; 
0x000483dc: ret 0xe995; 
0x000c93bb: ret 0xe9c1; 
0x000d09cb: ret 0xea29; 
0x000a7297: ret 0xea39; 
0x00005cb8: ret 0xea5; 
0x00063415: ret 0xea74; 
0x0002d855: ret 0xea75; 
0x0003c51f: ret 0xea83; 
0x0002d9c6: ret 0xeac0; 
0x0002d6fb: ret 0xeac1; 
0x0002d6dd: ret 0xead1; 
0x000a790b: ret 0xead3; 
0x0002bac5: ret 0xeb01; 
0x000d28b9: ret 0xeb02; 
0x0010b3fc: ret 0xeb0c; 
0x000ed103: ret 0xeceb; 
0x0003e577: ret 0xed31; 
0x0003bd17: ret 0xed72; 
0x000fb63a: ret 0xed74; 
0x000c26a4: ret 0xee7d; 
0x0003b049: ret 0xee83; 
0x00033121: ret 0xef75; 
0x000f64d2: ret 0xef77; 
0x000ff935: ret 0xf001; 
0x0002ec4a: ret 0xf01; 
0x00054dc8: ret 0xf02; 
0x00108d21: ret 0xf039; 
0x00054337: ret 0xf04; 
0x000ff777: ret 0xf08; 
0x00044c4c: ret 0xf089; 
0x00057a92: ret 0xf10; 
0x0005c646: ret 0xf189; 
0x0010880a: ret 0xf1c3; 
0x000e38e0: ret 0xf209; 
0x0007a201: ret 0xf229; 
0x00044a5e: ret 0xf231; 
0x001004da: ret 0xf246; 
0x000f75c8: ret 0xf273; 
0x000fb68b: ret 0xf274; 
0x000f661e: ret 0xf277; 
0x0012e3b0: ret 0xf2a8; 
0x000f644a: ret 0xf2d9; 
0x000f738a: ret 0xf2fc; 
0x001134f8: ret 0xf2fd; 
0x0012fba0: ret 0xf2fe; 
0x000f5803: ret 0xf30; 
0x000f1e9a: ret 0xf358; 
0x000ee8da: ret 0xf362; 
0x000f8454: ret 0xf372; 
0x000f8a9e: ret 0xf377; 
0x001329f0: ret 0xf3ae; 
0x000e014a: ret 0xf3b; 
0x000e68aa: ret 0xf3d3; 
0x00068696: ret 0xf40; 
0x000e207a: ret 0xf458; 
0x00059879: ret 0xf472; 
0x00115a34: ret 0xf4c1; 
0x000d68da: ret 0xf4e2; 
0x000d258a: ret 0xf524; 
0x000d0d8a: ret 0xf543; 
0x00137e20: ret 0xf54e; 
0x00121ab8: ret 0xf56b; 
0x000d1c99: ret 0xf589; 
0x000c414a: ret 0xf5ef; 
0x000c4f4a: ret 0xf5fb; 
0x000c23da: ret 0xf627; 
0x0006053d: ret 0xf631; 
0x0013b630: ret 0xf63d; 
0x0005cf83: ret 0xf66; 
0x000323ae: ret 0xf675; 
0x000661b3: ret 0xf685; 
0x000bbc8a: ret 0xf6b1; 
0x000b568a: ret 0xf6de; 
0x00122630: ret 0xf75c; 
0x0005c749: ret 0xf77c; 
0x0005d438: ret 0xf77f; 
0x00047393: ret 0xf789; 
0x000a32ea: ret 0xf816; 
0x000a3f9a: ret 0xf835; 
0x0002fc1d: ret 0xf883; 
0x0003487b: ret 0xf889; 
0x00122ec0: ret 0xf8ab; 
0x000e0b36: ret 0xf929; 
0x001446bc: ret 0xf96f; 
0x0008bfaa: ret 0xf971; 
0x0008a5fa: ret 0xf9c8; 
0x001233e8: ret 0xf9e0; 
0x00044ad0: ret 0xfa01; 
0x00123540: ret 0xfa0e; 
0x0004c18b: ret 0xfa21; 
0x00046c63: ret 0xfa29; 
0x00044a76: ret 0xfa31; 
0x0007a334: ret 0xfa80; 
0x0005fe90: ret 0xfa81; 
0x0004cb1f: ret 0xfa83; 
0x0007b36a: ret 0xfab0; 
0x001497ec: ret 0xfab4; 
0x000780ea: ret 0xfabd; 
0x00047c3c: ret 0xfad1; 
0x000699aa: ret 0xfb97; 
0x0003024d: ret 0xfbb6; 
0x0006775a: ret 0xfbb9; 
0x00036234: ret 0xfbc1; 
0x00046b65: ret 0xfbdf; 
0x0005345a: ret 0xfbee; 
0x0006648f: ret 0xfc02; 
0x00074a17: ret 0xfc0b; 
0x00124068: ret 0xfc17; 
0x00080a58: ret 0xfc23; 
0x0006438a: ret 0xfc2a; 
0x0008ca55: ret 0xfc35; 
0x000b8c64: ret 0xfc65; 
0x000be7e7: ret 0xfc6f; 
0x000c66ae: ret 0xfc79; 
0x000cff44: ret 0xfc84; 
0x0005d7ca: ret 0xfc8e; 
0x000dd79c: ret 0xfc9b; 
0x000e7203: ret 0xfca5; 
0x000f47b8: ret 0xfcc8; 
0x0005411a: ret 0xfd0b; 
0x001248f0: ret 0xfd28; 
0x00047d6b: ret 0xfd83; 
0x00039dec: ret 0xfd89; 
0x000445da: ret 0xfe05; 
0x000409aa: ret 0xfe27; 
0x00047556: ret 0xfeb8; 
0x0003768a: ret 0xfef1; 
0x000f9a07: ret 0xff00; 
0x0005cfa3: ret 0xff2; 
0x00047cf7: ret 0xff31; 
0x00047cb5: ret 0xffb8; 
0x00040b40: ret 0xffb9; 
0x000b00f7: ret 0xffe9; 
0x0010df0d: ret 0xffee; 
0x0011faa1: ret 0xfff0; 
0x00108094: ret 0xfff1; 
0x000790e2: ret 0xfff2; 
0x000b07cf: ret 0xfff3; 
0x000d6ef7: ret 0xfff4; 
0x000c7c90: ret 0xfff5; 
0x000b6e3a: ret 0xfff6; 
0x000ab3ca: ret 0xfff7; 
0x00096ef4: ret 0xfff8; 
0x000579da: ret 0xfff9; 
0x00076e65: ret 0xfffa; 
0x000363f9: ret 0xfffb; 
0x0002a9a5: ret 0xfffc; 
0x000311af: ret 0xfffd; 
0x000374aa: ret 0xfffe; 
0x00026cdd: ret 0xffff; 
0x00002de4: ret 1; 
0x00003ab8: ret 2; 
0x00004ab4: ret 3; 
0x00005414: ret 4; 
0x00005788: ret 5; 
0x00004878: ret 6; 
0x00004340: ret 7; 
0x00005344: ret 8; 
0x00004acc: ret 9; 
0x00021945: rol byte ptr [0x15180800], 0; pop es; rol dword ptr [0x15180c00], 0; pop es; ret; 
0x000d0113: rol byte ptr [eax + 0xf2eff78], cl; xchg eax, esp; ret 0xf685; 
0x000bf675: rol byte ptr [eax + eax], 0x81; ret; 
0x000a0091: rol byte ptr [eax - 0x468bffc6], 0x83; rol byte ptr [ecx], 0x83; ret 0x8b10; 
0x000e134f: rol byte ptr [eax - 0x6bf0f5c8], cl; ret 0x688d; 
0x000b0513: rol byte ptr [eax], 0; add byte ptr [ecx - 0x769bdbac], cl; ret 0xb489; 
0x000326de: rol byte ptr [eax], cl; neg edx; pop ebp; ret; 
0x0002e53f: rol byte ptr [eax], cl; neg edx; ret; 
0x001397f8: rol byte ptr [ebp + 1], 0; ret; 
0x000d225a: rol byte ptr [ebp - 0x47f88a2e], 1; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; ret; 
0x000f32f1: rol byte ptr [ebp - 0x76ab8b40], cl; ret 0xeac1; 
0x00067ec8: rol byte ptr [ebx + 0x548b02e0], 0x24; adc byte ptr [ecx], ch; ret 0x5489; 
0x0003248f: rol byte ptr [ebx + 0x5e5b04c4], 0x5f; ret; 
0x0003286e: rol byte ptr [ebx + 0x5e5b04c4], 1; ret; 
0x0009dc20: rol byte ptr [ebx + 0x5e5b08c4], 0x5f; ret; 
0x000ab523: rol byte ptr [ebx + 0x5e5b0cc4], 0x5f; ret; 
0x0003254d: rol byte ptr [ebx + 0x5e5b0cc4], 1; ret; 
0x0002c0b8: rol byte ptr [ebx + 0x5e5b10c4], 0x5f; ret; 
0x000c2654: rol byte ptr [ebx + 0x5e5b10c4], 1; pop edi; ret; 
0x0003280e: rol byte ptr [ebx + 0x5e5b10c4], 1; ret; 
0x000673b6: rol byte ptr [ebx + 0x5e5b14c4], 0x5f; ret; 
0x00081671: rol byte ptr [ebx + 0x5e5b14c4], 1; ret; 
0x000c0c5e: rol byte ptr [ebx + 0x5e5b18c4], 0x5f; ret; 
0x00087715: rol byte ptr [ebx + 0x5e5b1cc4], 0x5f; ret; 
0x0006501c: rol byte ptr [ebx + 0x5e5b20c4], 0x5f; ret; 
0x00042946: rol byte ptr [ebx + 0x5e5b24c4], 0x5f; ret; 
0x0005275e: rol byte ptr [ebx + 0x5e5b28c4], 0x5f; ret; 
0x000ed0f3: rol byte ptr [ebx + 0x5e5b28c4], 1; pop edi; ret; 
0x0008de44: rol byte ptr [ebx + 0x5e5b2cc4], 0x5f; ret; 
0x000d201b: rol byte ptr [ebx + 0x5e5b34c4], 0x5f; ret; 
0x000652b5: rol byte ptr [ebx + 0x5e5b3cc4], 0x5f; ret; 
0x000654bd: rol byte ptr [ebx + 0x5e5b40c4], 0x5f; ret; 
0x00064cb7: rol byte ptr [ebx + 0x5e5b48c4], 0x5f; ret; 
0x00064b58: rol byte ptr [ebx + 0x5e5b54c4], 0x5f; ret; 
0x00064a20: rol byte ptr [ebx + 0x5e5b5cc4], 0x5f; ret; 
0x000912a3: rol byte ptr [ebx + 0x5f5b10c4], 1; ret; 
0x000629f9: rol byte ptr [ebx + 0x5f5e04c4], 0x5d; ret; 
0x000a454a: rol byte ptr [ebx + 0x5f5e04c4], 1; pop ebp; ret; 
0x0002a516: rol byte ptr [ebx + 0x5f5e05c4], 0x5d; ret; 
0x0005d296: rol byte ptr [ebx + 0x5f5e08c4], 0x5d; ret; 
0x00064920: rol byte ptr [ebx + 0x5f5e08c4], 1; pop ebp; ret; 
0x0005d277: rol byte ptr [ebx + 0x5f5e08c4], cl; pop ebp; ret; 
0x000ab7e1: rol byte ptr [ebx + 0x5f5e10c4], 0x5d; ret; 
0x0005d3fe: rol byte ptr [ebx + 0x5f5e10c4], cl; pop ebp; ret; 
0x0005d360: rol byte ptr [ebx + 0x5f5e18c4], cl; pop ebp; ret; 
0x00051b1e: rol byte ptr [ebx + 0x5f5e1cc4], 0x5d; ret; 
0x0005d0f1: rol byte ptr [ebx + 0x5f5e1cc4], cl; pop ebp; ret; 
0x00051972: rol byte ptr [ebx + 0x5f5e20c4], 0x5d; ret; 
0x0005b7c6: rol byte ptr [ebx + 0x5f5e40c4], cl; pop ebp; ret; 
0x00047ff1: rol byte ptr [ebx + 0x9824bc], cl; add byte ptr [eax], al; jno 0x4800a; popfd; ret 0xc283; 
0x000b5e2f: rol byte ptr [ebx + eax*4], 0xc4; add al, 0x5b; pop esi; ret; 
0x000e8754: rol byte ptr [ebx - 0x1789f602], 1; xor eax, eax; pop esi; ret; 
0x0005be7a: rol byte ptr [ebx - 0x1d7ce010], 0x20; add eax, edx; pop esi; ret; 
0x000f77e8: rol byte ptr [ebx - 0x2a76fe40], 0x83; ret 0xf01; 
0x0005be52: rol byte ptr [ebx - 0x2ffedf1e], 0x5e; ret; 
0x0005bfb2: rol byte ptr [ebx - 0x3b7c8020], 1; or byte ptr [esi + 0x5f], bl; ret; 
0x000bd966: rol byte ptr [ebx - 0x3b7cfd40], 0x10; pop ebx; pop esi; ret; 
0x0008a59b: rol byte ptr [ebx - 0x3b7cfd40], 1; adc byte ptr [ebx + 0x5e], bl; ret; 
0x00084b3a: rol byte ptr [ebx - 0x3b7cfe40], 0x10; pop ebx; pop esi; ret; 
0x0009674c: rol byte ptr [ebx - 0x3b7cfe40], 4; pop ebx; ret; 
0x000bb1f2: rol byte ptr [ebx - 0x6af0f901], cl; ret 0xf089; 
0x000bb1b8: rol byte ptr [ebx - 0x6bf0f901], cl; ret 0xf089; 
0x00037099: rol byte ptr [ebx - 0x6bf0fd06], 0xc0; add esp, 0xc; ret; 
0x0008340e: rol byte ptr [ebx - 0x6bf0fe08], cl; ret 0x1689; 
0x00083ffa: rol byte ptr [ebx - 0x6bf0fe08], cl; ret 0x1789; 
0x00046f00: rol byte ptr [ebx - 0x7bf0fd08], cl; ret 0; 
0x0000cc2c: rol byte ptr [ebx], 1; add byte ptr [eax], al; and al, byte ptr [eax]; or byte ptr [eax], al; ret; 
0x00132327: rol byte ptr [ebx], 1; add cl, cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00131c99: rol byte ptr [ebx], cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0004e2b5: rol byte ptr [ecx + 0x7fffffe2], 0; setne al; ret; 
0x000fb05d: rol byte ptr [ecx + 0x88c4], 0; pop ebx; pop esi; ret; 
0x00056d98: rol byte ptr [ecx + 0x8cc4], 1; add byte ptr [ebx + 0x5e], bl; ret; 
0x000f89be: rol byte ptr [ecx + eax*8], 0xe2; add al, 0xf7; ret 0; 
0x000f8852: rol byte ptr [ecx + eax*8], 0xea; add al, 0xf6; ret 0x7503; 
0x0002df7c: rol byte ptr [ecx], 0x39; sal byte ptr [ebp - 0xd], 1; ret; 
0x0004e311: rol byte ptr [ecx], 0x39; sal dword ptr [ebp - 0xe], 0x5b; pop esi; pop edi; ret; 
0x00104344: rol byte ptr [ecx], 0x39; sal dword ptr [edi - 0xb], 1; ret; 
0x00062491: rol byte ptr [ecx], 0x81; ret 0x272; 
0x000a0726: rol byte ptr [ecx], 0x81; ret 0x466; 
0x000dab6b: rol byte ptr [ecx], 0x83; ret 0x3901; 
0x000a801c: rol byte ptr [ecx], 0x83; ret 0x3908; 
0x0009fe2d: rol byte ptr [ecx], 0x83; ret 0x3910; 
0x00062512: rol byte ptr [ecx], 0x83; ret 0x3b04; 
0x00077792: rol byte ptr [ecx], 0x83; ret 0x8301; 
0x000a0098: rol byte ptr [ecx], 0x83; ret 0x8b10; 
0x000f92c4: rol byte ptr [ecx], 0x83; ret 0xf01; 
0x000f77ea: rol byte ptr [ecx], 0x89; aad 0x83; ret 0xf01; 
0x0009b187: rol byte ptr [ecx], 0x89; or esp, 0x22; add byte ptr [eax], al; pop ebx; ret; 
0x000311f4: rol byte ptr [ecx], 0x89; ret 0x4489; 
0x000cd003: rol byte ptr [ecx], 0x8b; dec esi; or al, 0x83; ret 0x3910; 
0x00139469: rol byte ptr [ecx], 0xa; push cs; adc al, 0x41; ret; 
0x0014a4db: rol byte ptr [ecx], 2; ror byte ptr [edx], cl; push cs; adc al, 0x41; ret; 
0x0013ee47: rol byte ptr [ecx], 3; sub al, 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00032bf2: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5b04c4], 1; ret; 
0x0003280c: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5b10c4], 1; ret; 
0x00047e55: rol byte ptr [edi], 0xc1; clc; add edi, dword ptr [ecx]; ret 0x6472; 
0x0012e28f: rol byte ptr [edx + eax], 0x74; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000478c8: rol byte ptr [edx], 0x39; ret 0x820f; 
0x0005bca9: rol byte ptr [edx], 0x5e; ret; 
0x00053cd7: rol byte ptr [edx], 0x83; ret 0x6602; 
0x0007187d: rol cl, 1; call 0x89d7218c; ret 0xeac1; 
0x000732e1: rol cl, 1; call 0x89d73bf0; ret 0xeac1; 
0x00074d9f: rol cl, 1; call 0x89d756ae; ret 0xeac1; 
0x000a7716: rol cl, 1; call 0x89da8025; ret 0xeac1; 
0x000a78f0: rol cl, 1; call 0x89da81ff; ret 0xeac1; 
0x000a86c0: rol cl, 1; call 0x89da8fc9; ret 0xeac1; 
0x000a86fa: rol cl, 1; call 0x89da9003; ret 0xeac1; 
0x000a8708: rol cl, 1; call 0x89da9017; ret 0xeac1; 
0x000ea775: rol cl, 1; call 0x89deb07e; ret 0xeac1; 
0x00036ed9: rol cl, 1; call 0xcc7f1ff; pop ebx; ret; 
0x000cf725: rol cl, 1; clc; pop ds; or eax, 1; ret; 
0x0005bd9b: rol cl, 1; cli; pop ds; sar eax, cl; ret; 
0x0002194d: rol dword ptr [0x15180c00], 0; pop es; ret; 
0x000740fb: rol dword ptr [eax + 0xf], -0x7c; ret; 
0x000bf585: rol dword ptr [eax + eax], -0x7f; ret; 
0x00120805: rol dword ptr [eax], 0; ret; 
0x000d10f8: rol dword ptr [ebx + 0x5e5b04c4], cl; pop edi; ret; 
0x0004ae4e: rol dword ptr [ebx - 0x1e3efc1f], 1; add ecx, dword ptr [ebx - 0x2cfb7abc]; call 0x831bb2e7; ret 0x8301; 
0x0004aee0: rol dword ptr [ebx - 0x1e3efc1f], 1; add ecx, dword ptr [ebx - 0x2cff7abc]; call 0x831ab379; ret 0x8301; 
0x0005c8b4: rol dword ptr [ebx - 0x6947f01f], 0x69; add byte ptr [eax], al; sar eax, cl; and eax, 1; ret; 
0x00044082: rol dword ptr [ebx], -0x30; adc byte ptr [eax], al; mov eax, dword ptr [ecx + 0x6400]; ret; 
0x000ffa96: rol dword ptr [ebx], -0x77; ret 0xead3; 
0x001317e5: rol dword ptr [ebx], cl; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00061de9: rol dword ptr [ecx], -0x7d; ret 0x3910; 
0x0003ce55: rol dword ptr [ecx], -0x7d; ret 0x8304; 
0x000cc099: rol dword ptr [ecx], -0x7d; ret 0x8360; 
0x000b4366: rol dword ptr [ecx], -0x80; ret 0x8830; 
0x000f8214: rol dword ptr [ecx], 0x39; ret 0xf77f; 
0x0012df87: rol dword ptr [ecx], 0xa; push cs; adc al, 0x41; ret; 
0x00137b58: rol dword ptr [ecx], 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00054dc5: rol dword ptr [edx], -0x7d; ret 0xf02; 
0x00060b8b: rol dword ptr [edx], 0x40; ret; 
0x00060b6b: rol dword ptr [edx], 0x48; ret; 
0x0013f27a: rol dword ptr [edx], 0xa; push cs; adc al, 0x41; ret; 
0x000909b5: rol dword ptr [esi], 1; or al, 0; mov eax, dword ptr [ecx + 0xb7d8]; ret; 
0x000653cb: rol dword ptr [esi], 1; cld; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0006b6be: rol eax, cl; and dword ptr [edx], eax; xor eax, eax; pop ebx; ret; 
0x0004e5cc: rol edx, 8; mov dword ptr [esp], edx; fldcw word ptr [esp]; add esp, 4; ret; 
0x00122dbc: ror bh, 1; add dword ptr [eax], eax; ret; 
0x0003f665: ror byte ptr [eax + eax], 0x81; ret; 
0x0010961c: ror byte ptr [eax - 0x3fcee7bf], 1; ret; 
0x000ba3d9: ror byte ptr [eax], 0x89; add al, 0x24; call dword ptr [esp + 0x10]; add esp, 8; ret; 
0x0012a9ff: ror byte ptr [eax], 1; add cl, byte ptr [esi + 0xa]; push cs; adc al, 0x41; ret; 
0x0013c9b3: ror byte ptr [eax], 1; add edi, dword ptr [edx + 0x140e0a03]; inc ecx; ret; 
0x0014c133: ror byte ptr [eax], 1; add esi, dword ptr [0x140e0a01]; inc ecx; ret; 
0x00148a83: ror byte ptr [eax], 2; scasb al, byte ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012de2b: ror byte ptr [eax], 3; sbb dword ptr [ebx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0004e187: ror byte ptr [ebp + 0x5e5bf865], 0x5d; ret; 
0x0010433e: ror byte ptr [ebp - 0x7cfeedac], 0xc0; add dword ptr [ecx], edi; sal dword ptr [edi - 0xb], 1; ret; 
0x0009f9db: ror byte ptr [ebx + 0x394c2454], 1; ret 0x874; 
0x000f9afa: ror byte ptr [ebx - 0x76e7dbb4], 1; xor eax, eax; ret; 
0x000f96fb: ror byte ptr [ebx - 0x76ebdbac], 2; xor eax, eax; ret; 
0x000f96cc: ror byte ptr [ebx - 0x76efdbac], 2; xor eax, eax; ret; 
0x000f9a27: ror byte ptr [ebx - 0x76efdbb4], 0x11; ret; 
0x0002d70c: ror byte ptr [ecx + 0x10e2c1c2], 1; add eax, edx; shr eax, 0x18; ret; 
0x000a8015: ror byte ptr [ecx + 0x4428932], 0x83; rol byte ptr [ecx], 0x83; ret 0x3908; 
0x000a8137: ror byte ptr [ecx + 0x442893a], 0x83; rol byte ptr [ecx], 0x83; ret 0x3908; 
0x0005c890: ror byte ptr [ecx + 0x8eac1c2], 1; add eax, edx; and eax, 0x3f; ret; 
0x0009890a: ror byte ptr [ecx - 0x14afdb8c], 1; ret 0x44c7; 
0x0004ee33: ror byte ptr [ecx - 0x16e3dbbc], 1; ret; 
0x000d6cfc: ror byte ptr [ecx], 0x46; and byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0004bd9c: ror byte ptr [ecx], cl; ret 0xca31; 
0x000d60f6: ror byte ptr [ecx], cl; ret 0xf231; 
0x0004be14: ror byte ptr [ecx], cl; ret 0xfa31; 
0x000e934e: ror byte ptr [edi], 0x84; mov esi, 0x89000000; ret 0xe280; 
0x0009b474: ror byte ptr [edi], 0x84; ret 0; 
0x00071f20: ror byte ptr [edi], 0x84; ret 1; 
0x000b0f46: ror byte ptr [edi], 0x84; ret 9; 
0x00031b42: ror byte ptr [edi], 0x84; ret; 
0x000e3006: ror byte ptr [edi], 0x85; ret 0; 
0x000afe7d: ror byte ptr [edi], 0x85; ret; 
0x000b00f4: ror byte ptr [edi], 0x89; ret 0xffe9; 
0x000b4f8d: ror byte ptr [edi], 0x89; ret; 
0x000d4f8d: ror byte ptr [edi], 0x8f; ret; 
0x0005d857: ror byte ptr [edi], 0x92; ret 0xd028; 
0x0002fe47: ror byte ptr [edi], 0x94; ret 0xd089; 
0x000a871f: ror byte ptr [edi], 0x94; ret 0xdaf7; 
0x000576a0: ror byte ptr [edi], 0x95; ret 0xd089; 
0x000d3aad: ror byte ptr [edi], 0x95; ret 0xe0d3; 
0x0005fad8: ror byte ptr [edi], 0x95; ror byte ptr [edi], 0xb6; sal bh, 0xd8; add esp, 0x14; ret; 
0x00096749: ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfe40], 4; pop ebx; ret; 
0x000f9af7: ror byte ptr [edi], 0xb6; ror byte ptr [ebx - 0x76e7dbb4], 1; xor eax, eax; ret; 
0x000f96f8: ror byte ptr [edi], 0xb6; ror byte ptr [ebx - 0x76ebdbac], 2; xor eax, eax; ret; 
0x000f96c9: ror byte ptr [edi], 0xb6; ror byte ptr [ebx - 0x76efdbac], 2; xor eax, eax; ret; 
0x00065858: ror byte ptr [edi], 0xb6; sal bh, 0xd8; add esp, 0x14; pop ebx; ret; 
0x0005fadb: ror byte ptr [edi], 0xb6; sal bh, 0xd8; add esp, 0x14; ret; 
0x000bbdd8: ror byte ptr [edi], 0xb6; sal bh, 0xd8; add esp, 0x18; pop ebx; ret; 
0x0005d624: ror byte ptr [edi], 0xb6; sal bh, 0xd8; add esp, 0x24; pop ebx; ret; 
0x000fb690: ror byte ptr [edi], 0xb6; shr byte ptr [ecx], cl; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00063318: ror byte ptr [edi], 1; lahf; ret 0xd284; 
0x00063546: ror byte ptr [edi], 1; pushfd; ret 0xcde9; 
0x000a20e3: ror byte ptr [edi], 1; pushfd; ret 0xd284; 
0x00060ea4: ror byte ptr [edi], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x00052429: ror byte ptr [edi], cl; xchg eax, esp; sal bh, 0xd8; ret; 
0x001042e6: ror byte ptr [edx - 0x2fd600aa], cl; pop esi; pop edi; ret; 
0x0013eea4: ror byte ptr [edx], 0xe; adc al, 0x41; ret; 
0x0014326e: ror byte ptr [edx], 1; push cs; adc al, 0x41; ret; 
0x0012da13: ror byte ptr [edx], 2; pop ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00135775: ror byte ptr [edx], cl; push cs; adc al, 0x41; ret; 
0x0005d172: ror cl, cl; ret; 
0x0003f4fd: ror dword ptr [eax + eax], -0x7f; ret; 
0x0003c6bc: ror dword ptr [eax - 0x7be7dbac], 1; inc ebp; add byte ptr [edi], cl; xchg eax, ebp; ret 0xe84; 
0x000597ee: ror dword ptr [ebp + 0x39fe0a44], 1; ret 0x975; 
0x0005d123: ror dword ptr [ebx - 0x2cfbdbbc], -0x18; add esp, 0x10; ret; 
0x000f3dfa: ror dword ptr [ecx + 0x5d5f5ee8], 1; ret; 
0x000ea65b: ror dword ptr [ecx - 0x3b7c000d], 0xc; pop ebx; ret; 
0x000cf71f: ror dword ptr [ecx], 1; sal dword ptr [ecx + ecx - 0x77], -0x30; sar eax, 0x1f; or eax, 1; ret; 
0x0007ee98: ror dword ptr [edi], -0x7c; ret; 
0x001481fe: ror dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x00129f4d: ror dword ptr [edx], 1; push cs; adc al, 0x41; ret; 
0x0014a9d9: ror dword ptr [edx], cl; push cs; adc al, 0x41; ret; 
0x0003e701: ror dx, 8; mov word ptr [eax + 0xa], dx; mov dword ptr [eax + 0x18], 0; ret; 
0x0004e5e9: ror eax, 8; and eax, 3; add esp, 4; ret; 
0x000315b8: ror ebp, -6; adc dword ptr [eax], eax; mov eax, dword ptr [esp + 4]; mov dword ptr [ecx + 0x1314], eax; ret; 
0x0003e702: ror edx, 8; mov word ptr [eax + 0xa], dx; mov dword ptr [eax + 0x18], 0; ret; 
0x000db7c6: sal ah, 0xff; add esp, 0x10; pop ebx; ret; 
0x000db497: sal ah, 0xff; add esp, 0x2c; pop ebx; pop esi; ret; 
0x000967a2: sal bh, 0xd0; add eax, 2; add esp, 8; pop ebx; ret; 
0x0005bca5: sal bh, 0xd0; add eax, 2; pop esi; ret; 
0x000b484e: sal bh, 0xd0; add eax, 4; leave; ret; 
0x0004e2a1: sal bh, 0xd0; add eax, 4; ret; 
0x0002bd10: sal bh, 0xd8; add esp, 0x10; pop ebx; pop esi; ret; 
0x000d6cb2: sal bh, 0xd8; add esp, 0x14; pop ebx; pop esi; ret; 
0x0006585b: sal bh, 0xd8; add esp, 0x14; pop ebx; ret; 
0x0005fade: sal bh, 0xd8; add esp, 0x14; ret; 
0x000bbddb: sal bh, 0xd8; add esp, 0x18; pop ebx; ret; 
0x00050b94: sal bh, 0xd8; add esp, 0x20; pop ebx; pop esi; ret; 
0x000f4f8c: sal bh, 0xd8; add esp, 0x24; pop ebx; pop esi; ret; 
0x0005d627: sal bh, 0xd8; add esp, 0x24; pop ebx; ret; 
0x000583fd: sal bh, 0xd8; add esp, 4; pop ebx; pop esi; ret; 
0x000f3c4b: sal bh, 0xd8; pop esi; pop edi; pop ebp; ret; 
0x0005242c: sal bh, 0xd8; ret; 
0x000a8c94: sal bh, 1; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000a6a67: sal bh, cl; dec dword ptr [ebx + 0x468b1456]; adc al, ch; ret 0xfffa; 
0x000ab728: sal byte ptr [eax + ecx - 0x75], 0x50; or dh, dh; ret 0x7501; 
0x000357dd: sal byte ptr [eax + ecx - 0x77], 0xf0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00096932: sal byte ptr [eax + ecx - 0x77], 0xf0; add esp, 4; pop ebx; pop esi; ret; 
0x000f3f2c: sal byte ptr [eax + esi - 0x7d], 0xc4; or al, 0x5b; pop esi; pop edi; ret; 
0x00118ed3: sal byte ptr [eax - 0x75], 1; dec ebx; ret 0xbe30; 
0x000f96b1: sal byte ptr [ebp + 0x10], cl; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0xffffffff; mov eax, 0x55; ret; 
0x000f9b86: sal byte ptr [ebp + 0x10], cl; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [eax], 0xffffffff; mov eax, 7; ret; 
0x0002e3a4: sal byte ptr [ebp + 0x1b], 0xe9; scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0xb60f; 
0x0005be1d: sal byte ptr [ebp + 0xa], cl; xor eax, eax; ret; 
0x000f9c3c: sal byte ptr [ebp + 0xc], cl; mov dword ptr [eax], 0xffffffff; mov eax, 7; ret; 
0x0004e4c2: sal byte ptr [ebp + 1], 0x40; mov dword ptr [esp], ecx; ret; 
0x000e89a0: sal byte ptr [ebp + 6], 0xb8; and dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x0005be19: sal byte ptr [ebp + 7], 0x85; sal byte ptr [ebp + 0xa], cl; xor eax, eax; ret; 
0x000d225c: sal byte ptr [ebp + 7], cl; mov eax, 1; pop esi; ret; 
0x000e8104: sal byte ptr [ebp + eax - 0x7d], 0xc4; add al, 0x5b; ret; 
0x000fb4c2: sal byte ptr [ebp + eax - 0x7d], 0xc4; and al, 0x5b; ret; 
0x0005a1b8: sal byte ptr [ebp + eax - 0x80], 0x38; add byte ptr [ebp + 5], dh; add esp, 8; pop ebx; ret; 
0x000f3d4e: sal byte ptr [ebp + eax - 0x80], cl; cli; and byte ptr [ebp - 0x24], dh; ret; 
0x000ea0a4: sal byte ptr [ebp + edx - 0x7d], 0xf8; add dword ptr [ebp - 0xf], esi; xor eax, eax; nop; ret; 
0x000fb3c3: sal byte ptr [ebp + esi*2 - 0x73], 0x69; add al, 0x89; ret 0xc789; 
0x000e8833: sal byte ptr [ebp - 0x13], cl; mov eax, 1; ret; 
0x000e8743: sal byte ptr [ebp - 0x14], cl; mov eax, 1; pop esi; ret; 
0x000a3f68: sal byte ptr [ebp - 0x15], 0xeb; ret 0x838d; 
0x0011904a: sal byte ptr [ebp - 0x164a245b], 0x5b; ret 0x3956; 
0x00057258: sal byte ptr [ebp - 0x1a], 0x31; rcr byte ptr [ebx + 0x66], 0x90; ret; 
0x00037dd5: sal byte ptr [ebp - 0x1a], 0xe8; ret; 
0x000f3d08: sal byte ptr [ebp - 0x1a], cl; ret; 
0x000f3e29: sal byte ptr [ebp - 0x1c], 0x5e; lea esi, dword ptr [esi]; ret; 
0x000c2c34: sal byte ptr [ebp - 0x22], 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; ret; 
0x000f3d96: sal byte ptr [ebp - 0x22], cl; pop esi; ret; 
0x000f82b4: sal byte ptr [ebp - 0x2a], 0xeb; ret; 
0x000f8136: sal byte ptr [ebp - 0x4b], 0xe9; ret; 
0x0002df7f: sal byte ptr [ebp - 0xd], 1; ret; 
0x000a5929: sal byte ptr [ebp - 8], 0x89; shl byte ptr [esi - 0x70], 1; ret; 
0x000abac2: sal byte ptr [ebp - 9], cl; sub eax, esi; pop esi; pop edi; ret; 
0x00056c75: sal byte ptr [ebx + edi - 0x77], 0x34; and al, 0xe8; mov al, byte ptr [0x89fffcea]; ret 0xc085; 
0x00054fa1: sal byte ptr [ebx + edx - 0x77], cl; ret 0xc283; 
0x0010496f: sal byte ptr [ecx + ecx + 0xf], cl; mov dh, 0x57; adc al, 0xf6; ret 0x7501; 
0x00035664: sal byte ptr [ecx + ecx - 0x75], 0x44; and al, 0x14; add esp, 0x18; pop ebx; ret; 
0x00047e7a: sal byte ptr [ecx + ecx*2 - 0x75], 0x94; and al, 0xa0; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xbc83; 
0x00057247: sal byte ptr [ecx + edx - 0x73], 0x83; fdiv qword ptr [eax + eax]; pop ebx; ret; 
0x000f208f: sal byte ptr [ecx - 0x77], 0xf0; add esp, 0xc; pop esi; pop edi; ret; 
0x000e1867: sal byte ptr [ecx - 0x77], cl; ret 0xe283; 
0x0005d21a: sal byte ptr [ecx], 0xd2; pop esi; pop ebp; ret; 
0x0005d176: sal byte ptr [ecx], 0xd2; leave; ret; 
0x0005d1fc: sal byte ptr [ecx], 1; rcr byte ptr [esi + 0x5d], cl; ret; 
0x00060ea2: sal byte ptr [ecx], 1; ror byte ptr [edi], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x0005d170: sal byte ptr [ecx], 1; ror cl, cl; ret; 
0x0010433c: sal byte ptr [ecx], cl; ror byte ptr [ebp - 0x7cfeedac], 0xc0; add dword ptr [ecx], edi; sal dword ptr [edi - 0xb], 1; ret; 
0x0005a780: sal byte ptr [edi + eax + 0x31], 0xc0; add esp, 4; pop ebx; ret; 
0x000c6383: sal byte ptr [edi - 4], 0xff; ret; 
0x000314f8: sal byte ptr [edx + eax - 0x77], cl; add al, byte ptr [ebx + 0x5e5b10c4]; ret; 
0x0005387c: sal byte ptr [edx + esi - 0x7b], cl; div byte ptr [ebx - 0x7d]; ret 0x8301; 
0x0009c06c: sal byte ptr [edx + esi*2 - 0x7d], 0xc4; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000f85de: sal byte ptr [edx + esi*4 - 0x7d], 0xc4; adc byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x0005e30f: sal byte ptr [esi + eax - 0x7d], 0xc4; adc al, 0x5b; pop esi; ret; 
0x000565bd: sal byte ptr [esi + eax - 0x7d], 0xc4; or al, 0x5b; pop esi; ret; 
0x000c6cb3: sal byte ptr [esi + eax - 0x7d], 0xc4; or byte ptr [ebx + 0x5e], bl; ret; 
0x0010b694: sal byte ptr [esi + eax - 0x7d], 0xc4; sbb al, 0x5b; pop esi; ret; 
0x000f97b5: sal byte ptr [esi + eax - 0x7d], cl; ret 0x8304; 
0x0006403f: sal byte ptr [esi + ebx - 0x7f], cl; ret 0x3724; 
0x000a256f: sal byte ptr [esi + ebx - 0x7f], cl; ret 0x5664; 
0x0005ac69: sal byte ptr [esi + ecx*2 - 0x77], 4; and al, 0xe8; in al, dx; ret 0xfffc; 
0x00034874: sal byte ptr [esp + ebx - 0x77], 0x34; and al, 0x89; ret 0xf889; 
0x00116cd9: sal ch, 0xff; inc edx; ret 0xfff5; 
0x00116ce5: sal ch, 0xff; pop es; ret 0xfff5; 
0x000a5f63: sal dh, cl; rcr dword ptr [edi], 0xf; xchg eax, ebp; ret 0xd789; 
0x000d3aa7: sal dh, cl; shl dword ptr [eax], 0xf; xchg eax, esp; ror byte ptr [edi], 0x95; ret 0xe0d3; 
0x0004e314: sal dword ptr [ebp - 0xe], 0x5b; pop esi; pop edi; ret; 
0x0003bcfd: sal dword ptr [ebx + 0x1e], -0x73; push ecx; add dword ptr [ecx], edi; ret 0x1373; 
0x000cf721: sal dword ptr [ecx + ecx - 0x77], -0x30; sar eax, 0x1f; or eax, 1; ret; 
0x000e9c1a: sal dword ptr [edi - 0x16], 0x5e; nop; ret; 
0x00104347: sal dword ptr [edi - 0xb], 1; ret; 
0x000dbc54: sal dword ptr [esi + 0x3d], 0x29; ret 0x6a8d; 
0x00116dbd: sal ebp, -1; scasd eax, dword ptr es:[edi]; sal ebp, -1; popal; ret; 
0x00116dc1: sal ebp, -1; popal; ret; 
0x000c6824: sal ebp, cl; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000e85b7: sal ebx, cl; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0004ae4c: sal edi, 1; rol dword ptr [ebx - 0x1e3efc1f], 1; add ecx, dword ptr [ebx - 0x2cfb7abc]; call 0x831bb2e7; ret 0x8301; 
0x0004aede: sal edi, 1; rol dword ptr [ebx - 0x1e3efc1f], 1; add ecx, dword ptr [ebx - 0x2cff7abc]; call 0x831ab379; ret 0x8301; 
0x0005cfe9: sal edx, 0xf; adc dword ptr [esp + 4], eax; fld qword ptr [esp + 4]; ret; 
0x0005cf9f: sal edx, 0xf; pop esp; ret 0xff2; 
0x00121829: sal esp, -1; mov al, byte ptr [0x4e00012d]; ret 0xfff4; 
0x00115a31: sal esp, -1; ret 0xf4c1; 
0x0007cc08: sar bh, cl; dec dword ptr [ebx - 0x7c8fdbac]; ret 0x8901; 
0x000326d6: sar byte ptr [eax + 2], cl; pop ebp; ret; 
0x000d6a50: sar byte ptr [eax + 4], 0x39; ret 0x1d72; 
0x000d0b13: sar byte ptr [eax + 6], 0xb8; inc dword ptr [eax]; add byte ptr [eax], al; ret; 
0x000284b3: sar byte ptr [ecx + 0x3a], 0x89; ret 0xe280; 
0x0002e539: sar byte ptr [ecx + 7], cl; neg eax; adc edx, 0; neg edx; ret; 
0x000db8ae: sar byte ptr [ecx], cl; dec byte ptr [edi]; xchg eax, edi; ret 0xd029; 
0x000c5b96: sar byte ptr [ecx], cl; or byte ptr [esp + edx - 0x7d], dh; ret 0x8301; 
0x000d20ad: sar byte ptr [edi - 0x34], 1; pop esi; pop edi; pop ebp; ret; 
0x0008e2bc: sar byte ptr [edx - 7], 0xff; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f6114: sar byte ptr [esi + 6], 0x29; ret 0xc729; 
0x00098eed: sar byte ptr [esi + 8], 0x29; ret 0xc729; 
0x000463fd: sar ch, cl; dec dword ptr [ecx + 0x10c483f0]; pop ebx; pop esi; ret; 
0x000f5173: sar dword ptr [edi + 0x69], -0x75; push esi; or byte ptr [ecx], bh; ret 0x8d0f; 
0x000909c6: sar dword ptr [edi - 0x74fff3fa], -0x7f; aam 0xb7; add byte ptr [eax], al; ret; 
0x0008290b: sar dword ptr [edi], -6; inc dword ptr [ebx + 0x5e5b24c4]; ret; 
0x000f8d94: sar dword ptr [esi + 9], -0x7d; ret 0x101; 
0x0010a4ab: sar dword ptr [esi - 0x3b7c000f], 8; pop ebx; ret; 
0x000cf726: sar eax, 0x1f; or eax, 1; ret; 
0x0009a61b: sar eax, 2; add esp, 0x10; pop ebx; pop esi; ret; 
0x000e89ac: sar eax, 3; add eax, 1; ret; 
0x0005c8bd: sar eax, cl; and eax, 1; ret; 
0x000f7233: sar eax, cl; and eax, 3; ret; 
0x0005bd9f: sar eax, cl; ret; 
0x0005bd9c: sar edx, 0x1f; sar eax, cl; ret; 
0x0005bd97: sar edx, cl; ret; 
0x001497e4: sbb al, 0; add byte ptr [eax], al; mov al, 0x45; add al, byte ptr [eax]; ret 0xfab4; 
0x00131584: sbb al, 0; add byte ptr [eax], al; push eax; ret; 
0x00022141: sbb al, 0x15; add byte ptr [edi], al; ret; 
0x00094cdb: sbb al, 0x21; ret 0xd689; 
0x00027ab1: sbb al, 0x24; ret; 
0x000a749d: sbb al, 0x39; ret 0x860f; 
0x000a755e: sbb al, 0x39; ret 0x870f; 
0x0012617d: sbb al, 0x59; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0002e011: sbb al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0005ed11: sbb al, 0x5b; pop esi; pop edi; ret; 
0x00052a73: sbb al, 0x5b; pop esi; ret; 
0x0002a1c9: sbb al, 0x5b; ret; 
0x00140237: sbb al, 0x5c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00143a85: sbb al, 0x5e; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00051af3: sbb al, 0x5e; pop edi; pop ebp; ret; 
0x001260e1: sbb al, 0x5f; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00127df1: sbb al, 0x60; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0014b21d: sbb al, 0x65; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012a485: sbb al, 0x66; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00136229: sbb al, 0x67; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00127249: sbb al, 0x68; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013775d: sbb al, 0x69; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00127e29: sbb al, 0x6a; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012721d: sbb al, 0x6b; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00125291: sbb al, 0x6c; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001478cf: sbb al, 0x6d; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127c31: sbb al, 0x6e; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00126071: sbb al, 0x6f; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013b1c1: sbb al, 0x70; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0005d730: sbb al, 0x70; cld; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x00127581: sbb al, 0x71; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012b25d: sbb al, 0x72; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00126151: sbb al, 0x73; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0002e48b: sbb al, 0x73; ret; 
0x00135b5d: sbb al, 0x74; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00065963: sbb al, 0x75; add eax, 0x5b10c483; ret; 
0x00128185: sbb al, 0x76; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013a6fd: sbb al, 0x77; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00128021: sbb al, 0x78; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00148295: sbb al, 0x7b; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00148009: sbb al, 0x7c; push cs; or al, 0x41; ret; 
0x0013e919: sbb al, 0x7d; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012899d: sbb al, 0x7e; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013ac47: sbb al, 0x7f; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012ae1d: sbb al, 0x7f; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00050e5b: sbb al, 0x83; ret 0x8901; 
0x0009b8c5: sbb al, 0x83; ret 0xc701; 
0x000a79a4: sbb al, 0x85; dec dword ptr [edi]; test dword ptr [0x83000001], ecx; ret 0x3901; 
0x0002c237: sbb al, 0x85; div byte ptr [ecx + ecx - 0x75]; inc esi; sub byte ptr [ebx + 0x5e5b10c4], al; ret; 
0x000c2a53: sbb al, 0x89; add dword ptr [eax + 1], edi; add esp, 0x10; pop esi; ret; 
0x00065a30: sbb al, 0x89; push esi; or byte ptr [ebx + 0x5e5b20c4], al; ret; 
0x000d392f: sbb al, 0x89; ret 0x65e9; 
0x000f4a5b: sbb al, 0x89; ret 0x73e9; 
0x000f8ef2: sbb al, 0x89; ret 0xc085; 
0x000d234d: sbb al, 0x89; ret 0xf089; 
0x0005cb10: sbb al, 0xdd; inc ebp; and al, 0xd9; ret; 
0x00057ccd: sbb al, 0xe8; and eax, 0x81000b3a; ret; 
0x0007210a: sbb al, 0xe8; call 0x81072aa6; ret; 
0x0007e10a: sbb al, 0xe8; call 0x8107e9e6; ret; 
0x0008370a: sbb al, 0xe8; call 0x81083f90; ret; 
0x00087f0a: sbb al, 0xe8; call 0x81088748; ret; 
0x0005ecb5: sbb al, 0xe8; cmp eax, 0x81000aca; ret; 
0x000d0b3a: sbb al, 0xe8; mov eax, 0x810003ab; ret; 
0x00095437: sbb al, 0xe8; mov ebx, 0x81000762; ret; 
0x00068137: sbb al, 0xe8; mov ebx, 0x81000a35; ret; 
0x00094638: sbb al, 0xe8; mov edx, 0x81000770; ret; 
0x000faa36: sbb al, 0xe8; mov esp, 0x8100010c; ret; 
0x00077a8a: sbb al, 0xe8; push 0x8100093c; ret; 
0x0008dd30: sbb al, 0xe8; ret 0x7d9; 
0x0003f662: sbb al, 0xe8; nop; ror byte ptr [eax + eax], 0x81; ret; 
0x0004ee37: sbb al, 0xe9; ret; 
0x000f7a99: sbb al, 0xf7; ret 0; 
0x00045377: sbb al, 1; add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x000f4da4: sbb al, 1; add byte ptr [eax], al; ret; 
0x0012d4d1: sbb al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00031eb5: sbb al, 1; ret 0xb60f; 
0x000c82f8: sbb al, 1; ret 0xd131; 
0x0014c9bf: sbb al, 2; arpl word ptr [edx], cx; push cs; adc al, 0x41; ret; 
0x00135b9d: sbb al, 2; dec ebx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00140b55: sbb al, 2; dec ecx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00135329: sbb al, 2; dec ecx; push cs; or al, 0x41; ret; 
0x00143ef7: sbb al, 2; dec edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013b2bf: sbb al, 2; dec esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00141bb5: sbb al, 2; inc eax; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00138fe7: sbb al, 2; inc ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012c451: sbb al, 2; inc edi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012deb5: sbb al, 2; inc edx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00129b01: sbb al, 2; inc esi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00138a35: sbb al, 2; inc esi; push cs; or al, 0x41; ret; 
0x00144541: sbb al, 2; inc esp; push cs; or al, 0x41; ret; 
0x00125f51: sbb al, 2; insd dword ptr es:[edi], dx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001271ed: sbb al, 2; jp 0x1271fb; push cs; or al, 0x41; ret; 
0x001476b7: sbb al, 2; lodsd eax, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012fdd3: sbb al, 2; movsd dword ptr es:[edi], dword ptr [esi]; push cs; adc al, 0x41; ret; 
0x0013a76e: sbb al, 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012f749: sbb al, 2; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001479d7: sbb al, 2; pop ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001276dd: sbb al, 2; pop esp; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001483a7: sbb al, 2; push 0xa; push cs; adc al, 0x41; ret; 
0x0012b2cd: sbb al, 2; push eax; push cs; or al, 0x41; ret; 
0x00148513: sbb al, 2; push ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00145099: sbb al, 2; push ebx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00141f43: sbb al, 2; push ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00135c6d: sbb al, 2; push ecx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001413a7: sbb al, 2; push edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013e10d: sbb al, 2; push edi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00127c89: sbb al, 2; push edx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013e28b: sbb al, 2; stosb byte ptr es:[edi], al; push cs; adc al, 0x41; ret; 
0x001287d1: sbb al, 2; xchg eax, ebx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012ed89: sbb al, 2; leave; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012c0ab: sbb al, 2; nop; push cs; adc al, 0x41; ret; 
0x001447bf: sbb al, 2; pushal; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012e565: sbb al, 6; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0003e66c: sbb al, byte ptr [eax + 0x174fffa]; ret; 
0x00133485: sbb al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0004b9c9: sbb al, byte ptr [ecx]; ret 0xc9c1; 
0x0004c401: sbb al, byte ptr [ecx]; ret 0xcec1; 
0x0013467a: sbb al, byte ptr [edx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0006b3b5: sbb al, ch; cmp eax, 0x81000a03; ret; 
0x000671b5: sbb al, ch; cmp eax, 0x81000a45; ret; 
0x0003263a: sbb al, ch; mov eax, 0x81000d90; ret; 
0x000f1f37: sbb al, ch; mov ebx, 0x81000197; ret; 
0x00065037: sbb al, ch; mov ebx, 0x81000a66; ret; 
0x00053534: sbb al, ch; mov esi, 0x81000b81; ret; 
0x000e9d36: sbb al, ch; mov esp, 0x81000219; ret; 
0x00059e36: sbb al, ch; mov esp, 0x81000b18; ret; 
0x00054c36: sbb al, ch; mov esp, 0x81000b6a; ret; 
0x00046436: sbb al, ch; mov esp, 0x81000c52; ret; 
0x000e61e5: sbb al, ch; or eax, 0x81000255; ret; 
0x00044ba1: sbb al, ch; push ecx; imul ecx, dword ptr [eax + eax], -0x7f; ret; 
0x000f4c2f: sbb al, ch; ret; 
0x0005cb64: sbb bl, ch; pop edx; or byte ptr [ecx - 0x3a27430], cl; leave; ret 4; 
0x000f1e60: sbb bl, dh; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0014cd93: sbb byte ptr [eax + 0xa], ah; push cs; adc al, 0x41; ret; 
0x00130f21: sbb byte ptr [eax + 0xa], bh; push cs; or al, 0x41; ret; 
0x0012eaf1: sbb byte ptr [eax + 0xe], dh; or al, 0x41; ret; 
0x00053932: sbb byte ptr [eax + eax], al; add al, ch; mov ebp, 0x81000b7d; ret; 
0x00109617: sbb byte ptr [eax - 0x2ff7021e], al; mov byte ptr [ecx + 0x18], al; xor eax, eax; ret; 
0x0003f63d: sbb byte ptr [eax - 0x3eeb8af9], ch; call 0x8805224b; inc edx; add dword ptr [eax + 2], edi; ret; 
0x00103417: sbb byte ptr [eax - 0x76bfdbac], cl; ret 0xeac1; 
0x001033ef: sbb byte ptr [eax - 0x76c3dbac], cl; ret 0xeac1; 
0x001033cb: sbb byte ptr [eax - 0x76c7dbac], cl; ret 0xeac1; 
0x001033a7: sbb byte ptr [eax - 0x76cbdbac], cl; ret 0xeac1; 
0x00103383: sbb byte ptr [eax - 0x76cfdbac], cl; ret 0xeac1; 
0x0010335f: sbb byte ptr [eax - 0x76d3dbac], cl; ret 0xeac1; 
0x000519b9: sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], dh; dec dword ptr [ecx - 0x9efdb84]; ret 0xf01; 
0x00051a69: sbb byte ptr [eax], al; add byte ptr [eax], al; add dh, dh; ret 0xf01; 
0x00076691: sbb byte ptr [eax], al; add byte ptr [eax], al; int 0x80; ret; 
0x00044a55: sbb byte ptr [ebp - 0x145ec544], cl; fldcw word ptr [esi - 0x77]; ret 0xf231; 
0x000d6f32: sbb byte ptr [ebp - 0x76418b40], al; ret 0xd1e9; 
0x000f97b3: sbb byte ptr [ebp - 0x7cf98b2e], al; ret 0x8304; 
0x0003195c: sbb byte ptr [ebx + 0x1142454], cl; ret 0xb60f; 
0x00094cd7: sbb byte ptr [ebx + 0x211c2454], cl; ret 0xd689; 
0x00051b54: sbb byte ptr [ebx + 0x452bfee0], al; adc al, 0xeb; ret 0x688b; 
0x0009459c: sbb byte ptr [ebx + 0x5e5b08c4], al; ret; 
0x0008770c: sbb byte ptr [ebx + 0x5e5b1cc4], al; pop edi; ret; 
0x0009d34c: sbb byte ptr [ebx + 0x5e5b3cc4], al; ret; 
0x0006e137: sbb byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000326c3: sbb byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x0002e740: sbb byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00029fc3: sbb byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00034825: sbb byte ptr [ebx + 0x5e], bl; ret; 
0x000f27db: sbb byte ptr [ebx + 0x5f], bl; ret; 
0x000cf734: sbb byte ptr [ebx + 0x77c00f8], al; setg al; movzx eax, al; ret; 
0x0014bb4d: sbb byte ptr [ebx + 0xa], ch; push cs; or al, 0x41; ret; 
0x000fa721: sbb byte ptr [ebx - 0x16e7dbb4], cl; ret 0xfffe; 
0x000f1638: sbb byte ptr [ebx - 0x16ebdbbc], cl; ret; 
0x000469bb: sbb byte ptr [ebx - 0x41f0fe3b], al; ret 0xc085; 
0x0013ed50: sbb byte ptr [ebx - 0x4904ffff], bl; idiv edi; ret; 
0x000a4005: sbb byte ptr [ebx - 0x7bf00008], al; ret; 
0x000f7a95: sbb byte ptr [ebx - 0x8e3dbac], cl; ret 0; 
0x0014248b: sbb byte ptr [ebx], al; sbb al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0003ee52: sbb byte ptr [ecx + 0x18c483f0], cl; pop ebx; pop esi; ret; 
0x000c8e79: sbb byte ptr [ecx + 0x5fca89d8], cl; pop ebx; ret; 
0x0012d09d: sbb byte ptr [ecx + 0xa], ah; push cs; or al, 0x41; ret; 
0x00127441: sbb byte ptr [ecx + 0xa], bh; push cs; or al, 0x41; ret; 
0x000536af: sbb byte ptr [ecx + edx*2 - 0x77], dh; ret 0xf089; 
0x000d708d: sbb byte ptr [ecx - 0x2517dbfc], cl; ret 0xfff4; 
0x000ecebc: sbb byte ptr [ecx - 0x72fbdbbc], cl; stosd dword ptr es:[edi], eax; ret; 
0x00044c46: sbb byte ptr [ecx - 0x76ebdbbc], cl; ret 0xf089; 
0x00054f20: sbb byte ptr [ecx - 0x7cefdbb4], cl; ret 0x8302; 
0x00049607: sbb byte ptr [ecx - 0x7f17dbfc], cl; ret 0xfffd; 
0x0012531d: sbb byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000feab9: sbb byte ptr [ecx], al; ret 0x1489; 
0x0004b4f5: sbb byte ptr [ecx], al; ret 0xcfc1; 
0x0004b5bc: sbb byte ptr [ecx], al; ret 0xfd89; 
0x00106239: sbb byte ptr [ecx], bh; ret 0x840f; 
0x0003c419: sbb byte ptr [ecx], bh; ret 0x860f; 
0x000a9e86: sbb byte ptr [ecx], ch; ret 0x7c83; 
0x000c3e13: sbb byte ptr [ecx], cl; ret 0x850f; 
0x00056d96: sbb byte ptr [ecx], cl; rol byte ptr [ecx + 0x8cc4], 1; add byte ptr [ebx + 0x5e], bl; ret; 
0x0012f93f: sbb byte ptr [edi + 0xe], dh; adc al, 0x41; ret; 
0x00141d69: sbb byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x00149dcb: sbb byte ptr [edx + 0xa], bh; push cs; adc al, 0x41; ret; 
0x0012e675: sbb byte ptr [edx + 0xa], dh; push cs; or al, 0x41; ret; 
0x00140ceb: sbb byte ptr [edx], al; bound ecx, qword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0014aaa5: sbb byte ptr [edx], al; dec eax; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013df83: sbb byte ptr [edx], al; dec edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001403f3: sbb byte ptr [edx], al; imul ecx, dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x00125559: sbb byte ptr [edx], al; inc eax; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00147d07: sbb byte ptr [edx], al; inc edx; push cs; adc al, 0x41; ret; 
0x001347c3: sbb byte ptr [edx], al; inc esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014c321: sbb byte ptr [edx], al; inc esi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013c1ef: sbb byte ptr [edx], al; insd dword ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126c07: sbb byte ptr [edx], al; jo 0x126c15; push cs; adc al, 0x41; ret; 
0x0012794b: sbb byte ptr [edx], al; jp 0x12795d; adc al, 0x41; ret; 
0x0012d489: sbb byte ptr [edx], al; outsd dx, dword ptr [esi]; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00147753: sbb byte ptr [edx], al; pop ebx; push cs; adc al, 0x41; ret; 
0x00138f01: sbb byte ptr [edx], al; pop ecx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013e2c7: sbb byte ptr [edx], al; pop edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012a0c9: sbb byte ptr [edx], al; push 0x410c0e0a; ret; 
0x0013ba39: sbb byte ptr [edx], al; push eax; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001356c5: sbb byte ptr [edx], al; push ebp; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00148d95: sbb byte ptr [edx], al; push ecx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013d7ab: sbb byte ptr [edx], al; push edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014c945: sbb byte ptr [edx], al; push edx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00127d23: sbb byte ptr [edx], al; push esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00141cb3: sbb byte ptr [edx], al; push esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00142941: sbb byte ptr [edx], al; push esp; push cs; or al, 0x41; ret; 
0x00141a93: sbb byte ptr [edx], al; scasd eax, dword ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014860c: sbb byte ptr [edx], al; test dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00143d47: sbb byte ptr [edx], al; xchg eax, edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001359df: sbb byte ptr [edx], al; salc; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0005d33e: sbb byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x0013d389: sbb byte ptr [esi + 0xa], bh; push cs; or al, 0x41; ret; 
0x00147905: sbb byte ptr [esi + 0xa], ch; push cs; or al, 0x41; ret; 
0x0012db8d: sbb byte ptr [esi + 0xa], dh; push cs; or al, 0x41; ret; 
0x001277a1: sbb byte ptr [esi + 0xe], ch; or al, 0x41; ret; 
0x0012e9d3: sbb byte ptr [esi + 0xe], dh; adc al, 0x41; ret; 
0x00143c3d: sbb byte ptr [esi + 0xe], dh; or al, 0x41; ret; 
0x0005bde4: sbb byte ptr [esi + 7], bh; mov eax, 2; pop esi; ret; 
0x0005bc94: sbb byte ptr [esi + 7], dh; mov eax, 2; pop esi; ret; 
0x00147d6a: sbb byte ptr [esi + ecx + 0x10], bh; inc ecx; ret; 
0x0012af2e: sbb byte ptr [esi + ecx + 0x10], dh; inc ecx; ret; 
0x00128ed8: sbb byte ptr [esi + ecx + 8], bh; inc ecx; ret; 
0x001311e0: sbb byte ptr [esi + ecx + 8], ch; inc ecx; ret; 
0x00125b48: sbb byte ptr [esi + ecx + 8], dh; inc ecx; ret; 
0x000fa725: sbb cl, ch; ret 0xfffe; 
0x000f6192: sbb dh, al; dec dword ptr [ecx - 0x7a8bdbbc]; ror byte ptr [edi], 0x84; ret; 
0x0003e6ac: sbb dh, al; inc eax; or eax, dword ptr [eax]; mov byte ptr [eax + 0xa], 0; ret; 
0x001091dc: sbb dh, dh; ret 0x7502; 
0x000523fc: sbb dword ptr [eax + 0x117501e1], eax; xor eax, eax; pop esi; pop edi; ret; 
0x000a998b: sbb dword ptr [eax + 0x24], 0; add byte ptr [ecx - 0x1717dbd4], cl; ret; 
0x00096b37: sbb dword ptr [eax], eax; add al, ch; mov ecx, 0x8100074b; ret; 
0x000bd241: sbb dword ptr [eax], eax; add byte ptr [eax], al; int 0x80; ret; 
0x000c82f4: sbb dword ptr [ebx + 0x11c2454], ecx; ret 0xd131; 
0x00064037: sbb dword ptr [ebx + 0x823c93], ecx; add byte ptr [ebp - 0x7ee18b2e], al; ret 0x3724; 
0x000a2567: sbb dword ptr [ebx + 0xbf3c93], ecx; add byte ptr [ebp - 0x7ee18b2e], al; ret 0x5664; 
0x0012de2e: sbb dword ptr [ebx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0009692c: sbb dword ptr [ecx + edi*4 - 0x3f7b0000], 0x74; or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x0013391d: sbb dword ptr [ecx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0006a7a4: sbb dword ptr [edx + eax*4 - 0x3b7d0000], 4; pop ebx; ret; 
0x0005bfd9: sbb dword ptr [esi - 0x3b7c0004], 4; pop ebx; ret; 
0x00027bbd: sbb dword ptr [esi - 0x3b7c0005], 0x10; pop ebx; pop esi; ret; 
0x001302b2: sbb eax, 0x140e0a01; inc ecx; ret; 
0x000e4ed7: sbb eax, 0x81000268; ret; 
0x000bf2d7: sbb eax, 0x810004c4; ret; 
0x000b75d7: sbb eax, 0x81000541; ret; 
0x000913d7: sbb eax, 0x810007a3; ret; 
0x0008b0d7: sbb eax, 0x81000806; ret; 
0x0008a5d7: sbb eax, 0x81000811; ret; 
0x0008a1d7: sbb eax, 0x81000815; ret; 
0x00082ad7: sbb eax, 0x8100088c; ret; 
0x00077fd7: sbb eax, 0x81000937; ret; 
0x000655d7: sbb eax, 0x81000a61; ret; 
0x0004cfd7: sbb eax, 0x81000be7; ret; 
0x000490d7: sbb eax, 0x81000c26; ret; 
0x000281d7: sbb eax, 0x81000e35; ret; 
0x00061ecf: sbb eax, 0x8301e883; clc; push dword ptr [ebp + edx - 0x77]; ret 0xe2c1; 
0x000d87e8: sbb eax, 0x83242c8b; ret 0xf01; 
0x000d877f: sbb eax, 0x83243c8b; ret 0xf01; 
0x000eba69: sbb eax, 0x8b000656; or dword ptr [eax - 2], 0x8bffff; ret; 
0x000f4eff: sbb eax, 0xc031fff3; add esp, 0x14; pop ebx; ret; 
0x0004128a: sbb eax, 0xc483fffe; sbb al, 0x5b; ret; 
0x00026bd8: sbb eax, 0xf0e90000; ret; 
0x00005d25: sbb eax, dword ptr [eax]; add byte ptr [esp + ebx*4], ah; adc byte ptr [eax], al; ret 0; 
0x0012a322: sbb eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0004c7ce: sbb eax, dword ptr [ecx]; ret 0xc9c1; 
0x0004c491: sbb eax, dword ptr [ecx]; ret 0xcec1; 
0x00049950: sbb eax, dword ptr [ecx]; ret 0xcfc1; 
0x00143a21: sbb eax, dword ptr [edx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0005bca4: sbb eax, eax; not eax; add eax, 2; pop esi; ret; 
0x000b484d: sbb eax, eax; not eax; add eax, 4; leave; ret; 
0x0004e2a0: sbb eax, eax; not eax; add eax, 4; ret; 
0x000f8ea3: sbb eax, eax; or eax, 1; pop esi; ret; 
0x0009c361: sbb ebp, dword ptr [esi - 0x3b7c0008]; or al, 0x5b; ret; 
0x0002e3a6: sbb ebp, ecx; scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0xb60f; 
0x000fe231: sbb ecx, dword ptr [esi - 0xe]; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x00032e06: sbb edi, edi; dec dword ptr [ecx + 0xcc483f0]; pop ebx; pop esi; ret; 
0x000a2f99: sbb edx, edi; pop esi; pop edi; pop ebp; ret; 
0x000b9031: sbb esi, dword ptr [ebp - 0x3b7c000a]; or al, 0x5b; ret; 
0x0008893c: sbb esp, 0x32; cld; dec dword ptr [ecx + 0x57e82404]; ret 0xfff9; 
0x0008890d: sbb esp, 0x32; cld; dec dword ptr [ecx - 0x7917dbfc]; ret 0xfff9; 
0x0005724b: sbb esp, 0x74; add byte ptr [eax], al; pop ebx; ret; 
0x00099d41: sbb esp, dword ptr [esi + 0x6cdbfff8]; and al, 0x10; mov ebx, dword ptr [ebp - 4]; leave; ret; 
0x000f20de: scasb al, byte ptr es:[edi]; adc eax, 0xc483fff3; adc byte ptr [ebx + 0x5e], bl; ret; 
0x00129980: scasb al, byte ptr es:[edi]; add eax, 0x41140e0a; ret; 
0x00118eb1: scasb al, byte ptr es:[edi]; in eax, dx; inc edi; leave; ret 0x3b81; 
0x0012aed5: scasb al, byte ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0008a01e: scasb al, byte ptr es:[edi]; ret 0xfff9; 
0x00123f48: scasb al, byte ptr es:[edi]; ret; 
0x0002e3a8: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0xb60f; 
0x00135eb5: scasd eax, dword ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000c5c4d: scasd eax, dword ptr es:[edi]; or dh, dh; inc dword ptr [ebx + 0x5e5b1cc4]; ret; 
0x0013c585: scasd eax, dword ptr es:[edi]; push cs; adc al, 0x41; ret; 
0x001297b1: scasd eax, dword ptr es:[edi]; push es; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00109527: scasd eax, dword ptr es:[edi]; ret 0x4489; 
0x0005fdb8: scasd eax, dword ptr es:[edi]; ret 0x6c8b; 
0x000300b3: scasd eax, dword ptr es:[edi]; ret 0xc601; 
0x00030941: scasd eax, dword ptr es:[edi]; ret 0xc701; 
0x0003308a: scasd eax, dword ptr es:[edi]; ret 0xc801; 
0x000688ed: scasd eax, dword ptr es:[edi]; ret 0xfffb; 
0x000f096b: scasd eax, dword ptr es:[edi]; ret 0xfffc; 
0x00116dc0: scasd eax, dword ptr es:[edi]; sal ebp, -1; popal; ret; 
0x000e88d7: scasd eax, dword ptr es:[edi]; xchg dword ptr [esi], eax; add byte ptr [ebx - 0x10f7f], cl; inc dword ptr [0x1c0]; ret; 
0x000969cd: scasd eax, dword ptr es:[edi]; clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000c1585: seta al; movzx eax, al; add esp, 0x14; pop ebx; ret; 
0x000aafb2: seta al; movzx eax, al; ret; 
0x000ab258: setae al; add esp, 0x10; pop ebx; pop esi; ret; 
0x00052e2f: setbe al; ret; 
0x00053898: sete al; add esp, 0x18; pop ebx; pop esi; ret; 
0x0003709d: sete al; add esp, 0xc; ret; 
0x00036ff4: sete al; movzx eax, al; add esp, 0x10; pop ebx; ret; 
0x00036f4a: sete al; movzx eax, al; add esp, 0x14; pop ebx; ret; 
0x000881ef: sete al; movzx eax, al; add esp, 0x28; pop ebx; ret; 
0x0002854b: sete al; movzx eax, al; add esp, 0xc; pop ebx; ret; 
0x0002b829: sete al; movzx eax, al; lea eax, dword ptr [eax*8 + 3]; pop ebx; ret; 
0x000c2c58: sete al; movzx eax, al; pop esi; ret; 
0x0002bc2d: sete al; movzx eax, al; ret; 
0x0005242a: sete al; neg eax; ret; 
0x0002d8f7: sete al; pop esi; pop edi; pop ebp; ret; 
0x0004e113: sete al; leave; ret; 
0x00083412: sete dl; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x000cf73a: setg al; movzx eax, al; ret; 
0x000376d2: setne al; movzx eax, al; add esp, 0x10; pop ebx; ret; 
0x00037690: setne al; movzx eax, al; add esp, 0x14; pop ebx; ret; 
0x00055afb: setne al; movzx eax, al; add esp, 4; pop ebx; ret; 
0x000f3653: setne al; movzx eax, al; add esp, 8; pop ebx; ret; 
0x0002b84d: setne al; movzx eax, al; lea eax, dword ptr [eax + eax*2]; pop ebx; ret; 
0x0005fad9: setne al; movzx eax, al; neg eax; add esp, 0x14; ret; 
0x0004e1b3: setne al; movzx eax, al; pop ebp; ret; 
0x0002a23e: setne al; movzx eax, al; pop ebx; ret; 
0x0004e1cb: setne al; movzx eax, al; ret; 
0x0004e0db: setne al; leave; ret; 
0x0004e2bc: setne al; ret; 
0x0010b5d5: shl byte ptr [eax], 0x39; ret 0x1776; 
0x0010b5ec: shl byte ptr [eax], 0x39; ret 0xe977; 
0x000fb667: shl byte ptr [ecx], 1; ret 0xc2f7; 
0x0006b6bf: shl byte ptr [ecx], 2; xor eax, eax; pop ebx; ret; 
0x001031d9: shl byte ptr [ecx], cl; ret 0x548d; 
0x000446dc: shl byte ptr [ecx], cl; ret 0xcd89; 
0x001056b3: shl byte ptr [esi + 1], 1; ret 0x2a74; 
0x000a592d: shl byte ptr [esi - 0x70], 1; ret; 
0x0005d20e: shl dword ptr [eax], 0x74; add al, 0x89; ret 0xc031; 
0x0005d1f7: shl dword ptr [eax], 0x74; add al, 0x89; sal byte ptr [ecx], 1; rcr byte ptr [esi + 0x5d], cl; ret; 
0x0005d16b: shl dword ptr [eax], 0x74; add al, 0x89; sal byte ptr [ecx], 1; ror cl, cl; ret; 
0x000d3aa9: shl dword ptr [eax], 0xf; xchg eax, esp; ror byte ptr [edi], 0x95; ret 0xe0d3; 
0x0004a901: shl dword ptr [edx - 0x36], -0x77; ret 0xf231; 
0x0008b1ab: shl dword ptr [edx - 0x3b7c0007], 1; add al, 0x5b; ret; 
0x0005d007: shl dword ptr [esi + 0xf], -0x2a; inc esp; and al, 4; fild qword ptr [esp + 4]; ret; 
0x0003ea93: shl eax, 3; ret; 
0x0003e738: shl eax, 4; add eax, 0x14; ret; 
0x0006b683: shl eax, cl; or dword ptr [edx], eax; xor eax, eax; pop ebx; ret; 
0x0005bdbb: shl eax, cl; ret; 
0x0002d70f: shl edx, 0x10; add eax, edx; shr eax, 0x18; ret; 
0x000e8913: shl edx, 8; movzx eax, byte ptr [eax + 1]; or eax, edx; ret; 
0x000e893a: shl edx, 8; or eax, edx; ret; 
0x0005bdc2: shl edx, cl; ret; 
0x000c916b: shl esp, -0xb; inc dword ptr [ebx + 0x5f5b0cc4]; ret; 
0x0005bdb8: shld edx, eax, cl; shl eax, cl; ret; 
0x000ec15f: shr bl, 0x8d; mov eax, 1; ret; 
0x000f89e4: shr bl, 0xc0; add eax, 1; ret; 
0x00037e85: shr bl, 0xde; ret; 
0x0004f7df: shr bl, 0xee; nop; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0012d7f7: shr byte ptr [eax], 1; add esi, dword ptr [esi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000fb693: shr byte ptr [ecx], cl; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00050151: shr cl, cl; and eax, 0x90fffffe; ret; 
0x000e507a: shr dl, cl; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0004642a: shr eax, 0x10; ret; 
0x0002d714: shr eax, 0x18; ret; 
0x0009ca04: shr eax, 0x1e; add esp, 8; pop ebx; ret; 
0x00036eda: shr eax, 0x1f; add esp, 0xc; pop ebx; ret; 
0x0004e197: shr eax, 0x1f; pop ebp; ret; 
0x0004e094: shr eax, 0x1f; leave; ret; 
0x0004e1a0: shr eax, 0x1f; ret; 
0x0003e949: shr eax, 1; add esp, 0x10; pop ebx; pop esi; ret; 
0x0003f642: shr eax, 3; sub al, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x00046426: shr eax, 8; ret; 
0x0005d128: shr eax, cl; add esp, 0x10; ret; 
0x000df0e6: shr eax, cl; pop ebx; ret; 
0x0005bd06: shr eax, cl; ret; 
0x00106729: shr ecx, 2; rep stosd dword ptr es:[edi], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0002c49d: shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x000e896a: shr ecx, 8; mov byte ptr [eax + 2], cl; mov byte ptr [eax + 3], dl; ret; 
0x000f8884: shr edx, 1; mov dword ptr [ecx], edx; mov eax, 1; ret; 
0x000f8830: shr edx, 2; mov dword ptr [ecx], edx; mov eax, 2; ret; 
0x0005c893: shr edx, 8; add eax, edx; and eax, 0x3f; ret; 
0x0005bcff: shr edx, cl; ret; 
0x0005bd94: shrd eax, edx, cl; sar edx, cl; ret; 
0x0005bcfc: shrd eax, edx, cl; shr edx, cl; ret; 
0x00137451: sidt ptr [edx]; push cs; adc al, 0x41; ret; 
0x00147b2d: stosb byte ptr es:[edi], al; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00106740: stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0013195f: stosb byte ptr es:[edi], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0002c4b0: stosb byte ptr es:[edi], al; pop edi; ret; 
0x0013e28d: stosb byte ptr es:[edi], al; push cs; adc al, 0x41; ret; 
0x00142e6a: stosb byte ptr es:[edi], al; push es; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000b9217: stosd dword ptr es:[edi], eax; idiv bh; add esp, 0x24; pop ebx; ret; 
0x0010672d: stosd dword ptr es:[edi], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00149f14: stosd dword ptr es:[edi], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0002c4a1: stosd dword ptr es:[edi], eax; pop edi; ret; 
0x000ab6f5: stosd dword ptr es:[edi], eax; pop esi; pop edi; pop ebp; ret; 
0x000eed84: stosd dword ptr es:[edi], eax; xor eax, eax; pop ebx; pop esi; ret; 
0x0003bd46: stosd dword ptr es:[edi], eax; ret; 
0x0005c052: str word ptr [ebx + 0x458b0875]; or al, 0x89; ret 0x4489; 
0x0005a1ad: str word ptr [ebx - 0x21b7d]; dec dword ptr [ebx + 0x74c08500]; add eax, 0x75003880; add eax, 0x5b08c483; ret; 
0x0013fadc: sub al, 0; add byte ptr [eax], al; test al, 0xa8; add dword ptr [eax], eax; ret; 
0x0005a02c: sub al, 0x14; add byte ptr [eax], al; ret; 
0x0004e5d3: sub al, 0x24; add esp, 4; ret; 
0x000c2731: sub al, 0x29; ret 0x1775; 
0x000dc51a: sub al, 0x29; ret 0x4c8b; 
0x000a7e27: sub al, 0x29; ret 0x5489; 
0x000e4056: sub al, 0x29; ret 0x9439; 
0x000e25db: sub al, 0x29; ret 0xd639; 
0x000f9747: sub al, 0x31; imul bl; adc al, 0x83; ret 0x8501; 
0x00012a34: sub al, 0x3e; add byte ptr [eax], al; ret; 
0x00050c90: sub al, 0x4d; std; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x00037f6d: sub al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0008d57a: sub al, 0x5b; pop esi; pop edi; ret; 
0x0004d7bd: sub al, 0x5b; pop esi; ret; 
0x000893fa: sub al, 0x5b; ret; 
0x000d2332: sub al, 0x5e; pop edi; pop ebp; ret; 
0x00129877: sub al, 0x63; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b61d: sub al, 0x6a; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00144c7f: sub al, 0x6d; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012c607: sub al, 0x72; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013649b: sub al, 0x75; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001466b7: sub al, 0x78; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001309ad: sub al, 0x79; push cs; or al, 0x41; ret; 
0x00146663: sub al, 0x7a; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000b3e50: sub al, 0x7c; test al, 0x89; ret 0x44c7; 
0x000590a5: sub al, 0x83; ret 0x3901; 
0x0006a1e0: sub al, 0x83; ret 0x8901; 
0x0002ec48: sub al, 0x83; ret 0xf01; 
0x000514f2: sub al, 0x89; ret 0xeac1; 
0x000ffa6e: sub al, 0x8b; inc ebp; or al, 0x89; ret 0xc166; 
0x000d7153: sub al, 0x8b; push esi; and dh, dh; ret 0x7406; 
0x00120304: sub al, 0x9c; add byte ptr [eax], al; push ds; ret; 
0x00010e2c: sub al, 0xd; add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret; 
0x000b6700: sub al, 0xd9; idiv bh; add esp, 4; pop ebx; ret; 
0x00060235: sub al, 0xe8; mov ebp, 0x81000ab4; ret; 
0x000c2f36: sub al, 0xe8; mov esp, 0x81000487; ret; 
0x0008a1d5: sub al, 0xe8; sbb eax, 0x81000815; ret; 
0x00090abd: sub al, 0xe8; xor eax, 0x810007ac; ret; 
0x000842bd: sub al, 0xe8; xor eax, 0x81000874; ret; 
0x000a1c2c: sub al, 0xf; mov dh, 0x91; push 0x39000046; ret 0xdf74; 
0x0005f98d: sub al, 1; add byte ptr [eax], al; ret; 
0x0003f645: sub al, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x0014b3d9: sub al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000df1c1: sub al, 1; ret 0x4589; 
0x001294c7: sub al, 2; arpl word ptr [edx], cx; push cs; adc al, 0x41; ret; 
0x00129837: sub al, 2; bound ecx, qword ptr [edx]; push cs; adc al, 0x41; ret; 
0x00135707: sub al, 2; dec eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012b317: sub al, 2; dec ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014864b: sub al, 2; dec ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00130be5: sub al, 2; dec ecx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012caeb: sub al, 2; dec edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001426e3: sub al, 2; fimul dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0012c06b: sub al, 2; fmul dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x00138593: sub al, 2; in eax, dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012763b: sub al, 2; inc esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001415f1: sub al, 2; inc esi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0014b483: sub al, 2; insb byte ptr es:[edi], dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012ae53: sub al, 2; jns 0x12ae61; push cs; adc al, 0x41; ret; 
0x001435af: sub al, 2; jns 0x1435bd; push cs; adc al, 0x41; ret; 
0x0013450b: sub al, 2; lodsb al, byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00146ea3: sub al, 2; mov ah, 0xa; push cs; adc al, 0x41; ret; 
0x001362db: sub al, 2; mov al, 0xa; push cs; adc al, 0x41; ret; 
0x0014c817: sub al, 2; mov bh, 0xa; push cs; adc al, 0x41; ret; 
0x0012e793: sub al, 2; mov ch, 0xa; push cs; adc al, 0x41; ret; 
0x00148e81: sub al, 2; mov cl, byte ptr [edx]; push cs; or al, 0x41; ret; 
0x001274cf: sub al, 2; mov dword ptr [esi], ecx; adc al, 0x41; ret; 
0x0013cf87: sub al, 2; mov esi, 0x41140e0a; ret; 
0x001279eb: sub al, 2; mov esp, 0x41140e0a; ret; 
0x0013ee4a: sub al, 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001475d3: sub al, 2; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x001360d3: sub al, 2; or cl, byte ptr gs:[esi]; adc al, 0x41; ret; 
0x0014938b: sub al, 2; out 0xa, al; push cs; adc al, 0x41; ret; 
0x0012d733: sub al, 2; out 0xa, eax; push cs; adc al, 0x41; ret; 
0x0012c7c5: sub al, 2; pop edx; push cs; or al, 0x41; ret; 
0x00130f59: sub al, 2; pop esi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001446d1: sub al, 2; pop esp; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00130447: sub al, 2; push ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013723b: sub al, 2; push ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00129f4b: sub al, 2; ror dword ptr [edx], 1; push cs; adc al, 0x41; ret; 
0x0012aed3: sub al, 2; scasb al, byte ptr es:[edi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00145037: sub al, 2; stosb byte ptr es:[edi], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014b11f: sub al, 2; test al, 0xa; push cs; adc al, 0x41; ret; 
0x00134b63: sub al, 2; xchg eax, edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012868b: sub al, 2; xchg eax, edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012a87b: sub al, 2; cdq; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126c47: sub al, 2; cwde; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014c6d3: sub al, 2; into; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012cbc5: sub al, 2; popal; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012d38b: sub al, 2; pushal; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014c097: sub al, 2; sahf; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00143dc7: sub al, 2; sahf; push cs; adc al, 0x41; ret; 
0x0013cf47: sub al, 2; salc; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013e1df: sub al, 2; stc; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00136ebf: sub al, 3; adc byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014818f: sub al, 3; add al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00143d87: sub al, 3; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x00129f0b: sub al, 3; add dword ptr [ecx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00148443: sub al, 3; add dword ptr gs:[edx], ecx; push cs; adc al, 0x41; ret; 
0x0012be0b: sub al, 3; cmp eax, 0x140e0a01; inc ecx; ret; 
0x0012f7db: sub al, 3; or al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00148c9f: sub al, 3; sbb byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00030989: sub al, 9; ret 0x4e74; 
0x00030924: sub al, 9; ret 0x840f; 
0x000c1565: sub al, byte ptr [ebx + 0x76000478]; or bh, byte ptr [eax + 1]; add esp, 0x14; pop ebx; ret; 
0x0014b4d9: sub al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000dae36: sub al, ch; mov esp, 0x81000308; ret; 
0x00042136: sub al, ch; mov esp, 0x81000c95; ret; 
0x000c1e30: sub al, ch; ret 0x498; 
0x000e3ce8: sub al, ch; ret 0xfffa; 
0x000fcec5: sub al, ch; sub eax, 0x810000e8; ret; 
0x00123be1: sub bh, bl; push dword ptr [edi + esi + 2]; add byte ptr [ebx + ebp + 0x37b0fffb], cl; add al, byte ptr [eax]; ret; 
0x000a2a82: sub bl, byte ptr [edi]; clc; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000c2a23: sub byte ptr [eax + 1], bh; add esp, 0x10; pop esi; ret; 
0x000ead4c: sub byte ptr [eax - 0x74fffff4], 0x54; and al, 4; movsx eax, word ptr [eax + edx*2 + 2]; ret; 
0x00048455: sub byte ptr [eax - 0x7cfea9b4], cl; ret 0x8301; 
0x0001206c: sub byte ptr [eax], al; add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret; 
0x000a8162: sub byte ptr [ebp + 0x3120d054], cl; ror byte ptr [ecx + 0x4428932], 0x83; rol byte ptr [ecx], 0x83; ret 0x3908; 
0x00129673: sub byte ptr [ebp + 0xa], ah; push cs; adc al, 0x41; ret; 
0x00104eae: sub byte ptr [ebp - 0x48f0f7b0], cl; xchg ah, bl; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x860f; 
0x00108056: sub byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0006404a: sub byte ptr [ebx + 0x5e5b08c4], al; ret; 
0x000a257a: sub byte ptr [ebx + 0x5e5b0cc4], al; ret; 
0x0002c23e: sub byte ptr [ebx + 0x5e5b10c4], al; ret; 
0x0008de3b: sub byte ptr [ebx + 0x5e5b2cc4], al; pop edi; ret; 
0x00033978: sub byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0004f0b2: sub byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0004209e: sub byte ptr [ebx + 0x5e], bl; ret; 
0x000ab9a6: sub byte ptr [ebx + 0x5f5e14c4], al; pop ebp; ret; 
0x0003e2ca: sub byte ptr [ebx + 0x708904ce], al; sub byte ptr [ebx - 0x7cebdbac], cl; ret 0x3104; 
0x00033084: sub byte ptr [ebx + 0xf482444], cl; scasd eax, dword ptr es:[edi]; ret 0xc801; 
0x0007d294: sub byte ptr [ebx - 0x3b7c0006], cl; adc byte ptr [ebx + 0x5e], bl; ret; 
0x000d714f: sub byte ptr [ebx - 0x74d3db8c], cl; push esi; and dh, dh; ret 0x7406; 
0x000ffa6a: sub byte ptr [ebx - 0x74d3db94], cl; inc ebp; or al, 0x89; ret 0xc166; 
0x000d57b1: sub byte ptr [ebx - 0x7cdbdbac], cl; ret 0x3906; 
0x0003e2d0: sub byte ptr [ebx - 0x7cebdbac], cl; ret 0x3104; 
0x00144bdb: sub byte ptr [ebx], al; adc al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012a7fb: sub byte ptr [ebx], al; add al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000d11d0: sub byte ptr [ebx], al; add byte ptr [eax], al; ret; 
0x00143917: sub byte ptr [ebx], al; add dword ptr ss:[edx], ecx; push cs; adc al, 0x41; ret; 
0x0013c95b: sub byte ptr [ebx], al; bound eax, qword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013d33b: sub byte ptr [ebx], al; imul eax, dword ptr [ecx], 0xa; push cs; adc al, 0x41; ret; 
0x00125b7a: sub byte ptr [ebx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013ca37: sub byte ptr [ebx], al; sbb eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000d711b: sub byte ptr [ecx + 0x4ce82404], cl; ret 0xfff4; 
0x00131a13: sub byte ptr [ecx + 0xa], dh; push cs; adc al, 0x41; ret; 
0x0006a879: sub byte ptr [ecx - 0x3b7cdbb0], cl; add al, 0x5b; ret; 
0x000920f4: sub byte ptr [ecx], ah; stc; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0014ad05: sub byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0003a78b: sub byte ptr [ecx], bh; ret 0x860f; 
0x0005c10a: sub byte ptr [ecx], cl; ret 0x448b; 
0x0012d3ed: sub byte ptr [edi + 0xe], dh; or al, 0x41; ret; 
0x0014831d: sub byte ptr [edx + 0xa], bl; push cs; or al, 0x41; ret; 
0x0014522b: sub byte ptr [edx + 0xa], dh; push cs; adc al, 0x41; ret; 
0x0004e9bb: sub byte ptr [edx + ebp - 0x80], dh; stc; sub dword ptr [esp + eax - 0x77], esi; ret 0xdfeb; 
0x0013f8db: sub byte ptr [edx], al; dec eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013984f: sub byte ptr [edx], al; dec ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00141a27: sub byte ptr [edx], al; dec edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00143f4b: sub byte ptr [edx], al; inc edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014432f: sub byte ptr [edx], al; inc esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001414e5: sub byte ptr [edx], al; inc esi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001341bb: sub byte ptr [edx], al; inc esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00135e21: sub byte ptr [edx], al; insd dword ptr es:[edi], dx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x001485b3: sub byte ptr [edx], al; lodsb al, byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014807f: sub byte ptr [edx], al; mov al, 0xa; push cs; adc al, 0x41; ret; 
0x00144a4b: sub byte ptr [edx], al; mov bh, 0xa; push cs; adc al, 0x41; ret; 
0x0013862b: sub byte ptr [edx], al; mov byte ptr [0x41140e0a], al; ret; 
0x00134417: sub byte ptr [edx], al; mov dword ptr [0x41140e0a], eax; ret; 
0x00142c4b: sub byte ptr [edx], al; mov ebp, 0x41140e0a; ret; 
0x0013174b: sub byte ptr [edx], al; mov edi, 0x41140e0a; ret; 
0x0012c9c3: sub byte ptr [edx], al; mov word ptr [edx], cs; push cs; adc al, 0x41; ret; 
0x00138cff: sub byte ptr [edx], al; movsb byte ptr es:[edi], byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00136e83: sub byte ptr [edx], al; movsd dword ptr es:[edi], dword ptr [esi]; push cs; adc al, 0x41; ret; 
0x0013ae1f: sub byte ptr [edx], al; or cl, byte ptr [0x4114]; ret; 
0x0013783b: sub byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012f783: sub byte ptr [edx], al; or cl, byte ptr fs:[esi]; adc al, 0x41; ret; 
0x001465bf: sub byte ptr [edx], al; or dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x0014539f: sub byte ptr [edx], al; outsb dx, byte ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126553: sub byte ptr [edx], al; outsd dx, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00144783: sub byte ptr [edx], al; pop eax; push cs; adc al, 0x41; ret; 
0x0014c74d: sub byte ptr [edx], al; pop ebp; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00129607: sub byte ptr [edx], al; pop ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00136fc3: sub byte ptr [edx], al; pop edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001415bb: sub byte ptr [edx], al; pop edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001275e3: sub byte ptr [edx], al; pop esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001342b1: sub byte ptr [edx], al; pop esi; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00144a0b: sub byte ptr [edx], al; push 0x41140e0a; ret; 
0x00139187: sub byte ptr [edx], al; push ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013acbb: sub byte ptr [edx], al; push ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001445dd: sub byte ptr [edx], al; push esp; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0013b407: sub byte ptr [edx], al; ret 0xe0a; 
0x0013c02f: sub byte ptr [edx], al; test al, 0xa; push cs; adc al, 0x41; ret; 
0x0014b633: sub byte ptr [edx], al; test dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0013ec6f: sub byte ptr [edx], al; xchg byte ptr [edx], cl; push cs; adc al, 0x41; ret; 
0x001286cb: sub byte ptr [edx], al; xchg dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0013170b: sub byte ptr [edx], al; xchg eax, ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00138437: sub byte ptr [edx], al; xchg eax, edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001442bb: sub byte ptr [edx], al; xchg eax, edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012dd6b: sub byte ptr [edx], al; xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127e9f: sub byte ptr [edx], al; clc; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00142c8b: sub byte ptr [edx], al; cli; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013c8ef: sub byte ptr [edx], al; cwde; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013fa33: sub byte ptr [edx], al; lahf; push cs; adc al, 0x41; ret; 
0x0013a077: sub byte ptr [edx], al; leave; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00128ac3: sub byte ptr [edx], al; nop; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013ee8b: sub byte ptr [edx], al; popal; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00148c47: sub byte ptr [edx], al; popfd; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013fcc3: sub byte ptr [edx], al; pushal; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00051cf0: sub byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x000c25a1: sub byte ptr [esi + 0x5f], bl; ret; 
0x0012fd6b: sub byte ptr [esi + 0xa], dh; push cs; adc al, 0x41; ret; 
0x001029a4: sub byte ptr [esi + 3], bh; and eax, dword ptr [esi + 0x30]; add esp, 8; pop esi; ret; 
0x0005cb1b: sub cl, bl; ret 0xc9d8; 
0x0003310e: sub cl, byte ptr [ecx - 0x7cb7dbb4]; ret 0x8301; 
0x0006742a: sub dh, dh; ret 0x7408; 
0x001084fb: sub dh, dh; ret 0xf02; 
0x0010811a: sub dh, dh; ret 0xf04; 
0x0014ba88: sub dword ptr [ebx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000e8119: sub dword ptr [ecx + ebp - 0x3b7cffff], 4; pop ebx; ret; 
0x000e80fe: sub dword ptr [ecx + ebp - 0x3f7affff], 0x74; add eax, 0x5b04c483; ret; 
0x000ebac2: sub dword ptr [edi + edi*8], 0x548bffff; and al, 4; mov dword ptr [eax], edx; ret; 
0x000eba5a: sub dword ptr [edi + edi*8], 0x8bffff; ret; 
0x00052ab3: sub dword ptr [edx - 3], ecx; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0013edc4: sub dword ptr [edx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000c6c73: sub dword ptr [edx], ecx; idiv bh; add esp, 8; pop ebx; ret; 
0x000d8f3f: sub dword ptr [esi - 0x70], -4; inc dword ptr [ebx + 0x5e5b18c4]; ret; 
0x0004e9c0: sub dword ptr [esp + eax - 0x77], esi; ret 0xdfeb; 
0x00140065: sub eax, 0x140e0a01; inc ecx; ret; 
0x000ead96: sub eax, 0x20; ret; 
0x0010a749: sub eax, 0x24548900; or byte ptr [ecx], bh; ret 0x473; 
0x0009c1cc: sub eax, 0x6f52a; add ecx, 0xb4eb2; mov eax, dword ptr [ecx + 0x22cc]; ret; 
0x0005b667: sub eax, 0x7e; add byte ptr [eax], al; add esp, 4; pop ebx; ret; 
0x000fcec7: sub eax, 0x810000e8; ret; 
0x000ea5c7: sub eax, 0x81000211; ret; 
0x000d21c7: sub eax, 0x81000395; ret; 
0x000c96c7: sub eax, 0x81000420; ret; 
0x000c1dc7: sub eax, 0x81000499; ret; 
0x000bf6c7: sub eax, 0x810004c0; ret; 
0x0009dec7: sub eax, 0x810006d8; ret; 
0x000962c7: sub eax, 0x81000754; ret; 
0x0008e0c7: sub eax, 0x810007d6; ret; 
0x0008bdc7: sub eax, 0x810007f9; ret; 
0x000862c7: sub eax, 0x81000854; ret; 
0x00082dc7: sub eax, 0x81000889; ret; 
0x00075ac7: sub eax, 0x8100095c; ret; 
0x00064fc7: sub eax, 0x81000a67; ret; 
0x0005d4c7: sub eax, 0x81000ae2; ret; 
0x000597c7: sub eax, 0x81000b1f; ret; 
0x000481c7: sub eax, 0x81000c35; ret; 
0x0002a344: sub eax, 0x8905e8c1; ret 0x48d; 
0x000d2289: sub eax, 0xc031f274; pop esi; nop; ret; 
0x000a411b: sub eax, 0xc031fff8; add esp, 8; pop ebx; pop esi; ret; 
0x00034602: sub eax, 0xc483ffff; or al, 0x5b; pop ebp; ret; 
0x000f722f: sub eax, 0xd3000000; clc; and eax, 3; ret; 
0x000bd251: sub eax, dword ptr [eax]; add byte ptr [eax], al; int 0x80; ret; 
0x000c8773: sub eax, dword ptr [eax]; add byte ptr [ecx - 0x2d17dbfc], cl; ret; 
0x00130142: sub eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000c5204: sub eax, dword ptr [edx + 0x10]; ret; 
0x000cb99b: sub eax, dword ptr [edx + 4]; ret; 
0x000abad4: sub eax, dword ptr [esi + 8]; pop esi; pop edi; ret; 
0x0002c3a6: sub eax, dword ptr [esp + 4]; ret; 
0x000fad56: sub eax, ecx; pop ebx; ret; 
0x0003f961: sub eax, edi; pop esi; pop edi; pop ebp; ret; 
0x0005d499: sub eax, edx; add esp, 0xc; pop ebx; ret; 
0x000fb694: sub eax, edx; pop ebx; pop esi; ret; 
0x001042ea: sub eax, edx; pop esi; pop edi; ret; 
0x000647fc: sub eax, edx; pop esi; ret; 
0x000561cf: sub eax, esi; inc esp; and al, 0x24; add bl, ch; ret; 
0x000e9d0b: sub eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000abac5: sub eax, esi; pop esi; pop edi; ret; 
0x0010b671: sub eax, esp; int1; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000c6823: sub ebx, edx; cmc; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0005d1a5: sub ecx, 0x96; shl eax, cl; ret; 
0x00061613: sub ecx, dword ptr [edx]; mov eax, ecx; ret; 
0x0005d122: sub ecx, eax; mov eax, dword ptr [esp + 4]; shr eax, cl; add esp, 0x10; ret; 
0x000c5220: sub ecx, edx; mov dword ptr [eax + 0x14], ecx; mov eax, 1; ret; 
0x0005d1b3: sub ecx, edx; shr eax, cl; ret; 
0x0005c681: sub ecx, esi; and eax, ecx; add eax, edx; pop esi; ret; 
0x000f9a05: sub edi, esi; ret 0xff00; 
0x000f5425: sub edx, 1; mov dword ptr [eax], edx; ret; 
0x0002a1cd: sub edx, dword ptr [0xc181000e]; mov bl, 0x6e; adc al, byte ptr [eax]; mov eax, dword ptr [ecx + 0x35d0]; ret; 
0x0006389a: sub edx, ecx; add eax, edx; pop esi; pop edi; ret; 
0x0004e679: sub edx, ecx; mov dword ptr [esp], edx; fldcw word ptr [esp]; add esp, 4; ret; 
0x0005b678: sub esp, 0x7e; add byte ptr [eax], al; add esp, 4; pop ebx; ret; 
0x000e06fb: sub esp, esi; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000bbfaf: test ah, ch; cmp byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x000575ac: test ah, cl; add al, byte ptr [eax]; add byte ptr [eax - 0x7bf0a106], al; ret; 
0x00127472: test al, 0x10; add al, byte ptr [esi + 0x41100e0a]; ret; 
0x00144e77: test al, 0x10; add dl, byte ptr [eax + 0x41140e0a]; ret; 
0x0014496b: test al, 0x57; add esi, dword ptr [edi + 1]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012464c: test al, 0x7f; add al, byte ptr [eax]; sahf; ret 0xfffc; 
0x000b3e52: test al, 0x89; ret 0x44c7; 
0x0013c031: test al, 0xa; push cs; adc al, 0x41; ret; 
0x0013fae0: test al, 0xa8; add dword ptr [eax], eax; ret; 
0x000fafa4: test al, 0xb9; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000ead4d: test al, 0xc; add byte ptr [eax], al; mov edx, dword ptr [esp + 4]; movsx eax, word ptr [eax + edx*2 + 2]; ret; 
0x00141ee0: test al, 0xcc; add dword ptr [eax], eax; ret; 
0x000db1b9: test al, 0xf4; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x0013169b: test al, 1; add cl, byte ptr [esi + 0x41140e0a]; ret; 
0x00147ddb: test al, 1; add esp, dword ptr [ecx + 0x140e0a01]; inc ecx; ret; 
0x001346de: test al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013bfaf: test al, 4; add dl, bh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00047da8: test bh, dh; std; dec dword ptr [ebx + 0x10c2454]; ret 0x542b; 
0x000c4d6d: test bl, bh; add byte ptr [eax], al; add byte ptr [ebx - 0x7af0e706], al; ret 0; 
0x000f4a52: test byte ptr [eax + eax*2], ah; add dword ptr [eax], eax; add byte ptr [ecx - 0x76e3dbbc], cl; ret 0x73e9; 
0x00098f60: test byte ptr [eax + eax*4], ah; add byte ptr [eax], al; add byte ptr [ecx + 0x42e82404], cl; ret 0xfff8; 
0x0003c0a2: test byte ptr [eax + eax], 0x81; ret; 
0x000d992e: test byte ptr [eax + edx*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x2b17dbfc], cl; ret; 
0x00072d8c: test byte ptr [eax - 0x74ffffff], bh; push eax; sub dh, dh; ret 0x7408; 
0x000e6558: test byte ptr [eax - 0x7d000000], ch; ret 0x8301; 
0x0000657c: test byte ptr [eax], al; add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0; 
0x00057a8c: test byte ptr [eax], bl; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x0002c598: test byte ptr [ebx + 0x5e5b14c4], 0x5f; ret; 
0x000357e9: test byte ptr [ecx + 0x14c483f0], 0x5b; pop esi; ret; 
0x000c5a46: test byte ptr [ecx + 0x30c483f0], 0x5b; pop esi; ret; 
0x0002bb24: test byte ptr [ecx + 0x367c], al; ret; 
0x0002bb3e: test byte ptr [ecx + 0x3680], al; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000e1349: test byte ptr [ecx + eax], bl; add byte ptr [ecx], dh; rol byte ptr [eax - 0x6bf0f5c8], cl; ret 0x688d; 
0x000d2a3f: test byte ptr [ecx - 0x28a4], al; ret; 
0x000c54e2: test byte ptr [ecx - 0x38824], al; ret; 
0x000c606e: test byte ptr [ecx - 0x38834], al; ret; 
0x000c6381: test byte ptr [ecx - 0x38840], al; ret; 
0x0002f0df: test byte ptr [ecx - 0x7c000005], dl; mov byte ptr [ecx], 0x83; ret 0x8801; 
0x0012bb63: test byte ptr [ecx], al; add ch, byte ptr [ebx + 0xa]; push cs; adc al, 0x41; ret; 
0x00142c0b: test byte ptr [ecx], al; add dh, byte ptr [ebx + 0x41140e0a]; ret; 
0x001432ef: test byte ptr [ecx], al; arpl word ptr [edx], cx; push cs; adc al, 0x41; ret; 
0x000ba621: test byte ptr [edi - 0x77000000], dl; ret 0x428b; 
0x0000c309: test byte ptr [edi], 0; ret; 
0x0007fed5: test byte ptr [edi], 0x84; add dword ptr [eax], 0x3d8d0000; ret 0x8b; 
0x00072d8a: test byte ptr [edi], 0x84; mov eax, 0x8b000001; push eax; sub dh, dh; ret 0x7408; 
0x00070009: test byte ptr [edi], 0x84; mov esp, 0x8b000002; push ebp; adc al, 1; ret 0x7a8d; 
0x000b61f8: test byte ptr [edi], 0x84; ret 0; 
0x00042517: test byte ptr [edi], 0x84; ret; 
0x000663bf: test byte ptr [edi], 0x8e; ret; 
0x00096083: test byte ptr [edi], 0x94; ret 0xd689; 
0x0005be40: test byte ptr [edi], 0x94; ret 0xdaf7; 
0x000f57fa: test byte ptr [edi], 0x9f; ret 0xd201; 
0x0007000b: test byte ptr [edx + eax + 0x558b0000], bh; adc al, 1; ret 0x7a8d; 
0x0004e9df: test byte ptr [edx - 0x76000002], dl; ret 0xbeeb; 
0x0005ac63: test byte ptr [edx - 0x7affffff], bh; sal byte ptr [esi + ecx*2 - 0x77], 4; and al, 0xe8; in al, dx; ret 0xfffc; 
0x0013e465: test byte ptr [edx], 0xe; adc al, 0x41; ret; 
0x0014326b: test byte ptr [edx], al; add dl, al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014427e: test byte ptr [edx], cl; push cs; adc al, 0x41; ret; 
0x0007484c: test byte ptr [esi - 0x74ffffff], dh; push eax; sub dh, dh; ret 0x7408; 
0x000d4a8f: test byte ptr [esi - 0x76fffffe], dl; ret 0x408b; 
0x0007cef3: test byte ptr [esi - 0x76ffffff], dl; ret 0xe283; 
0x000e9350: test byte ptr [esi - 0x77000000], bh; ret 0xe280; 
0x000c876b: test byte ptr [esi], cl; add dword ptr [eax], eax; add byte ptr [ebx + 0x2bf883], cl; add byte ptr [ecx - 0x2d17dbfc], cl; ret; 
0x000a79a8: test dword ptr [0x83000001], ecx; ret 0x3901; 
0x000f8955: test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x7ccfdbac], cl; ret 0x890c; 
0x0004ae57: test dword ptr [ebx + edx*8], eax; call 0x831bb2e7; ret 0x8301; 
0x000f7838: test dword ptr [ebx - 0x7cfffffc], eax; ret 0x8901; 
0x00080bcd: test dword ptr [ebx], 0xf03e6c1; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc105; 
0x000d6050: test dword ptr [ecx + 0x9d2f7ca], ecx; ret 0xfa31; 
0x0002a23b: test dword ptr [ecx + edx*4], eax; setne al; movzx eax, al; pop ebx; ret; 
0x0005519b: test dword ptr [ecx - 0x18000000], ebx; ret; 
0x00139f9d: test dword ptr [ecx], 0x41140e0a; ret; 
0x000625fb: test dword ptr [ecx], esi; daa; add byte ptr [eax], al; add byte ptr [ebx - 0x76b3dbbc], cl; ret 0x4489; 
0x000adc75: test dword ptr [edi - 0x16000003], edi; ret; 
0x0004fa5a: test dword ptr [edx + ecx*4], eax; setne al; movzx eax, al; pop ebx; ret; 
0x00139451: test dword ptr [edx], 0x41140e0a; ret; 
0x00126f00: test dword ptr [edx], eax; inc edx; or eax, 0x3834105; popal; ret; 
0x0013bd88: test dword ptr [edx], eax; inc edx; or eax, 0x3834405; insb byte ptr es:[edi], dx; ret; 
0x0012f3e4: test dword ptr [edx], eax; inc edx; or eax, 0x3834705; add dh, byte ptr [edx + ecx - 0x3b]; ret; 
0x00142a1c: test dword ptr [edx], eax; inc edx; or eax, 0x3864505; add dword ptr [esp + edi*2], 0xa; ret; 
0x00127c54: test dword ptr [edx], eax; inc edx; or eax, 0x3864805; add dword ptr [esi], 0xa; ret; 
0x0006b6fb: test dword ptr [edx], eax; setne al; movzx eax, al; pop ebx; ret; 
0x001288b9: test dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x000b460b: test dword ptr [esi + edi*8 - 1], ecx; push esi; ret 0xf01; 
0x00057a2e: test dword ptr [esi - 0x16000006], esp; mov eax, dword ptr [0x89fffff9]; ret 0x9ae9; 
0x0010f620: test eax, 0x15917968; mov dl, 7; aas; xchg eax, esp; ret 0x8910; 
0x00142782: test eax, 0x41140e0a; ret; 
0x0004e22c: test eax, 0x7fffff; setne al; movzx eax, al; ret; 
0x000f0a4b: test eax, 0x810001ac; ret; 
0x00065a4b: test eax, 0x81000a5c; ret; 
0x00050d4b: test eax, 0x81000ba9; ret; 
0x0004874b: test eax, 0x81000c2f; ret; 
0x0004074b: test eax, 0x81000caf; ret; 
0x0003eb4b: test eax, 0x81000ccb; ret; 
0x000d35b3: test eax, 0x89fff541; ret 0x4489; 
0x000891c1: test eax, 0xc483fff9; adc al, 0x5b; ret; 
0x0008fca9: test eax, 0xc6fffffe; add cl, byte ptr [ebx + eax*4]; ret 0xe901; 
0x0002e574: test eax, eax; jns 0x2e57a; neg eax; ret; 
0x0002e5a4: test eax, eax; jns 0x2e5aa; neg eax; ret; 
0x0007ca76: test ecx, 0xfbe91fff; fdivp st(7); dec dword ptr [ebx - 0x7c8fdbac]; ret 0x8901; 
0x000f64cc: test ecx, esp; or eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0xef77; 
0x00052428: test edx, edx; sete al; neg eax; ret; 
0x0004e111: test edx, edx; sete al; leave; ret; 
0x0004e0d9: test edx, edx; setne al; leave; ret; 
0x000fb590: test edx, esi; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000206d1: unpckhps xmm0, xmmword ptr [eax]; push es; ret 8; 
0x0005cf06: verw ax; ret; 
0x00060b0b: xadd dword ptr [edx], eax; add eax, ecx; ret; 
0x00060b6a: xadd dword ptr [edx], eax; dec eax; ret; 
0x00060b8a: xadd dword ptr [edx], eax; inc eax; ret; 
0x0004e196: xadd eax, ebp; pop ds; pop ebp; ret; 
0x0004e6f5: xchg ah, al; ret; 
0x00104f16: xchg ah, bl; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x448d; 
0x00104eb4: xchg ah, bl; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x860f; 
0x000ec006: xchg byte ptr [ebp - 0x3b7c000d], cl; add al, 0x5b; pop esi; ret; 
0x00127074: xchg byte ptr [ebx + eax*4], al; add eax, 0xa011903; ret; 
0x0013b930: xchg byte ptr [ebx + eax*4], al; add eax, 0xa011b03; ret; 
0x0012f040: xchg byte ptr [ebx + eax*4], al; add eax, 0xa011d03; ret; 
0x00139248: xchg byte ptr [ebx + eax*4], al; add eax, 0xa013503; ret; 
0x0013def0: xchg byte ptr [ebx + eax*4], al; add eax, 0xa013e03; ret; 
0x0013dd7c: xchg byte ptr [ebx + eax*4], al; add eax, 0xa014c03; ret; 
0x0013dd20: xchg byte ptr [ebx + eax*4], al; add eax, 0xa015603; ret; 
0x00138660: xchg byte ptr [ebx + eax*4], al; add eax, 0xa015d03; ret; 
0x00126eb8: xchg byte ptr [ebx + eax*4], al; add eax, 0xa019e03; ret; 
0x00134734: xchg byte ptr [ebx + eax*4], al; add eax, 0xa01ad03; ret; 
0x00126fe0: xchg byte ptr [ebx + eax*4], al; add eax, 0xa01bf03; ret; 
0x0012afbc: xchg byte ptr [ebx + eax*4], al; add eax, 0xa01fe03; ret; 
0x0013b998: xchg byte ptr [ebx + eax*4], al; add eax, 0xa022a03; ret; 
0x00134900: xchg byte ptr [ebx + eax*4], al; add eax, 0xa024003; ret; 
0x0012b0c8: xchg byte ptr [ebx + eax*4], al; add eax, 0xa025f03; ret; 
0x0012e944: xchg byte ptr [ebx + eax*4], al; add eax, 0xa026b03; ret; 
0x00127130: xchg byte ptr [ebx + eax*4], al; add eax, 0xa02a103; ret; 
0x001427b4: xchg byte ptr [ebx + eax*4], al; add eax, 0xa030503; ret; 
0x0013de08: xchg byte ptr [ebx + eax*4], al; add eax, 0xa03a003; ret; 
0x0013d8b4: xchg byte ptr [ebx + eax*4], al; add eax, 0xa050803; ret; 
0x00126c7c: xchg byte ptr [ebx + eax*4], al; add eax, 0xa053b03; ret; 
0x0013d838: xchg byte ptr [ebx + eax*4], al; add eax, 0xa068003; ret; 
0x00127c5a: xchg byte ptr [ebx], al; add dword ptr [esi], 0xa; ret; 
0x00142a22: xchg byte ptr [ebx], al; add dword ptr [esp + edi*2], 0xa; ret; 
0x0014bced: xchg byte ptr [ebx], al; inc ecx; push cs; adc byte ptr [ebx + 0xa500204], al; ret; 
0x00143bc9: xchg byte ptr [ebx], al; inc ecx; push cs; adc byte ptr [ebx + 0xa590204], al; ret; 
0x00146e45: xchg byte ptr [ebx], al; inc ecx; push cs; adc byte ptr [ebx + 0xa5d0204], al; ret; 
0x00138759: xchg byte ptr [ebx], al; inc ecx; push cs; adc byte ptr [ebx + 0xa8f0204], al; ret; 
0x0014207d: xchg byte ptr [ebx], al; inc ecx; push cs; adc byte ptr [ebx + 0xaa00204], al; ret; 
0x0014221d: xchg byte ptr [ebx], al; inc ecx; push cs; adc byte ptr [ebx + 0xaf60204], al; ret; 
0x0012e0d5: xchg byte ptr [ebx], al; xchg dword ptr [edx], eax; inc ebx; ret; 
0x0012c00a: xchg byte ptr [ecx + eax*2], al; push cs; adc al, 0x83; add eax, 0x2200e43; ret 0xe0a; 
0x0013b3fe: xchg byte ptr [ecx + eax*2], al; push cs; adc al, 0x83; add eax, 0x2280e43; ret 0xe0a; 
0x0012d98e: xchg byte ptr [ecx + eax*2], al; push cs; adc al, 0x83; add eax, 0x2300e43; ret 0xe0a; 
0x00127ab6: xchg byte ptr [ecx + eax*2], al; push cs; adc al, 0x83; add eax, 0x23c0e43; ret 0xe0a; 
0x00136b92: xchg byte ptr [ecx + eax*2], al; push cs; adc al, 0x83; add eax, 0x2440e43; ret 0xe0a; 
0x0012a53a: xchg byte ptr [ecx + eax*2], al; push cs; adc al, 0x83; add eax, 0x2500e43; ret; 
0x00137ffa: xchg byte ptr [ecx + eax*2], al; push cs; adc al, 0x83; add eax, 0x2580e43; ret 0xe0a; 
0x001303aa: xchg byte ptr [ecx + eax*2], al; push cs; adc al, 0x83; add eax, 0x3480e43; ret 0xa02; 
0x00143c6a: xchg byte ptr [ecx + eax*2], al; push cs; adc al, 0x83; add eax, 0xa028d03; ret; 
0x000bb0a3: xchg byte ptr [ecx], al; add byte ptr [ecx + 0x72e82404], cl; ret; 
0x0012db32: xchg byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013ec71: xchg byte ptr [edx], cl; push cs; adc al, 0x41; ret; 
0x0009d426: xchg byte ptr [esi + 0x3dfff8], dl; add dword ptr [eax], eax; add byte ptr [esp + ecx*2 - 0x77], dh; ret 0xe283; 
0x0006868a: xchg ch, bl; add al, byte ptr [eax]; add byte ptr [esi - 0x7d], ah; call 0xf699fb97; ret 0xf40; 
0x00098032: xchg ch, bl; add al, byte ptr [eax]; add byte ptr [esi - 0x7d], ah; call 0xf69df53f; ret 0xf40; 
0x00063d09: xchg dword ptr [eax], ebp; cmp dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x4975; 
0x000abad2: xchg dword ptr [eax], ecx; sub eax, dword ptr [esi + 8]; pop esi; pop edi; ret; 
0x00127072: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011903; ret; 
0x0013b92e: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011b03; ret; 
0x0012f03e: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa011d03; ret; 
0x00139246: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa013503; ret; 
0x0013deee: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa013e03; ret; 
0x0013dd7a: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa014c03; ret; 
0x0013dd1e: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa015603; ret; 
0x0013865e: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa015d03; ret; 
0x00126eb6: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa019e03; ret; 
0x00134732: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01ad03; ret; 
0x00126fde: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01bf03; ret; 
0x0012afba: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa01fe03; ret; 
0x0013b996: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa022a03; ret; 
0x001348fe: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa024003; ret; 
0x0012b0c6: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa025f03; ret; 
0x0012e942: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa026b03; ret; 
0x0012712e: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa02a103; ret; 
0x001427b2: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa030503; ret; 
0x0013de06: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa03a003; ret; 
0x0013d8b2: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa050803; ret; 
0x00126c7a: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa053b03; ret; 
0x0013d836: xchg dword ptr [ebx], eax; xchg byte ptr [ebx + eax*4], al; add eax, 0xa068003; ret; 
0x000af81e: xchg dword ptr [ecx - 0x7cfffff9], edx; ret 0x8b08; 
0x000af742: xchg dword ptr [edx - 0x7cfffff9], ebp; ret 0x8b08; 
0x000af6df: xchg dword ptr [edx - 0x7cfffff9], edi; ret 0x8b08; 
0x0012e0d7: xchg dword ptr [edx], eax; inc ebx; ret; 
0x00060bc8: xchg dword ptr [edx], eax; ret; 
0x001286cd: xchg dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0014cea7: xchg dword ptr [edx], ecx; push cs; or al, 0x41; ret; 
0x0012e429: xchg dword ptr [edx], ecx; ret; 
0x000e3cde: xchg dword ptr [esi - 0x76000002], ecx; ret 0x448b; 
0x000e88d8: xchg dword ptr [esi], eax; add byte ptr [ebx - 0x10f7f], cl; inc dword ptr [0x1c0]; ret; 
0x0014526e: xchg eax, ebp; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x0013126d: xchg eax, ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013481d: xchg eax, ebp; push cs; adc al, 0x41; ret; 
0x0003c6f6: xchg eax, ebp; ret 0x5438; 
0x0006491a: xchg eax, ebp; ret 0xb60f; 
0x000576a2: xchg eax, ebp; ret 0xd089; 
0x000a5f68: xchg eax, ebp; ret 0xd789; 
0x000d3aaf: xchg eax, ebp; ret 0xe0d3; 
0x0003c6c5: xchg eax, ebp; ret 0xe84; 
0x000bb1f7: xchg eax, ebp; ret 0xf089; 
0x00108907: xchg eax, ebp; ret 0xfff1; 
0x000d6cfb: xchg eax, ebp; ror byte ptr [ecx], 0x46; and byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000f9af6: xchg eax, ebp; ror byte ptr [edi], 0xb6; ror byte ptr [ebx - 0x76e7dbb4], 1; xor eax, eax; ret; 
0x000f96f7: xchg eax, ebp; ror byte ptr [edi], 0xb6; ror byte ptr [ebx - 0x76ebdbac], 2; xor eax, eax; ret; 
0x000f96c8: xchg eax, ebp; ror byte ptr [edi], 0xb6; ror byte ptr [ebx - 0x76efdbac], 2; xor eax, eax; ret; 
0x0005fada: xchg eax, ebp; ror byte ptr [edi], 0xb6; sal bh, 0xd8; add esp, 0x14; ret; 
0x0006b361: xchg eax, ebx; add ecx, dword ptr [edx]; add byte ptr [ecx + 0xe5d1fc3], al; add byte ptr [ebx - 0x76dbdbbc], cl; ret 0xe283; 
0x000a9532: xchg eax, ebx; and al, 0; add byte ptr [ecx + 0x24608b], cl; add byte ptr [ebx + 0x5e], bl; ret; 
0x000f23b9: xchg eax, ebx; dec edx; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000bb076: xchg eax, ebx; idiv bh; add esp, 0x28; pop ebx; ret; 
0x0013c621: xchg eax, ebx; idiv bh; ret; 
0x00074a43: xchg eax, ebx; lcall 0x2454:0x89fffc66; or al, 0x8d; xchg eax, ebx; ret 0xfc0b; 
0x00064052: xchg eax, ebx; mov al, byte ptr [0x89fffc00]; push eax; sub byte ptr [ebx + 0x5e5b08c4], al; ret; 
0x0009bab9: xchg eax, ebx; mov bl, 0xf8; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0013170d: xchg eax, ebx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001287d3: xchg eax, ebx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x000a66ff: xchg eax, ebx; push 0x890000c0; push eax; adc al, 0x89; ret 0x838d; 
0x00046b64: xchg eax, ebx; ret 0xfbdf; 
0x0006648e: xchg eax, ebx; ret 0xfc02; 
0x00074a16: xchg eax, ebx; ret 0xfc0b; 
0x0009a7c2: xchg eax, ebx; clc; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000e3dd0: xchg eax, ebx; hlt; mov al, byte ptr [0x1489fffc]; and al, 0xe8; ret; 
0x0004d277: xchg eax, ebx; std; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0010f623: xchg eax, ecx; adc eax, 0x943f07b2; ret 0x8910; 
0x0012e3ad: xchg eax, ecx; add byte ptr [eax], al; ret 0xf2a8; 
0x000fcf4e: xchg eax, ecx; add dword ptr [eax], eax; add byte ptr [ebx + 0x29102454], cl; ret 0x5489; 
0x00037eaa: xchg eax, ecx; mov eax, 0x8bfffffe; add al, 0x82; ret; 
0x0012988f: xchg eax, ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000a1c2f: xchg eax, ecx; push 0x39000046; ret 0xdf74; 
0x0002a23d: xchg eax, ecx; setne al; movzx eax, al; pop ebx; ret; 
0x000d97bc: xchg eax, ecx; cld; inc dword ptr [ebx + 0x5e5b14c4]; pop edi; ret; 
0x0007712b: xchg eax, ecx; ret; 
0x000ebf0e: xchg eax, edi; inc dword ptr [ebx + 0x5f5b08c4]; ret; 
0x00125208: xchg eax, edi; mov ebp, 0xdc14fffe; add dword ptr [eax], eax; ret; 
0x001298ff: xchg eax, edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00095e43: xchg eax, edi; ret 0x920f; 
0x000db8b2: xchg eax, edi; ret 0xd029; 
0x000f07c5: xchg eax, edi; ret 0xfffc; 
0x0005d856: xchg eax, edi; ror byte ptr [edi], 0x92; ret 0xd028; 
0x00118ed1: xchg eax, edi; clc; sal byte ptr [eax - 0x75], 1; dec ebx; ret 0xbe30; 
0x000d4ee0: xchg eax, edx; add dword ptr [eax], eax; add byte ptr [eax - 0x6bf0d106], al; ret 0xb60f; 
0x0012907d: xchg eax, edx; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0005e2ba: xchg eax, edx; mov edi, esp; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x00035062: xchg eax, edx; or ax, 0x8100; ret; 
0x0012539d: xchg eax, edx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000613a3: xchg eax, edx; ret 0x920f; 
0x0005d859: xchg eax, edx; ret 0xd028; 
0x0000c308: xchg eax, edx; test byte ptr [edi], 0; ret; 
0x0009d20d: xchg eax, edx; clc; inc dword ptr [ebx + 0x5e5b50c4]; ret; 
0x0005aa22: xchg eax, edx; cld; inc dword ptr [ebx + 0x5e5b0cc4]; ret; 
0x00059f72: xchg eax, edx; cld; inc dword ptr [ebx + 0x5e5b50c4]; ret; 
0x000db3be: xchg eax, edx; hlt; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000c59b6: xchg eax, esi; adc al, 0xf6; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0005d204: xchg eax, esi; add byte ptr [eax], al; add byte ptr [edi], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x00122525: xchg eax, esi; add dword ptr [eax], eax; ret; 
0x001372fe: xchg eax, esi; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00090f16: xchg eax, esi; cmp bh, cl; inc dword ptr [ebx + 0x5e5b04c4]; pop edi; ret; 
0x00108ba0: xchg eax, esi; lock add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b1cc4], al; ret; 
0x0012880d: xchg eax, esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0002a2c8: xchg eax, esi; xor eax, eax; pop ebx; pop esi; ret; 
0x0005d7c0: xchg eax, esi; cld; dec dword ptr [ebx + 0x4890846]; and al, 0xe8; ret 0xfc8e; 
0x0005d7d3: xchg eax, esi; cld; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x001248ed: xchg eax, esp; add al, byte ptr [eax]; ret 0xfd28; 
0x00067407: xchg eax, esp; add byte ptr [eax], al; add al, ch; call 0x81067e53; ret; 
0x000c64de: xchg eax, esp; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000b07ca: xchg eax, esp; add byte ptr [eax], al; add cl, ch; ret 0xfff3; 
0x0011fab4: xchg eax, esp; add byte ptr gs:[eax], al; xlatb; ret 0xfff0; 
0x00144263: xchg eax, esp; add dword ptr [ebx], eax; cmp eax, 0x140e0a03; inc ecx; ret; 
0x00032102: xchg eax, esp; and al, 0x30; add dword ptr [eax], eax; add al, ch; ret; 
0x000ed84e: xchg eax, esp; and al, 0x88; add byte ptr [eax], al; add byte ptr [ebx + 0x348b01c0], al; ret 0xf685; 
0x000bc485: xchg eax, esp; and al, 0x8c; adc al, byte ptr [eax]; add byte ptr [ecx], ch; ret 0xd089; 
0x00099211: xchg eax, esp; and al, 0x8c; add byte ptr [eax], al; add bh, dh; ret 0xffff; 
0x000b07c8: xchg eax, esp; and al, 0x94; add byte ptr [eax], al; add cl, ch; ret 0xfff3; 
0x00047e7e: xchg eax, esp; and al, 0xa0; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xbc83; 
0x000566d8: xchg eax, esp; jo 0x566db; add bl, ch; ret; 
0x0012bafb: xchg eax, esp; or al, byte ptr [ebx]; mov edx, 0x140e0a01; inc ecx; ret; 
0x0012c706: xchg eax, esp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0002d8f8: xchg eax, esp; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x00083413: xchg eax, esp; ret 0x1689; 
0x00083fff: xchg eax, esp; ret 0x1789; 
0x000e1354: xchg eax, esp; ret 0x688d; 
0x0010f628: xchg eax, esp; ret 0x8910; 
0x000d00f9: xchg eax, esp; ret 0xb60f; 
0x0002fe49: xchg eax, esp; ret 0xd089; 
0x00096085: xchg eax, esp; ret 0xd689; 
0x0005be42: xchg eax, esp; ret 0xdaf7; 
0x000bb1bd: xchg eax, esp; ret 0xf089; 
0x000d0119: xchg eax, esp; ret 0xf685; 
0x001414cc: xchg eax, esp; ret 1; 
0x000d3aac: xchg eax, esp; ror byte ptr [edi], 0x95; ret 0xe0d3; 
0x00096748: xchg eax, esp; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfe40], 4; pop ebx; ret; 
0x0005242b: xchg eax, esp; sal bh, 0xd8; ret; 
0x00007b88: xchg eax, esp; ret; 
0x000983f7: xchg esp, edi; dec dword ptr [ecx + 0x4ee82404]; ret; 
0x000683ea: xchg esp, edi; dec dword ptr [ecx + 0x5be82404]; ret; 
0x0009834e: xchg esp, edi; dec dword ptr [ecx - 0x817dbfc]; ret; 
0x000db769: xor ah, 0xff; add esp, 8; pop ebx; pop esi; ret; 
0x000ea9fa: xor ah, byte ptr [ecx - 0x3b7c000d]; or al, 0x5b; ret; 
0x00141490: xor al, 0; add byte ptr [eax], al; pop esp; ret 1; 
0x0013ed4c: xor al, 0; add byte ptr [eax], al; sbb byte ptr [ebx - 0x4904ffff], bl; idiv edi; ret; 
0x001414c8: xor al, 0; add byte ptr [eax], al; xchg eax, esp; ret 1; 
0x001314d0: xor al, 0; add byte ptr [eax], al; pushfd; ret 0; 
0x000dcc21: xor al, 0x29; ret 0x5489; 
0x000679b6: xor al, 0x33; inc edi; xor byte ptr [ecx], cl; ret 0x2174; 
0x00027fd2: xor al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00028273: xor al, 0x5b; pop esi; pop edi; ret; 
0x000645d4: xor al, 0x5b; ret; 
0x0010496d: xor al, 0x85; sal byte ptr [ecx + ecx + 0xf], cl; mov dh, 0x57; adc al, 0xf6; ret 0x7501; 
0x00042515: xor al, 0x85; test byte ptr [edi], 0x84; ret; 
0x001033a2: xor al, 0x89; ret 0xeac1; 
0x0012ec6c: xor al, 0x9a; add byte ptr [eax], al; stosd dword ptr es:[edi], eax; ret; 
0x000283cd: xor al, 0xe8; and eax, 0x81000e33; ret; 
0x000c1438: xor al, 0xe8; mov edx, 0x810004a2; ret; 
0x000281d5: xor al, 0xe8; sbb eax, 0x81000e35; ret; 
0x0003093f: xor al, 0xf; scasd eax, dword ptr es:[edi]; ret 0xc701; 
0x0014ae45: xor al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000636ba: xor al, 1; ret 0xc6; 
0x00003b50: xor al, 2; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00140c13: xor al, 2; fimul dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0013fdfb: xor al, 2; fisttp dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0012fa83: xor al, 2; in al, dx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00135ce7: xor al, 2; jno 0x135cf5; push cs; adc al, 0x41; ret; 
0x0012dd2b: xor al, 2; jns 0x12dd39; push cs; adc al, 0x41; ret; 
0x0012a591: xor al, 2; jp 0x12a59f; push cs; or al, 0x41; ret; 
0x0012a5c1: xor al, 2; jp 0x12a5cf; push cs; or al, 0x41; ret; 
0x0014be27: xor al, 2; mov bh, 0xa; push cs; adc al, 0x41; ret; 
0x00128fb6: xor al, 2; mov edx, 0x41100e0a; ret; 
0x00149a99: xor al, 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00135087: xor al, 2; push ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00135773: xor al, 2; ror byte ptr [edx], cl; push cs; adc al, 0x41; ret; 
0x0013da7f: xor al, 2; clc; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012a67b: xor al, 2; cmc; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013da1f: xor al, 2; hlt; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014b42b: xor al, 2; popal; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014be93: xor al, 3; cmp eax, 0x140e0a01; inc ecx; ret; 
0x0014beeb: xor al, 3; cmp eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013d6af: xor al, 3; imul eax, dword ptr [ecx], 0xa; push cs; adc al, 0x41; ret; 
0x00126b57: xor al, 3; jno 0x126b5c; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001422db: xor al, 3; mov byte ptr [ecx], 0xa; push cs; adc al, 0x41; ret; 
0x0013cb0f: xor al, 3; mov dword ptr [ecx], 0x41140e0a; ret; 
0x00134a9b: xor al, 3; or al, 2; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00144ddf: xor al, 3; sbb al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014c86f: xor al, 3; sidt ptr [edx]; push cs; adc al, 0x41; ret; 
0x0014b3d7: xor al, 3; sub al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0005387e: xor al, byte ptr [ebp - 0x7cdc8b0a]; ret 0x8301; 
0x0005c5ab: xor al, byte ptr [ebx + 0x5e5b08c4]; pop edi; ret; 
0x0013b7ce: xor al, byte ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014334a: xor al, byte ptr [edx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00072365: xor al, ch; add eax, 0x89ffffef; ret 0x16e9; 
0x0008950a: xor al, ch; call 0x81089d32; ret; 
0x00100430: xor al, ch; ret 0xb2; 
0x0008e0c5: xor al, ch; sub eax, 0x810007d6; ret; 
0x000d422f: xor al, ch; ret; 
0x0008893e: xor bh, ah; dec dword ptr [ecx + 0x57e82404]; ret 0xfff9; 
0x00074a0e: xor bh, ah; dec dword ptr [ecx - 0x72f3dbac]; xchg eax, ebx; ret 0xfc0b; 
0x0008890f: xor bh, ah; dec dword ptr [ecx - 0x7917dbfc]; ret 0xfff9; 
0x00122be1: xor bh, al; ljmp ptr [eax]; ret; 
0x0003469a: xor bh, bh; dec dword ptr [ebp + 0x5e5bf865]; pop ebp; ret; 
0x0002d94d: xor bh, byte ptr [eax]; ret 0x2e75; 
0x00139ccc: xor bh, byte ptr [edx + ecx + 0xe]; adc al, 0x41; ret; 
0x00140023: xor byte ptr [eax + 0xa], bh; push cs; adc al, 0x41; ret; 
0x000c2974: xor byte ptr [eax + 1], bh; add esp, 8; pop esi; ret; 
0x00048059: xor byte ptr [eax - 1], bh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00009cdc: xor byte ptr [eax], al; add byte ptr [eax], al; adc al, byte ptr [eax]; or byte ptr [eax], al; ret 0x2d; 
0x001397f4: xor byte ptr [eax], al; add byte ptr [eax], al; rol byte ptr [ebp + 1], 0; ret; 
0x000315a3: xor byte ptr [eax], al; add byte ptr [ecx + 0x131481], cl; add byte ptr [0x7fffffff], ah; ret; 
0x000ab6f3: xor byte ptr [ebp - 0x55], dh; pop esi; pop edi; pop ebp; ret; 
0x000df1bd: xor byte ptr [ebx + 0x12c2454], cl; ret 0x4589; 
0x000663f5: xor byte ptr [ebx + 0x1342454], cl; ret 0xc6; 
0x000e1b31: xor byte ptr [ebx + 0x13c2454], cl; ret 0x5489; 
0x000db8eb: xor byte ptr [ebx + 0x244c890f], cl; or byte ptr [ecx], al; ret 0x5489; 
0x000f894f: xor byte ptr [ebx + 0x48d1040], cl; test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x7ccfdbac], cl; ret 0x890c; 
0x0007e6cd: xor byte ptr [ebx + 0x5e5b08c4], al; ret; 
0x000f3f2e: xor byte ptr [ebx + 0x5e5b0cc4], al; pop edi; ret; 
0x0002e455: xor byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000964f2: xor byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000c5a41: xor byte ptr [ebx + 0x5e], bl; ret; 
0x000b5e2d: xor byte ptr [ebx - 0x3b7cfb40], al; add al, 0x5b; pop esi; ret; 
0x000885c6: xor byte ptr [ebx - 0x7cefdbac], cl; ret 0x8901; 
0x00143cdb: xor byte ptr [ebx], al; adc dword ptr [ecx], eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001392d7: xor byte ptr [ebx], al; adc eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013024f: xor byte ptr [ebx], al; adc eax, dword ptr [edx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013ecaf: xor byte ptr [ebx], al; add dword ptr fs:[edx], ecx; push cs; adc al, 0x41; ret; 
0x00141aeb: xor byte ptr [ebx], al; arpl word ptr [ecx], ax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0014c493: xor byte ptr [ebx], al; imul eax, dword ptr [ecx], 0x41140e0a; ret; 
0x00144aa3: xor byte ptr [ebx], al; jno 0x144aa8; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001471cf: xor byte ptr [ebx], al; mov es, word ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00126cb7: xor byte ptr [ebx], al; or eax, 0x140e0a01; inc ecx; ret; 
0x00139f9b: xor byte ptr [ebx], al; test dword ptr [ecx], 0x41140e0a; ret; 
0x0014ae43: xor byte ptr [ebx], al; xor al, 1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012a067: xor byte ptr [ebx], al; xor byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000cf6f3: xor byte ptr [ecx + 0x48890478], cl; or byte ptr [esi + 0x5f], bl; ret 4; 
0x000cf6b6: xor byte ptr [ecx + 0x50890478], cl; or byte ptr [esi + 0x5f], bl; ret 4; 
0x000c259e: xor byte ptr [ecx + 0x5f5e287a], cl; ret; 
0x00135f33: xor byte ptr [ecx + 0xa], dh; push cs; adc al, 0x41; ret; 
0x000d97bb: xor byte ptr [ecx - 0x3b7c0004], dl; adc al, 0x5b; pop esi; pop edi; ret; 
0x0009112b: xor byte ptr [ecx - 0x7317dbf4], cl; push ebx; stc; dec dword ptr [ebx - 0x7cc7dbac]; ret 0x8901; 
0x0002ee6c: xor byte ptr [ecx - 0x76a3dbb4], cl; ret 0x13eb; 
0x000996eb: xor byte ptr [ecx], al; add byte ptr [eax], al; add cl, ch; ret 0xfff2; 
0x000ab4b7: xor byte ptr [ecx], al; add esp, 0xc; pop ebx; pop esi; ret; 
0x0012a069: xor byte ptr [ecx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0003ae14: xor byte ptr [ecx], bh; ret 0x860f; 
0x000c26a2: xor byte ptr [ecx], bh; ret 0xee7d; 
0x000679b9: xor byte ptr [ecx], cl; ret 0x2174; 
0x000f977c: xor byte ptr [ecx], dh; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x001430c5: xor byte ptr [edi + 0xa], ah; push cs; or al, 0x41; ret; 
0x00139968: xor byte ptr [edi + 1], al; add byte ptr [esi], dh; ret; 
0x0012461c: xor byte ptr [edi + 2], bh; add byte ptr [esi], dl; ret 0xfffc; 
0x0004e0ca: xor byte ptr [edi + eax - 0x48], 1; add byte ptr [eax], al; add cl, cl; ret; 
0x0005c8db: xor byte ptr [edi + eax - 9], 0xd8; add esp, 0xc; pop ebx; ret; 
0x000db5dc: xor byte ptr [edi - 0x3b7c000c], bh; adc al, 0x5b; pop esi; ret; 
0x0002a881: xor byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x101; 
0x000300b1: xor byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret 0xc601; 
0x00045336: xor byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret 0xc701; 
0x000cb986: xor byte ptr [edx - 0x29], 0x4a; and eax, edx; ret; 
0x001412e3: xor byte ptr [edx], al; arpl word ptr [edx], cx; push cs; adc al, 0x41; ret; 
0x001298cf: xor byte ptr [edx], al; dec ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012e073: xor byte ptr [edx], al; fisttp qword ptr [edx]; push cs; adc al, 0x41; ret; 
0x00148f57: xor byte ptr [edx], al; inc esi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00136cff: xor byte ptr [edx], al; int 0xa; push cs; adc al, 0x41; ret; 
0x0013b49f: xor byte ptr [edx], al; jno 0x13b4ad; push cs; adc al, 0x41; ret; 
0x0012976f: xor byte ptr [edx], al; mov byte ptr [edx], cl; push cs; adc al, 0x41; ret; 
0x0013f9db: xor byte ptr [edx], al; mov cs, word ptr [edx]; push cs; adc al, 0x41; ret; 
0x0014cab7: xor byte ptr [edx], al; mov dl, 0xa; push cs; adc al, 0x41; ret; 
0x0012e01b: xor byte ptr [edx], al; mov dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0014bc2b: xor byte ptr [edx], al; mov edi, 0x41140e0a; ret; 
0x00134ce7: xor byte ptr [edx], al; mov esi, 0x41140e0a; ret; 
0x00136d90: xor byte ptr [edx], al; or cl, byte ptr [0x4108]; ret; 
0x0012aadd: xor byte ptr [edx], al; or cl, byte ptr [0x410c]; ret; 
0x00149f53: xor byte ptr [edx], al; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013fecb: xor byte ptr [edx], al; outsd dx, dword ptr [esi]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012c15f: xor byte ptr [edx], al; pop eax; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001370b3: xor byte ptr [edx], al; pop ecx; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013eed4: xor byte ptr [edx], al; push 0x41080e0a; ret; 
0x00129583: xor byte ptr [edx], al; push ebp; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012d997: xor byte ptr [edx], al; ret 0xe0a; 
0x00135aed: xor byte ptr [edx], al; xchg eax, ebx; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x0012d627: xor byte ptr [edx], al; xchg eax, edi; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00144813: xor byte ptr [edx], al; into; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00136e17: xor byte ptr [edx], al; sahf; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013cc4f: xor byte ptr [edx], al; stc; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013b135: xor byte ptr [edx], al; wait; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x000a411a: xor ch, byte ptr [0xc031fff8]; add esp, 8; pop ebx; pop esi; ret; 
0x0006b12a: xor cl, byte ptr [ecx - 0x3b7c0005]; or al, 0x5b; ret; 
0x00004ac4: xor cl, byte ptr [ecx]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret 9; 
0x000ac4bd: xor cl, ch; ret; 
0x00044b67: xor dl, byte ptr [eax]; add esp, 0x10; pop ebx; pop esi; ret; 
0x0000f908: xor dword ptr [eax + 0x30005], esp; add byte ptr [eax], al; and al, byte ptr [eax]; or byte ptr [eax], al; ret; 
0x00006e19: xor dword ptr [eax + eax], ecx; ret; 
0x0009c54b: xor dword ptr [eax + edi*8 + 0xcc483ff], ebp; pop ebx; ret; 
0x000d97ba: xor dword ptr [eax], 0xffffff91; cld; inc dword ptr [ebx + 0x5e5b14c4]; pop edi; ret; 
0x00006b1c: xor dword ptr [eax], eax; add byte ptr [eax], al; and al, byte ptr [eax]; or byte ptr [eax], al; ret 0x38; 
0x000983f5: xor dword ptr [ebx - 0x76000379], 4; and al, 0xe8; dec esi; ret; 
0x000683e8: xor dword ptr [ebx - 0x76000379], 4; and al, 0xe8; pop ebx; ret; 
0x0002c26b: xor dword ptr [ecx + 0x468bffff], ecx; sub byte ptr [ebx + 0x5e5b10c4], al; ret; 
0x001066d1: xor dword ptr [ecx], eax; add byte ptr [eax], al; int 0x80; ret; 
0x000625fc: xor dword ptr [edi], esp; add byte ptr [eax], al; add byte ptr [ebx - 0x76b3dbbc], cl; ret 0x4489; 
0x0014c136: xor eax, 0x140e0a01; inc ecx; ret; 
0x0005be7b: xor eax, 0x1f; and edx, 0x20; add eax, edx; pop esi; ret; 
0x000f920e: xor eax, 0x29000000; ret 0x458b; 
0x000f6fec: xor eax, 0x29000000; ret 0xbae9; 
0x000c77ac: xor eax, 0x5bfffc7a; ret; 
0x000885c1: xor eax, 0x740af980; xor byte ptr [ebx - 0x7cefdbac], cl; ret 0x8901; 
0x00120840: xor eax, 0x7cfff2b4; ret; 
0x000e07bf: xor eax, 0x810002af; ret; 
0x000a2fbf: xor eax, 0x81000687; ret; 
0x0009c4bf: xor eax, 0x810006f2; ret; 
0x00090abf: xor eax, 0x810007ac; ret; 
0x000842bf: xor eax, 0x81000874; ret; 
0x000657bf: xor eax, 0x81000a5f; ret; 
0x000db53c: xor eax, 0x8bfffffe; push esp; and al, 4; mov dword ptr [eax + 0x1b8], edx; ret; 
0x000db558: xor eax, 0x8bfffffe; push esp; and al, 4; mov dword ptr [eax + 0x1bc], edx; ret; 
0x0005d281: xor eax, dword ptr [eax + eax]; add byte ptr [ecx + 0xffa89f0], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x0005d345: xor eax, dword ptr [eax + eax]; add byte ptr [edi], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x000b2cc0: xor eax, dword ptr [ebx + 0x47401f8]; pop ebx; pop esi; pop edi; ret; 
0x000c8de3: xor eax, dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x001300e9: xor eax, dword ptr [ecx]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0005c87b: xor eax, dword ptr [ecx]; ret 0xd089; 
0x001272aa: xor eax, dword ptr [edx + ecx]; push cs; adc al, 0x41; ret; 
0x0002c11b: xor eax, eax; add esp, 0x10; pop ebx; pop esi; ret; 
0x000333b1: xor eax, eax; add esp, 0x10; pop ebx; ret; 
0x000c2a60: xor eax, eax; add esp, 0x10; pop esi; ret; 
0x0005d12e: xor eax, eax; add esp, 0x10; ret; 
0x000908ac: xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x00036f90: xor eax, eax; add esp, 0x14; pop ebx; ret; 
0x0003ee6b: xor eax, eax; add esp, 0x18; pop ebx; pop esi; ret; 
0x0003bbba: xor eax, eax; add esp, 0x18; pop ebx; ret; 
0x000c5c57: xor eax, eax; add esp, 0x1c; pop ebx; pop esi; ret; 
0x00043860: xor eax, eax; add esp, 0x20; pop ebx; pop esi; ret; 
0x000828e3: xor eax, eax; add esp, 0x24; pop ebx; pop esi; ret; 
0x000437d4: xor eax, eax; add esp, 0x24; pop ebx; ret; 
0x00089376: xor eax, eax; add esp, 0x28; pop ebx; ret; 
0x0004d7c1: xor eax, eax; add esp, 0x2c; pop ebx; pop esi; ret; 
0x000893f6: xor eax, eax; add esp, 0x2c; pop ebx; ret; 
0x000439e9: xor eax, eax; add esp, 0x38; pop ebx; pop esi; ret; 
0x00036e71: xor eax, eax; add esp, 0x44; pop ebx; pop esi; ret; 
0x00059f81: xor eax, eax; add esp, 0x50; pop ebx; pop esi; ret; 
0x000fb05c: xor eax, eax; add esp, 0x88; pop ebx; pop esi; ret; 
0x00080c85: xor eax, eax; add esp, 0xc; pop ebx; pop edi; ret; 
0x00028696: xor eax, eax; add esp, 0xc; pop ebx; pop esi; ret; 
0x0009c913: xor eax, eax; add esp, 0xc; pop ebx; ret; 
0x0003716b: xor eax, eax; add esp, 0xc; pop esi; pop edi; ret; 
0x000521fb: xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0002b80b: xor eax, eax; add esp, 4; pop ebx; ret; 
0x000523ab: xor eax, eax; add esp, 4; pop esi; pop edi; ret; 
0x00052362: xor eax, eax; add esp, 4; pop esi; ret; 
0x0002a0d3: xor eax, eax; add esp, 8; pop ebx; pop esi; ret; 
0x0009c9e0: xor eax, eax; add esp, 8; pop ebx; ret; 
0x00061803: xor eax, eax; add esp, 8; pop esi; ret; 
0x0004e2b4: xor eax, eax; and edx, 0x7fffff; setne al; ret; 
0x00052e28: xor eax, eax; cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x00037098: xor eax, eax; cmp edx, 2; sete al; add esp, 0xc; ret; 
0x000f9a26: xor eax, eax; mov ecx, dword ptr [esp + 0x10]; mov dword ptr [ecx], edx; ret; 
0x000d7e51: xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0002a284: xor eax, eax; pop ebx; pop esi; ret; 
0x0005725b: xor eax, eax; pop ebx; nop; ret; 
0x0006b687: xor eax, eax; pop ebx; ret; 
0x0005d214: xor eax, eax; pop esi; pop ebp; ret; 
0x000615cb: xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x00052402: xor eax, eax; pop esi; pop edi; ret; 
0x000d228c: xor eax, eax; pop esi; nop; ret; 
0x0002bb62: xor eax, eax; pop esi; ret; 
0x0005bdc0: xor eax, eax; shl edx, cl; ret; 
0x0005d219: xor eax, eax; xor edx, edx; pop esi; pop ebp; ret; 
0x0005d175: xor eax, eax; xor edx, edx; leave; ret; 
0x0004e0ba: xor eax, eax; leave; ret; 
0x000ea0ac: xor eax, eax; nop; ret; 
0x000283c2: xor eax, eax; ret; 
0x000483be: xor eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0005d497: xor eax, edx; sub eax, edx; add esp, 0xc; pop ebx; ret; 
0x0010a116: xor eax, esi; xor edx, esi; pop ebx; pop esi; ret; 
0x000b4751: xor eax, esi; xor edx, esi; pop esi; ret; 
0x000ebb2a: xor ebx, 0xffffffff; add esp, 4; pop ebx; ret; 
0x0010339e: xor ecx, dword ptr [ebx - 0x76cbdbbc]; ret 0xeac1; 
0x000b2649: xor ecx, dword ptr [edi]; idiv edi; add esp, 0x18; pop ebx; ret; 
0x001090e9: xor edi, dword ptr [esi - 0x3b7c000f]; or al, 0x5b; pop esi; ret; 
0x00122c01: xor edi, eax; dec eax; ret; 
0x00034639: xor edi, edi; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0007fad4: xor edx, edx; div dword ptr [esp + 8]; ret; 
0x00095560: xor edx, edx; mov eax, dword ptr [esp + 0x18]; call 0x94920; add esp, 0x14; ret; 
0x000d85cb: xor edx, edx; mov eax, edi; pop edi; pop ebx; ret; 
0x0005a9ef: xor edx, edx; pop ebp; ret; 
0x0005d1fd: xor edx, edx; pop esi; pop ebp; ret; 
0x0005bd04: xor edx, edx; shr eax, cl; ret; 
0x000647fa: xor edx, edx; sub eax, edx; pop esi; ret; 
0x0005d171: xor edx, edx; leave; ret; 
0x000c8ed4: xor edx, edx; ret; 
0x0010a118: xor edx, esi; pop ebx; pop esi; ret; 
0x000b46e9: xor edx, esi; pop edi; pop ebx; pop esi; ret; 
0x000b4753: xor edx, esi; pop esi; ret; 
0x000f81bb: xor esi, 0xc483fff2; add al, 0x5b; ret; 
0x0005c879: xor esi, dword ptr [ebx]; xor eax, dword ptr [ecx]; ret 0xd089; 
0x00037097: xor esi, dword ptr [ecx]; rol byte ptr [ebx - 0x6bf0fd06], 0xc0; add esp, 0xc; ret; 
0x00124f81: xor esi, edi; call eax; ret; 
0x00124f89: xor esi, edi; push eax; ret; 
0x00123bed: aaa; add al, byte ptr [eax]; ret; 
0x0014a0c8: aaa; add cl, byte ptr [edx]; push cs; adc al, 0x41; ret; 
0x00144b85: aaa; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00119046: aaa; jno 0x119018; sti; sal byte ptr [ebp - 0x164a245b], 0x5b; ret 0x3956; 
0x000d5d2d: aaa; ret; 
0x00091251: aaa; stc; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0012d5ac: aad; push cs; adc al, 0x41; ret; 
0x0012fe75: aam; ret; 
0x000ea135: aas; add byte ptr [ebp + ebx - 0x7d], dh; ret 0x8001; 
0x000e4e6d: aas; add dh, ah; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00030fd9: aas; add dword ptr [eax], eax; add byte ptr [ebx - 0x7cc7dbac], cl; ret 0x8b01; 
0x0013015a: aas; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00141c2d: aas; add ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x0004e69b: aas; add esp, 4; ret; 
0x0010a53d: aas; mov eax, 0xc483fff1; or byte ptr [ebx + 0x5e], bl; ret; 
0x0010f627: aas; xchg eax, esp; ret 0x8910; 
0x0008290c: aas; cli; inc dword ptr [ebx + 0x5e5b24c4]; ret; 
0x0005c89a: aas; ret; 
0x0005519c: cdq; add byte ptr [eax], al; add al, ch; ret; 
0x000aa334: cdq; add byte ptr [eax], al; add byte ptr [ebx - 0x7ac3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x0000dc0c: cdq; add eax, 0x120000; or byte ptr [eax], al; ret 0xb; 
0x0005752f: cdq; add eax, dword ptr [eax]; add byte ptr [ebx - 0x41f0fd39], al; ret 0x4489; 
0x00096cb0: cdq; add esp, 8; pop ebx; pop ebp; ret; 
0x0007fae4: cdq; idiv dword ptr [esp + 8]; ret; 
0x0012a87d: cdq; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000db65b: cdq; hlt; inc dword ptr [ebx + 0x5e5b1cc4]; ret; 
0x0009a61c: clc; add al, byte ptr [ebx + 0x5e5b10c4]; ret; 
0x000c77b3: clc; add dh, byte ptr [ebp + 0x1c]; lea eax, dword ptr [ebx - 0x385e8]; pop ebx; ret; 
0x000c637c: clc; add dh, byte ptr [edi + 8]; mov eax, dword ptr [ecx + eax*4 - 0x38840]; ret; 
0x000e2404: clc; add dword ptr [ebp + edi*2 - 0x18], esi; ret; 
0x000ea0a8: clc; add dword ptr [ebp - 0xf], esi; xor eax, eax; nop; ret; 
0x00067ec5: clc; add dword ptr [ecx], ebx; rol byte ptr [ebx + 0x548b02e0], 0x24; adc byte ptr [ecx], ch; ret 0x5489; 
0x00083410: clc; add dword ptr [edi], ecx; xchg eax, esp; ret 0x1689; 
0x00083ffc: clc; add dword ptr [edi], ecx; xchg eax, esp; ret 0x1789; 
0x000b2cc2: clc; add dword ptr [esp + eax + 0x5b], esi; pop esi; pop edi; ret; 
0x00047e58: clc; add edi, dword ptr [ecx]; ret 0x6472; 
0x000dfda7: clc; add esi, dword ptr [ebp + 0xe]; lea eax, dword ptr [ecx - 0x3620d]; ret; 
0x000c6069: clc; add esi, dword ptr [edi + 8]; mov eax, dword ptr [ecx + eax*4 - 0x38834]; ret; 
0x000a8012: clc; and byte ptr [ecx], dh; ror byte ptr [ecx + 0x4428932], 0x83; rol byte ptr [ecx], 0x83; ret 0x3908; 
0x0005c8be: clc; and eax, 1; ret; 
0x000f7234: clc; and eax, 3; ret; 
0x00122dba: clc; call eax; iretd; add dword ptr [eax], eax; ret; 
0x00097e80: clc; dec dword ptr [ebx + 0x4891447]; and al, 0xe8; ret; 
0x0007cef0: clc; dec dword ptr [edi]; test byte ptr [esi - 0x76ffffff], dl; ret 0xe283; 
0x000adc72: clc; dec dword ptr [edi]; test dword ptr [edi - 0x16000003], edi; ret; 
0x00122c02: clc; dec eax; ret; 
0x000612e5: clc; fild dword ptr [ebp + 0xc]; fisubr dword ptr [ebp + 8]; leave; ret; 
0x000a2eed: clc; inc dword ptr [ebx + 0x5d5b04c4]; ret; 
0x000a2ebf: clc; inc dword ptr [ebx + 0x5d5b08c4]; ret; 
0x000a0b9f: clc; inc dword ptr [ebx + 0x5e5b04c4]; pop edi; ret; 
0x000a2a84: clc; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0009c986: clc; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x0009a7c3: clc; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0009babb: clc; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000969cf: clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0009d20e: clc; inc dword ptr [ebx + 0x5e5b50c4]; ret; 
0x00096cae: clc; lcall ptr [ecx + 0x5b08c483]; pop ebp; ret; 
0x00122f72: clc; ljmp ptr [eax + 0x200001dd]; ret 0xfff8; 
0x00122be2: clc; ljmp ptr [eax]; ret; 
0x000a592b: clc; mov eax, edx; nop; ret; 
0x00127ea1: clc; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000c77c7: clc; or dword ptr [ebp - 0x36], esi; lea eax, dword ptr [ebx - 0x38580]; pop ebx; ret; 
0x000cf727: clc; pop ds; or eax, 1; ret; 
0x000cf7b4: clc; pop ebx; pop esi; pop ebp; ret 4; 
0x0003469f: clc; pop ebx; pop esi; pop ebp; ret; 
0x000d85ce: clc; pop edi; pop ebx; ret; 
0x0003f962: clc; pop esi; pop edi; pop ebp; ret; 
0x0005cab8: clc; pop esi; pop edi; ret; 
0x00032548: clc; push dword ptr [eax + ecx - 0x77]; rol byte ptr [ebx + 0x5e5b0cc4], 1; ret; 
0x000ea093: clc; push dword ptr [ebp + 6]; mov eax, 4; ret; 
0x00061ed4: clc; push dword ptr [ebp + edx - 0x77]; ret 0xe2c1; 
0x0005b258: clc; push dword ptr [edx + ecx - 0x77]; ret 0xead1; 
0x00076e64: clc; ret 0xfffa; 
0x000372ed: clc; ret 0xfffb; 
0x00124f6c: clc; ret 2; 
0x0003f4fc: clc; ror dword ptr [eax + eax], -0x7f; ret; 
0x00118ed2: clc; sal byte ptr [eax - 0x75], 1; dec ebx; ret 0xbe30; 
0x00026bd7: clc; sbb eax, 0xf0e90000; ret; 
0x000c8772: clc; sub eax, dword ptr [eax]; add byte ptr [ecx - 0x2d17dbfc], cl; ret; 
0x0010a1f2: clc; xor eax, eax; pop esi; ret; 
0x00135a9f: clc; popal; add eax, dword ptr [ebx + 0x140e0a03]; inc ecx; ret; 
0x0005bda0: clc; ret; 
0x000f9654: clc; xlatb; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x00060c13: cld; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0011fad4: cld; add byte ptr gs:[eax], al; inc ebx; ret; 
0x001349a6: cld; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x0004e6a7: cld; and eax, 0xc00; ret; 
0x00124662: cld; call dword ptr [eax + eax*4]; add al, byte ptr [eax]; dec eax; ret; 
0x0005d7c1: cld; dec dword ptr [ebx + 0x4890846]; and al, 0xe8; ret 0xfc8e; 
0x000ba63d: cld; dec dword ptr [ecx + 0x19e82404]; ret 0xfff6; 
0x000983f8: cld; dec dword ptr [ecx + 0x4ee82404]; ret; 
0x0008893f: cld; dec dword ptr [ecx + 0x57e82404]; ret 0xfff9; 
0x000683eb: cld; dec dword ptr [ecx + 0x5be82404]; ret; 
0x000565f1: cld; dec dword ptr [ecx + 0x709083]; add byte ptr [ebp - 0x76368b40], al; ret 0xf089; 
0x00059b7c: cld; dec dword ptr [ecx + 0xcc483f0]; pop ebx; pop esi; ret; 
0x000bab2a: cld; dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; ret 0; 
0x00093957: cld; dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; ret 1; 
0x0006ca86: cld; dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; ret 2; 
0x0008ca57: cld; dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; ret 4; 
0x0006cab5: cld; dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; ret; 
0x000e206c: cld; dec dword ptr [ecx - 0x38fbdbbc]; add al, 0x24; and eax, 0xe8000000; ret 0xf458; 
0x000a2585: cld; dec dword ptr [ecx - 0x3b7cd7b0]; or al, 0x5b; pop esi; ret; 
0x00064055: cld; dec dword ptr [ecx - 0x3b7cd7b0]; or byte ptr [ebx + 0x5e], bl; ret; 
0x000688e7: cld; dec dword ptr [ecx - 0x5017dbfc]; ret 0xfffb; 
0x00108901: cld; dec dword ptr [ecx - 0x6a17dbfc]; ret 0xfff1; 
0x00074a0f: cld; dec dword ptr [ecx - 0x72f3dbac]; xchg eax, ebx; ret 0xfc0b; 
0x00088910: cld; dec dword ptr [ecx - 0x7917dbfc]; ret 0xfff9; 
0x0009834f: cld; dec dword ptr [ecx - 0x817dbfc]; ret; 
0x0004e64e: cld; fldcw word ptr [esp - 4]; ret; 
0x0012463a: cld; inc dword ptr [eax + 0x7200027f]; ret 0xfffc; 
0x0006292d: cld; inc dword ptr [ebx + 0x5e5b04c4]; pop edi; ret; 
0x0005b768: cld; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0005aa23: cld; inc dword ptr [ebx + 0x5e5b0cc4]; ret; 
0x0005b5b0: cld; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000d97bd: cld; inc dword ptr [ebx + 0x5e5b14c4]; pop edi; ret; 
0x000653cd: cld; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000d8f42: cld; inc dword ptr [ebx + 0x5e5b18c4]; ret; 
0x0005ed0d: cld; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; ret; 
0x0006532a: cld; inc dword ptr [ebx + 0x5e5b20c4]; ret; 
0x00059f73: cld; inc dword ptr [ebx + 0x5e5b50c4]; ret; 
0x000f84c4: cld; inc dword ptr [ecx + ecx*8 + 0x5e5be975]; pop edi; ret; 
0x00124622: cld; inc dword ptr [edi + edi*2 + 2]; add byte ptr [edx], ch; ret 0xfffc; 
0x0012462a: cld; lcall ptr [eax + 0x7f]; add al, byte ptr [eax]; inc edx; ret 0xfffc; 
0x000f3780: cld; lcall ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0012464a: cld; ljmp ptr [eax - 0x61fffd81]; ret 0xfffc; 
0x0004e6a3: cld; mov eax, dword ptr [esp - 4]; and eax, 0xc00; ret; 
0x0012c6c6: cld; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012be8b: cld; or dword ptr [ebx], eax; mov edx, 0x140e0a01; inc ecx; ret; 
0x0002c49c: cld; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0005cb6c: cld; leave; ret 4; 
0x000345d5: cld; leave; ret; 
0x0003c7ff: cld; ret; 
0x000315ba: cli; adc dword ptr [eax], eax; mov eax, dword ptr [esp + 4]; mov dword ptr [ecx + 0x1314], eax; ret; 
0x000f3cfa: cli; add al, 0x76; add esp, dword ptr [esi - 0x70]; ret; 
0x0004e29e: cli; add dword ptr [ecx], ebx; sal bh, 0xd0; add eax, 4; ret; 
0x00138c01: cli; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x000c538d: cli; add esi, dword ptr [edi + 4]; xor eax, eax; pop esi; ret; 
0x000f3d52: cli; and byte ptr [ebp - 0x24], dh; ret; 
0x000f3cf2: cli; and byte ptr [ebx + ecx - 0x80], dh; ljmp 0x376:0x4fa8009; nop; ret; 
0x000f3e18: cli; and byte ptr [edx + ecx - 0x80], dh; ljmp 0x276:0x4fa8009; pop esi; ret; 
0x0004e224: cli; cmp byte ptr [edi + 0x74], 3; xor eax, eax; ret; 
0x000b3eae: cli; cmp dword ptr [edx + ebp*8 - 0x80], esi; ret 0x8801; 
0x0007e430: cli; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0007e3f6: cli; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x0007e264: cli; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0007d296: cli; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x00076f11: cli; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0008290d: cli; inc dword ptr [ebx + 0x5e5b24c4]; ret; 
0x0007fc29: cli; inc dword ptr [ebx + 0x5f5b10c4]; ret; 
0x0012353a: cli; lcall ptr [eax + 8]; add al, byte ptr [eax]; ret 0xfa0e; 
0x00142c8d: cli; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0005bd9d: cli; pop ds; sar eax, cl; ret; 
0x0008240e: cli; pop es; add dword ptr [edi + edx - 0x77], esi; ret 0xca0f; 
0x000a2f9a: cli; pop esi; pop edi; pop ebp; ret; 
0x000d2288: cli; sub eax, 0xc031f274; pop esi; nop; ret; 
0x0005bd98: cli; ret; 
0x000ab6be: cmc; add dword ptr [ebx + 0x568bae0c], ecx; or dh, dh; ret 0x7501; 
0x00131855: cmc; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00116de2: cmc; call dword ptr [esi]; ret; 
0x00116dda: cmc; call edx; ret; 
0x000c7768: cmc; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000c80ee: cmc; inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; ret; 
0x000c807b: cmc; inc dword ptr [ebx + 0x5e5b0cc4]; ret; 
0x000c65af: cmc; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000c781b: cmc; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000c624c: cmc; inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x000c61d5: cmc; inc dword ptr [ebx + 0x5e5b20c4]; ret; 
0x000c916d: cmc; inc dword ptr [ebx + 0x5f5b0cc4]; ret; 
0x00116ce6: cmc; inc dword ptr [edi]; ret 0xfff5; 
0x00116d5e: cmc; lcall ptr [ebx + 0x7afff5bf]; ret 0xfff5; 
0x00116dbe: cmc; ljmp ptr [edi + 0x61fff5c1]; ret; 
0x00116d26: cmc; ljmp ptr [edi + 0x7afff5c1]; ret 0xfff5; 
0x000ea119: cmc; mov eax, edi; pop esi; pop edi; ret; 
0x00128865: cmc; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00116df2: cmc; push dword ptr [ebx]; ret 0xfff5; 
0x00116ce2: cmc; push dword ptr [edi - 0x40]; cmc; inc dword ptr [edi]; ret 0xfff5; 
0x0010dfe4: cmc; ret 0xffee; 
0x000d788a: cmc; hlt; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x00104349: cmc; ret; 
0x000a3336: cwde; add byte ptr [eax], al; add al, ch; mov ecx, 0x81000683; ret; 
0x000f3834: cwde; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00047ff5: cwde; add byte ptr [eax], al; add byte ptr [ecx + 0xf], dh; popfd; ret 0xc283; 
0x0014564b: cwde; add dword ptr [ebx], eax; add dword ptr [edx], 0x41140e0a; ret; 
0x0012ea7d: cwde; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00141dd6: cwde; add ecx, dword ptr [esi]; adc al, 0x41; ret; 
0x00121ab4: cwde; dec eax; add dword ptr [eax], eax; ret 0xf56b; 
0x0006ac14: cwde; mov bl, 0xfb; inc dword ptr [ebx + 0x5e5b28c4]; pop edi; ret; 
0x00126c49: cwde; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012a2db: cwde; or dword ptr [ebx], eax; cmp eax, 0x140e0a03; inc ecx; ret; 
0x001372b7: cwde; or dword ptr [ebx], eax; mov dword ptr [ecx], 0x41140e0a; ret; 
0x000050bc: cwde; pop es; add byte ptr [eax], al; ret 0xa; 
0x000f3d5b: daa; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000625fd: daa; add byte ptr [eax], al; add byte ptr [ebx - 0x76b3dbbc], cl; ret 0x4489; 
0x000980de: das; add byte ptr [eax], al; add byte ptr [ecx + 0x6e8243c], cl; ret 0xfff8; 
0x0004e6d4: fabs; ret; 
0x0007c552: fcos; dec dword ptr [ebx - 0x7c8fdbac]; ret 0x8901; 
0x00145123: hlt; add al, 3; mov edi, 0x140e0a02; inc ecx; ret; 
0x001446b9: hlt; add dword ptr [eax], eax; ret 0xf96f; 
0x0013a3b1: hlt; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x000d8f74: hlt; dec dword ptr [ecx + 0x18c483f0]; pop ebx; pop esi; ret; 
0x000e0760: hlt; dec dword ptr [ecx + 0x8c48306]; pop ebx; pop esi; ret; 
0x00121822: hlt; inc dword ptr [eax - 0x23fffed3]; sal esp, -1; mov al, byte ptr [0x4e00012d]; ret 0xfff4; 
0x00115a6e: hlt; inc dword ptr [eax]; add byte ptr [eax], al; ret; 
0x000db1ba: hlt; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x000d8028: hlt; inc dword ptr [ebx + 0x5e5b0cc4]; ret; 
0x000e4e6f: hlt; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000d788b: hlt; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000db5de: hlt; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000d7201: hlt; inc dword ptr [ebx + 0x5e5b18c4]; pop edi; ret; 
0x000db50e: hlt; inc dword ptr [ebx + 0x5e5b1cc4]; ret; 
0x000db6da: hlt; inc dword ptr [ebx + 0x5e5b20c4]; ret; 
0x000db498: hlt; inc dword ptr [ebx + 0x5e5b2cc4]; ret; 
0x000e3dd1: hlt; mov al, byte ptr [0x1489fffc]; and al, 0xe8; ret; 
0x0013da21: hlt; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012165a: hlt; push dword ptr [eax + 0x1e]; add dword ptr [eax], eax; ret; 
0x000d8361: hlt; hlt; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0005c682: int1; and eax, ecx; add eax, edx; pop esi; ret; 
0x0010b716: int1; dec ecx; ret; 
0x0010a53f: int1; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x0010a43a: int1; inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; ret; 
0x001090eb: int1; inc dword ptr [ebx + 0x5e5b0cc4]; ret; 
0x0010b673: int1; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0010a6e1: int1; lcall ptr [ebx - 0x71]; add byte ptr [eax - 1], bh; mov edx, 0xffffffff; ret; 
0x00120302: int1; ljmp ptr [esp + ebx*4]; add byte ptr [eax], al; push ds; ret; 
0x000c25b3: int1; mov dword ptr [edx + 0xc], ecx; pop esi; pop edi; ret; 
0x000c8ed0: int1; mov eax, edx; pop ebx; xor edx, edx; ret; 
0x000d861a: int1; mov edx, ebx; pop ebx; ret; 
0x001385d5: int1; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000ea0ab: int1; xor eax, eax; nop; ret; 
0x000777d3: int1; ret; 
0x000e894a: into; mov byte ptr [eax], cl; mov byte ptr [eax + 1], dl; ret; 
0x0002c456: into; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00134af6: into; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000c82f3: into; sbb dword ptr [ebx + 0x11c2454], ecx; ret 0xd131; 
0x000c65ae: into; cmc; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0005aa7e: into; ret; 
0x00122dbd: iretd; add dword ptr [eax], eax; ret; 
0x0012b505: iretd; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00052a6d: iretd; or bh, ch; inc dword ptr [ebx + 0x5e5b1cc4]; ret; 
0x00126790: iretd; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00044627: iretd; pop esi; pop edi; pop ebp; ret; 
0x000c624b: iretd; cmc; inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x00119048: iretd; sti; sal byte ptr [ebp - 0x164a245b], 0x5b; ret 0x3956; 
0x00120831: lahf; dec dword ptr [eax]; ret; 
0x000bf055: lahf; mov byte ptr [eax + eax], 0x81; ret; 
0x00137342: lahf; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013fa35: lahf; push cs; adc al, 0x41; ret; 
0x000f57fc: lahf; ret 0xd201; 
0x0006331a: lahf; ret 0xd284; 
0x0008bdeb: lahf; stc; push dword ptr [ecx]; rol byte ptr [ebx - 0x6bf0fe08], cl; ret 0x1689; 
0x000b8faa: leave; idiv bh; add esp, 8; pop ebx; ret; 
0x0013232a: leave; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012ed8b: leave; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00118eb5: leave; ret 0x3b81; 
0x001190d9: leave; ret 0x8581; 
0x0005cb6d: leave; ret 4; 
0x00022fc8: leave; ret; 
0x0006acac: nop; aam 1; add byte ptr [eax], al; pop ebx; ret; 
0x000a32dc: nop; adc eax, 0x4589fff8; or byte ptr [ecx + 0x34890c55], cl; and al, 0xe8; ret 0xf816; 
0x00040746: nop; add al, 0; add al, ch; test eax, 0x81000caf; ret; 
0x000d9930: nop; add byte ptr [eax], al; add byte ptr [ecx - 0x2b17dbfc], cl; ret; 
0x0012b993: nop; add dword ptr [edx], eax; imul ecx, dword ptr [edx], 0xe; adc al, 0x41; ret; 
0x0013e4be: nop; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00109387: nop; and al, 4; add byte ptr [eax], al; ret; 
0x00142887: nop; and eax, 0xe0a6f02; adc al, 0x41; ret; 
0x0010b58f: nop; call 0x10b637; call 0x242b0; pop ebx; ret; 
0x0004407b: nop; call 0x10b6fc; add ecx, 0x10d003; mov eax, dword ptr [ecx + 0x6400]; ret; 
0x0004e06f: nop; fld qword ptr [esp + 4]; fistp dword ptr [esp + 4]; mov eax, dword ptr [esp + 4]; ret; 
0x0004e6cf: nop; fld qword ptr [esp + 4]; fabs; ret; 
0x000b656c: nop; in al, -0xa; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000565f5: nop; jo 0x565f8; add byte ptr [ebp - 0x76368b40], al; ret 0xf089; 
0x001066cf: nop; mov eax, 0x131; int 0x80; ret; 
0x000f4ddf: nop; mov eax, 0x14; int 0x80; ret; 
0x0007668f: nop; mov eax, 0x18; int 0x80; ret; 
0x000bd23f: nop; mov eax, 0x19; int 0x80; ret; 
0x0007667f: nop; mov eax, 0x1da; int 0x80; ret; 
0x0007655f: nop; mov eax, 0x1df; int 0x80; ret; 
0x000286df: nop; mov eax, 0x24; int 0x80; ret; 
0x000286ef: nop; mov eax, 0x27; int 0x80; ret; 
0x000bd24f: nop; mov eax, 0x2b; int 0x80; ret; 
0x0005d767: nop; mov eax, 0x2d; ret; 
0x0007669f: nop; mov eax, 0x2f; int 0x80; ret; 
0x000e0163: nop; mov eax, 0xffffffff; ret; 
0x0010a67f: nop; mov eax, 1; int 0x80; ret; 
0x000b99db: nop; mov eax, 2; ret; 
0x0004f7e3: nop; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0004e6df: nop; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x000f968f: nop; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x000f1d83: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0xc]; ret; 
0x000f8197: nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; add eax, 0xc; ret; 
0x0007facf: nop; mov eax, dword ptr [esp + 4]; xor edx, edx; div dword ptr [esp + 8]; ret; 
0x0007fadf: nop; mov eax, dword ptr [esp + 4]; cdq; idiv dword ptr [esp + 8]; ret; 
0x00060b6f: nop; mov edx, dword ptr [esp + 4]; lock inc dword ptr [edx]; ret; 
0x00060aef: nop; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [esp + 8]; lock add dword ptr [edx], eax; ret; 
0x00060b1f: nop; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [esp + 8]; lock and dword ptr [edx], eax; ret; 
0x00060b8f: nop; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [esp + 8]; lock or dword ptr [edx], eax; ret; 
0x0004e6ef: nop; movzx eax, word ptr [esp + 4]; xchg ah, al; ret; 
0x00128ac5: nop; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000a008b: nop; push 0x31000046; rol byte ptr [eax - 0x468bffc6], 0x83; rol byte ptr [ecx], 0x83; ret 0x8b10; 
0x0012c0ad: nop; push cs; adc al, 0x41; ret; 
0x00122f80: nop; ret 0xfff8; 
0x00026d3c: nop; ret 0xffff; 
0x0003f664: nop; ror byte ptr [eax + eax], 0x81; ret; 
0x000a79a3: nop; sbb al, 0x85; dec dword ptr [edi]; test dword ptr [0x83000001], ecx; ret 0x3901; 
0x00052e27: nop; xor eax, eax; cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x00036e83: nop; xor eax, eax; ret; 
0x000d8f41: nop; cld; inc dword ptr [ebx + 0x5e5b18c4]; ret; 
0x0004e6cd: nop; nop; fld qword ptr [esp + 4]; fabs; ret; 
0x000f4dde: nop; nop; mov eax, 0x14; int 0x80; ret; 
0x0007668d: nop; nop; mov eax, 0x18; int 0x80; ret; 
0x000bd23d: nop; nop; mov eax, 0x19; int 0x80; ret; 
0x0007667d: nop; nop; mov eax, 0x1da; int 0x80; ret; 
0x0007655d: nop; nop; mov eax, 0x1df; int 0x80; ret; 
0x000286de: nop; nop; mov eax, 0x24; int 0x80; ret; 
0x000286ed: nop; nop; mov eax, 0x27; int 0x80; ret; 
0x000bd24d: nop; nop; mov eax, 0x2b; int 0x80; ret; 
0x0007669d: nop; nop; mov eax, 0x2f; int 0x80; ret; 
0x0010146e: nop; nop; mov eax, 0xffffffff; ret; 
0x0010a67d: nop; nop; mov eax, 1; int 0x80; ret; 
0x000b99da: nop; nop; mov eax, 2; ret; 
0x0004e6de: nop; nop; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x000f1d82: nop; nop; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0xc]; ret; 
0x0004e6ee: nop; nop; movzx eax, word ptr [esp + 4]; xchg ah, al; ret; 
0x0005a00d: nop; nop; xor eax, eax; ret; 
0x0010146c: nop; nop; nop; mov eax, 0xffffffff; ret; 
0x000ba3bc: nop; nop; nop; mov eax, 2; ret; 
0x0005a00b: nop; nop; nop; xor eax, eax; ret; 
0x000c37b9: nop; nop; nop; nop; ret; 
0x000c37bb: nop; nop; nop; ret; 
0x000c121e: nop; nop; ret; 
0x0013efc8: nop; popfd; add dword ptr [eax], eax; out dx, al; ret 0xfff7; 
0x00026c3c: nop; ret; 
0x0005b904: popal; add dword ptr [eax], eax; add byte ptr [ebx - 0x7cdfdbac], cl; ret 0x8901; 
0x001388e5: popal; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x00135aa0: popal; add eax, dword ptr [ebx + 0x140e0a03]; inc ecx; ret; 
0x000f8eeb: popal; loope 0xf8ee0; dec dword ptr [ecx - 0x76e3dbbc]; ret 0xc085; 
0x000611f7: popal; or byte ptr [ecx + 0x71890c69], cl; adc byte ptr [ecx - 0x3fceeb87], cl; ret; 
0x00126dfd: popal; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127ceb: popal; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00116dc4: popal; ret; 
0x0013efc9: popfd; add dword ptr [eax], eax; out dx, al; ret 0xfff7; 
0x0012262d: popfd; add dword ptr [eax], eax; ret 0xf75c; 
0x00076f0f: popfd; call 0xc48b6f0f; adc al, 0x5b; pop esi; ret; 
0x0012a25a: popfd; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00067298: popfd; push cs; add byte ptr [ebx - 0x76dbdbbc], cl; ret 0xe283; 
0x00047ffb: popfd; ret 0xc283; 
0x0010df0c: popfd; ret 0xffee; 
0x0011faa8: popfd; ret 0xfff0; 
0x000c7f1f: popfd; ret; 
0x00129463: pushal; add bl, bh; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00141527: pushal; add cl, byte ptr [ebp + 0xa]; push cs; adc al, 0x41; ret; 
0x00134ba3: pushal; add dh, byte ptr [ebp + 0x41140e0a]; ret; 
0x0012539b: pushal; add dl, byte ptr [edx + 0x41140e0a]; ret; 
0x00131373: pushal; add ecx, dword ptr [ecx + eax]; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0012dfdb: pushal; add edi, dword ptr [0x140e0a01]; inc ecx; ret; 
0x000a9539: pushal; and al, 0; add byte ptr [ebx + 0x5e], bl; ret; 
0x0004e4dd: pushal; or byte ptr [ecx + 0x70890c68], cl; adc byte ptr [ecx - 0x3fceeb88], cl; ret; 
0x0012cb71: pushal; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00127df2: pushal; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00065654: pushal; pop ebx; pop esi; pop edi; ret; 
0x00139393: pushal; push cs; or al, 0x41; ret; 
0x0012081c: pushal; ret 0; 
0x000b9b1c: pushal; ret 0xfff6; 
0x00026d6c: pushal; ret 0xffff; 
0x0009d20c: pushal; xchg eax, edx; clc; inc dword ptr [ebx + 0x5e5b50c4]; ret; 
0x00013c78: pushal; ret; 
0x00005d29: pushfd; adc byte ptr [eax], al; ret 0; 
0x000a3cfc: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00120305: pushfd; add byte ptr [eax], al; push ds; ret; 
0x00088937: pushfd; add dword ptr [eax], eax; add byte ptr [ebp - 0x3cd237d], cl; dec dword ptr [ecx + 0x57e82404]; ret 0xfff9; 
0x0013eeed: pushfd; add dword ptr [eax], eax; ret; 
0x00027bbe: pushfd; cmpsb byte ptr [esi], byte ptr es:[edi]; sti; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000bb2b0: pushfd; mov ebx, 0xc483fff6; add al, 0x5b; pop esi; ret; 
0x00132dad: pushfd; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x001259d4: pushfd; pop es; add byte ptr [eax], al; ret; 
0x001314d4: pushfd; ret 0; 
0x00063548: pushfd; ret 0xcde9; 
0x000a207b: pushfd; ret 0xd284; 
0x001398e0: pushfd; ret 0xfff5; 
0x000d8360: pushfd; hlt; hlt; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x00097b10: pushfd; ret; 
0x000483bd: rdtsc; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x0000069c: ret; 
0x00126ebd: sahf; add dword ptr [edx], ecx; ret; 
0x00120829: sahf; dec eax; ret 0; 
0x000fd9b7: sahf; inc dword ptr [ebx + 0x5d5b14c4]; ret; 
0x0005b5ae: sahf; mov eax, 0xc483fffc; adc byte ptr [ebx + 0x5e], bl; ret; 
0x00128766: sahf; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013b0d7: sahf; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00143dc9: sahf; push cs; adc al, 0x41; ret; 
0x00124650: sahf; ret 0xfffc; 
0x0003790d: sahf; ret; 
0x0005d00a: salc; inc esp; and al, 4; fild qword ptr [esp + 4]; ret; 
0x001359e1: salc; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000d5d2b: salc; pop es; aaa; ret; 
0x0009f41e: salc; ret 6; 
0x0004a900: salc; shl dword ptr [edx - 0x36], -0x77; ret 0xf231; 
0x000b7ad6: salc; ret; 
0x00065c8b: salc; sti; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0012bba6: stc; adc ecx, dword ptr [edx]; push cs; adc al, 0x41; ret; 
0x00012589: stc; add al, byte ptr [eax]; ret 0; 
0x0005909b: stc; cmp dh, byte ptr [eax + edx - 0x73]; dec eax; add dword ptr [ecx - 0x7cd3dbb4], ecx; ret 0x3901; 
0x00091132: stc; dec dword ptr [ebx - 0x7cc7dbac]; ret 0x8901; 
0x001233e2: stc; dec dword ptr [esi + edi*8]; add dword ptr [eax], eax; ret 0xf9e0; 
0x0008920e: stc; inc dword ptr [ebp - 0x76f68b40]; ret 0xf089; 
0x00090f18: stc; inc dword ptr [ebx + 0x5e5b04c4]; pop edi; ret; 
0x00090c02: stc; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0008fa65: stc; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000920f6: stc; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x00087ce3: stc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000890f9: stc; inc dword ptr [ebx + 0x5e5b18c4]; pop edi; ret; 
0x001361f3: stc; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000a2ab3: stc; push ds; clc; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0008a5fc: stc; push dword ptr [ecx]; rol byte ptr [ebx - 0x6bf0fe08], cl; ret 0x1689; 
0x00005d24: stc; sbb eax, dword ptr [eax]; add byte ptr [esp + ebx*4], ah; adc byte ptr [eax], al; ret 0; 
0x0004e9ba: stc; sub byte ptr [edx + ebp - 0x80], dh; stc; sub dword ptr [esp + eax - 0x77], esi; ret 0xdfeb; 
0x0004e9bf: stc; sub dword ptr [esp + eax - 0x77], esi; ret 0xdfeb; 
0x000c807a: stc; cmc; inc dword ptr [ebx + 0x5e5b0cc4]; ret; 
0x00086ea3: stc; ret; 
0x000483a8: std; add dword ptr [edx + ebp - 0x77], esi; ret 0xeac1; 
0x000483a3: std; add esi, dword ptr [ebp + ebx - 0x7d]; std; add dword ptr [edx + ebp - 0x77], esi; ret 0xeac1; 
0x00047daa: std; dec dword ptr [ebx + 0x10c2454]; ret 0x542b; 
0x000463fe: std; dec dword ptr [ecx + 0x10c483f0]; pop ebx; pop esi; ret; 
0x00043905: std; dec dword ptr [ecx + 0x24c483f0]; pop ebx; pop esi; ret; 
0x0004d7b7: std; dec dword ptr [ecx + 0x2cc483f0]; pop ebx; pop esi; ret; 
0x00057255: std; inc dword ptr [ebp + 0x31e675c0]; rcr byte ptr [ebx + 0x66], 0x90; ret; 
0x00050c92: std; inc dword ptr [ebx + 0x5e5b08c4]; ret; 
0x0004d278: std; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0004dbf2: std; inc dword ptr [ebx + 0x5e5b14c4]; pop edi; ret; 
0x00052a6f: std; inc dword ptr [ebx + 0x5e5b1cc4]; ret; 
0x0004f0ae: std; inc dword ptr [ebx + 0x5e5b28c4]; pop edi; ret; 
0x000a9a8f: std; mov esp, 0xc483fff7; or al, 0x5b; ret; 
0x0003481f: std; or al, 0xff; inc dword ptr [ebx + 0x5e5b18c4]; ret; 
0x0010961a: std; or al, dl; mov byte ptr [ecx + 0x18], al; xor eax, eax; ret; 
0x0013afd9: std; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x000c4d6e: sti; add byte ptr [eax], al; add byte ptr [ebx - 0x7af0e706], al; ret 0; 
0x0007709d: sti; dec dword ptr [ecx + 0x1cc483f0]; pop ebx; pop esi; ret; 
0x000eec1f: sti; dec dword ptr [ecx + 0x8c483f0]; pop ebx; pop esi; ret; 
0x0005d84f: sti; dec dword ptr [ecx + 0xfa6f3ee]; xchg eax, edi; ror byte ptr [edi], 0x92; ret 0xd028; 
0x000488ae: sti; dec dword ptr [ecx - 0x1717dbfc]; ret 0xfffd; 
0x00054561: sti; dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; ret 2; 
0x0003b671: sti; dec dword ptr [ecx - 0x38f7dbbc]; inc esp; and al, 4; ret; 
0x000487e3: sti; dec dword ptr [ecx - 0x4c17dbfc]; ret; 
0x000f1dd1: sti; dec eax; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0007ca7b: sti; fdivp st(7); dec dword ptr [ebx - 0x7c8fdbac]; ret 0x8901; 
0x0006ab29: sti; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00027bc0: sti; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x0006ac16: sti; inc dword ptr [ebx + 0x5e5b28c4]; pop edi; ret; 
0x000ecc51: sti; mov eax, dword ptr [0xc483fff3]; add al, 0x5b; pop esi; ret; 
0x00135020: sti; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x00123be2: sti; push dword ptr [edi + esi + 2]; add byte ptr [ebx + ebp + 0x37b0fffb], cl; add al, byte ptr [eax]; ret; 
0x0003f3f9: sti; ret 0xc; 
0x00119049: sti; sal byte ptr [ebp - 0x164a245b], 0x5b; ret 0x3956; 
0x00096cad: sti; clc; lcall ptr [ecx + 0x5b08c483]; pop ebp; ret; 
0x00088908: wait; add dword ptr [eax], eax; add byte ptr [ebp - 0x3cd237d], cl; dec dword ptr [ecx - 0x7917dbfc]; ret 0xfff9; 
0x00131284: wait; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0013b137: wait; or cl, byte ptr [esi]; or al, 0x41; ret; 
0x00147521: wait; push cs; adc al, 0x41; ret; 
0x000909eb: wait; push es; or al, 0; mov eax, dword ptr [ecx + 0xb7cc]; ret; 
0x000f7624: wbinvd; ret 0x5589; 
0x001329ed: xlatb; add byte ptr [eax], al; ret 0xf3ae; 
0x0005ab14: xlatb; add byte ptr [ecx + 0x7efcb1], cl; add byte ptr [ecx + 0x7f00b9], cl; add byte ptr [esi + 0x5f], bl; ret; 
0x000641f6: xlatb; add byte ptr [ecx - 0x7e06760e], cl; ret 0; 
0x00122ebd: xlatb; add dword ptr [eax], eax; ret 0xf8ab; 
0x0014aa59: xlatb; add dword ptr [edx], ecx; push cs; adc al, 0x41; ret; 
0x000cb988: xlatb; dec edx; and eax, edx; ret; 
0x000f9655: xlatb; inc dword ptr [ebx + 0x5e5b10c4]; ret; 
0x000d69e5: xlatb; ljmp 0x5b0c:0xc483fff4; ret; 
0x00060d18: xlatb; mov ecx, dword ptr [esp + 4]; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0004dc85: xlatb; mov edi, ebp; inc dword ptr [ebx + 0x5e5b14c4]; pop edi; ret; 
0x0013d76a: xlatb; or byte ptr [edx], cl; push cs; adc al, 0x41; ret; 
0x0012d776: xlatb; or cl, byte ptr [esi]; adc al, 0x41; ret; 
0x0002c4e4: xlatb; pop esi; ret; 
0x0011fab8: xlatb; ret 0xfff0; 
0x000a7895: xlatb; ret; 

13634 gadgets found
